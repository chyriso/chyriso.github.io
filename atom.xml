<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chyris</title>
  
  <subtitle>code english</subtitle>
  <link href="https://chyriso.github.io/atom.xml" rel="self"/>
  
  <link href="https://chyriso.github.io/"/>
  <updated>2022-09-26T21:39:06.288Z</updated>
  <id>https://chyriso.github.io/</id>
  
  <author>
    <name>Chyris</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo插入图片修正</title>
    <link href="https://chyriso.github.io/2022/09/27/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E4%BF%AE%E6%AD%A3/"/>
    <id>https://chyriso.github.io/2022/09/27/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E4%BF%AE%E6%AD%A3/</id>
    <published>2022-09-26T21:09:29.000Z</published>
    <updated>2022-09-26T21:39:06.288Z</updated>
    
    <content type="html"><![CDATA[<p>今写文章时准备插入图片，发现 ms.sm 图床上传图片失败，遂打开之前的文章，果然图片不见了，使用图床的方法被证明是不稳定的，甚至它的官网也打不开…</p><p>根据<a href="https://hexo.io/zh-cn/docs/asset-folders">官方文档</a>，使用本地导入的方式，在图片数量比较少时，将图片存在本地或许是一个不错的选择。</p><p>资源（Asset）代表 source 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 source&#x2F;images 文件夹中。然后通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们。</p><p>这种方法非常简单，但是都在一个文件夹未免太乱，为了更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上。我选择了其它方式。</p><p>在站点目录下_config.yml中开启下列选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们。</p><p>可以使用以下相对路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_path slug %&#125;</span><br><span class="line">&#123;% asset_img slug [title] %&#125;</span><br><span class="line">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure><p>当你打开文章资源文件夹功能后，你把一个 example.jpg 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 <code>![](example.jpg)</code> ，它将 不会 出现在首页上。（但是它会在文章中按你期待的方式工作）</p><p>正确的引用图片方式是使用下列的标签插件而不是 markdown ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure><p>通过这种方式，图片将会同时出现在文章和主页以及归档页中。</p><p>test：<code>&#123;% asset_img example.jpg This is an example image %&#125;</code></p><img src="/2022/09/27/hexo%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E4%BF%AE%E6%AD%A3/example.webp" class="" title="This is an example image">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今写文章时准备插入图片，发现 ms.sm 图床上传图片失败，遂打开之前的文章，果然图片不见了，使用图床的方法被证明是不稳定的，甚至它的官网也打不开…&lt;/p&gt;
&lt;p&gt;根据&lt;a href=&quot;https://hexo.io/zh-cn/docs/asset-folders&quot;&gt;官方</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="website" scheme="https://chyriso.github.io/categories/major/website/"/>
    
    <category term="hexo" scheme="https://chyriso.github.io/categories/major/website/hexo/"/>
    
    
    <category term="hexo" scheme="https://chyriso.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>docker安装使用</title>
    <link href="https://chyriso.github.io/2022/09/26/docker%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
    <id>https://chyriso.github.io/2022/09/26/docker%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</id>
    <published>2022-09-26T09:00:13.000Z</published>
    <updated>2022-09-28T01:40:41.716Z</updated>
    
    <content type="html"><![CDATA[<h2 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h2><p>docker安装及使用文档，请参考<a href="https://docs.docker.com/">官方文档</a>。</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li>CentOS-7-x86_64-2009</li><li>xshell 连接远程服务器</li><li>没有远程服务器，使用<code>VMware-workstation-full-16.2.4-20089737 + CentOS-7-x86_64-DVD-2009.iso</code>自定义安装本地服务器。</li></ul><p>系统环境查看，内核版本3.10 以上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ pwd</span><br><span class="line">/home/chyris</span><br><span class="line">[chyris@localhost ~]$ uname -r</span><br><span class="line">3.10.0-1160.el7.x86_64</span><br></pre></td></tr></table></figure><p>查看系统版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ cat /etc/os-release</span><br><span class="line">NAME=&quot;CentOS Linux&quot;</span><br><span class="line">VERSION=&quot;7 (Core)&quot;</span><br><span class="line">ID=&quot;centos&quot;</span><br><span class="line">ID_LIKE=&quot;rhel fedora&quot;</span><br><span class="line">VERSION_ID=&quot;7&quot;</span><br><span class="line">PRETTY_NAME=&quot;CentOS Linux 7 (Core)&quot;</span><br><span class="line">ANSI_COLOR=&quot;0;31&quot;</span><br><span class="line">CPE_NAME=&quot;cpe:/o:centos:centos:7&quot;</span><br><span class="line">HOME_URL=&quot;https://www.centos.org/&quot;</span><br><span class="line">BUG_REPORT_URL=&quot;https://bugs.centos.org/&quot;</span><br><span class="line"></span><br><span class="line">CENTOS_MANTISBT_PROJECT=&quot;CentOS-7&quot;</span><br><span class="line">CENTOS_MANTISBT_PROJECT_VERSION=&quot;7&quot;</span><br><span class="line">REDHAT_SUPPORT_PRODUCT=&quot;centos&quot;</span><br><span class="line">REDHAT_SUPPORT_PRODUCT_VERSION=&quot;7&quot;</span><br></pre></td></tr></table></figure><p>以上环境准备没有问题，可以开始安装docker。</p><h3 id="docker-安装和卸载"><a href="#docker-安装和卸载" class="headerlink" title="docker 安装和卸载"></a>docker 安装和卸载</h3><p>参考<a href="https://docs.docker.com/engine/install/centos/">官方文档</a></p><p>卸载旧的版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$  sudo yum remove docker \</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">                  docker-client \</span></span><br><span class="line"><span class="language-bash">&gt;                   docker-client-latest \</span></span><br><span class="line"><span class="language-bash">&gt;                   docker-common \</span></span><br><span class="line"><span class="language-bash">&gt;                   docker-latest \</span></span><br><span class="line"><span class="language-bash">&gt;                   docker-latest-logrotate \</span></span><br><span class="line"><span class="language-bash">&gt;                   docker-logrotate \</span></span><br><span class="line"><span class="language-bash">&gt;                   docker-engine</span></span><br><span class="line"></span><br><span class="line">我们信任您已经从系统管理员那里了解了日常注意事项。</span><br><span class="line">总结起来无外乎这三点：</span><br><span class="line"></span><br><span class="line">    #1) 尊重别人的隐私。</span><br><span class="line">    #2) 输入前要先考虑(后果和风险)。</span><br><span class="line">    #3) 权力越大，责任越大。</span><br><span class="line"></span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line">已加载插件：fastestmirror, langpacks</span><br><span class="line">参数 docker 没有匹配</span><br><span class="line">参数 docker-client 没有匹配</span><br><span class="line">参数 docker-client-latest 没有匹配</span><br><span class="line">参数 docker-common 没有匹配</span><br><span class="line">参数 docker-latest 没有匹配</span><br><span class="line">参数 docker-latest-logrotate 没有匹配</span><br><span class="line">参数 docker-logrotate 没有匹配</span><br><span class="line">参数 docker-engine 没有匹配</span><br><span class="line">不删除任何软件包</span><br></pre></td></tr></table></figure><p>由于之前没有安装过docker，所以这里不删除任何软件包。</p><p>安装需要的安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo yum install -y yum-utils</span><br><span class="line">已加载插件：fastestmirror, langpacks</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirror.lzu.edu.cn</span><br><span class="line"> * extras: mirror.lzu.edu.cn</span><br><span class="line"> * updates: mirrors.bupt.edu.cn</span><br><span class="line">软件包 yum-utils-1.1.31-54.el7_8.noarch 已安装并且是最新版本</span><br><span class="line">无须任何处理</span><br></pre></td></tr></table></figure><p>设置镜像仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>由于默认使用国外的镜像源十很慢，因此设置使用国内镜像地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>出现以下内容阿里云镜像设置成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo yum-config-manager \</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">    --add-repo \</span></span><br><span class="line"><span class="language-bash">&gt;     http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line">已加载插件：fastestmirror, langpacks</span><br><span class="line">adding repo from: http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">grabbing file http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">repo saved to /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><p>更新yum软件包索引</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache fast</span><br></pre></td></tr></table></figure><p>安装docker引擎</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br></pre></td></tr></table></figure><p>上述操作将安装最新版的 Docker Engine, containerd, 和 Docker Compose</p><p>如果你不想安装最新版本的docker，可以指定版本安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum list docker-ce --showduplicates | sort -r</span><br><span class="line"></span><br><span class="line">sudo yum install docker-ce-&lt;VERSION_STRING&gt; docker-ce-cli-&lt;VERSION_STRING&gt; containerd.io docker-compose-plugin</span><br></pre></td></tr></table></figure><p>安装完成之后，启动docker，并查看docker信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line"></span><br><span class="line">docker version</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo systemctl start docker</span><br><span class="line">[chyris@localhost ~]$ sudo docker version</span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           20.10.18</span><br><span class="line"> API version:       1.41</span><br><span class="line"> Go version:        go1.18.6</span><br><span class="line"> Git commit:        b40c2f6</span><br><span class="line"> Built:             Thu Sep  8 23:14:08 2022</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Context:           default</span><br><span class="line"> Experimental:      true</span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          20.10.18</span><br><span class="line">  API version:      1.41 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.18.6</span><br><span class="line">  Git commit:       e42327a</span><br><span class="line">  Built:            Thu Sep  8 23:12:21 2022</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     false</span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.6.8</span><br><span class="line">  GitCommit:        9cd3357b7fd7218e4aec3eae239db1f68a5a6ec6</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.1.4</span><br><span class="line">  GitCommit:        v1.1.4-0-g5fd4c4d</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.19.0</span><br><span class="line">  GitCommit:        de40ad0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动hello-world</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker run hello-world</span><br><span class="line">Unable to find image &#x27;hello-world:latest&#x27; locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">2db29710123e: Pull complete </span><br><span class="line">Digest: sha256:62af9efd515a25f84961b70f973a798d2eca956b1b2b026d0a4a63a3b0b6a3f2</span><br><span class="line">Status: Downloaded newer image for hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"><span class="meta prompt_"> $ </span><span class="language-bash">docker run -it ubuntu bash</span></span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker images</span><br></pre></td></tr></table></figure><p>执行docker run 镜像 时，本地没有就去仓库pull一个镜像放到本地仓库。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker images</span><br><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">hello-world   latest    feb5d9fea6a5   12 months ago   13.3kB</span><br></pre></td></tr></table></figure><p>卸载docker分为两步</p><p>卸载依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br></pre></td></tr></table></figure><p>删除资源<br>Images, containers, volumes, or customized configuration files on your host are not automatically removed. To delete all images, containers, and volumes:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /var/lib/docker</span><br><span class="line">sudo rm -rf /var/lib/containerd</span><br></pre></td></tr></table></figure><p>&#x2F;var&#x2F;lib&#x2F;docker，docker的默认工作路径。</p><h2 id="阿里云镜像加速"><a href="#阿里云镜像加速" class="headerlink" title="阿里云镜像加速"></a>阿里云镜像加速</h2><p>注册并登录<a href="https://www.aliyun.com/?utm_content=se_1008364713">阿里云</a>账号，进入控制台，在弹性计算中找到容器镜像服务，就可以看到centos的镜像加速器地址以及配置方法。</p><p>配置镜像加速器，通过修改daemon配置文件&#x2F;etc&#x2F;docker&#x2F;daemon.json来使用加速器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://xxxxx.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="docker常用命令"><a href="#docker常用命令" class="headerlink" title="docker常用命令"></a>docker常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker version      # 显示版本信息</span><br><span class="line">docker info         # 显示docker的系统信息，包括镜像和容器</span><br><span class="line">docker 命令 --help  # 帮助命令</span><br></pre></td></tr></table></figure><p>查看官方<a href="https://docs.docker.com/reference/">帮助文档</a></p><h3 id="docker-images-镜像命令"><a href="#docker-images-镜像命令" class="headerlink" title="docker images 镜像命令"></a>docker images 镜像命令</h3><p>查看所有本地主机上的镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker images</span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">hello-world   latest    feb5d9fea6a5   12 months ago   13.3kB</span><br></pre></td></tr></table></figure><p>REPOSITORY  镜像仓库源<br>TAG         镜像标签<br>IMAGE ID    镜像的id<br>CREATED     镜像的创建时间<br>SIZE        镜像的大小</p><p>查看可选项</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker images --help</span><br><span class="line"></span><br><span class="line">Usage:  docker images [OPTIONS] [REPOSITORY[:TAG]]</span><br><span class="line"></span><br><span class="line">List images</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -a, --all             Show all images (default hides intermediate images)</span><br><span class="line">      --digests         Show digests</span><br><span class="line">  -f, --filter filter   Filter output based on conditions provided</span><br><span class="line">      --format string   Pretty-print images using a Go template</span><br><span class="line">      --no-trunc        Don&#x27;t truncate output</span><br><span class="line">  -q, --quiet           Only show image IDs</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="docker-search-搜索镜像"><a href="#docker-search-搜索镜像" class="headerlink" title="docker search 搜索镜像"></a>docker search 搜索镜像</h3><p>在<a href="https://hub.docker.com/">hub.docker</a>可以手动搜索镜像并提示操作，这里使用search命令搜索。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search nginx</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker search nginx</span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line">NAME                                              DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">nginx                                             Official build of Nginx.                        17444     [OK]       </span><br><span class="line">linuxserver/nginx                                 An Nginx container, brought to you by LinuxS…   178                  </span><br><span class="line">bitnami/nginx                                     Bitnami nginx Docker Image                      140                  [OK]</span><br><span class="line">ubuntu/nginx                                      Nginx, a high-performance reverse proxy &amp; we…   61                   </span><br><span class="line">bitnami/nginx-ingress-controller                  Bitnami Docker Image for NGINX Ingress Contr…   20                   [OK]</span><br><span class="line">rancher/nginx-ingress-controller                                                                  11                   </span><br><span class="line">webdevops/nginx                                   Nginx container                                 10                   [OK]</span><br><span class="line">ibmcom/nginx-ingress-controller                   Docker Image for IBM Cloud Private-CE (Commu…   4                    </span><br><span class="line">bitnami/nginx-ldap-auth-daemon                                                                    3                    </span><br><span class="line">rancher/nginx                                                                                     2                    </span><br><span class="line">kasmweb/nginx                                     An Nginx image based off nginx:alpine and in…   2                    </span><br><span class="line">vmware/nginx                                                                                      2                    </span><br><span class="line">rancher/nginx-ingress-controller-defaultbackend                                                   2                   </span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker search --help</span><br><span class="line"></span><br><span class="line">Usage:  docker search [OPTIONS] TERM</span><br><span class="line"></span><br><span class="line">Search the Docker Hub for images</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -f, --filter filter   Filter output based on conditions provided</span><br><span class="line">      --format string   Pretty-print search using a Go template</span><br><span class="line">      --limit int       Max number of search results (default 25)</span><br><span class="line">      --no-trunc        Don&#x27;t truncate output</span><br></pre></td></tr></table></figure><p>搜索出stars&gt;100的所有镜像(收藏数大于100)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker search nginx --filter=STARS=100</span><br><span class="line">NAME                DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">nginx               Official build of Nginx.                        17444     [OK]       </span><br><span class="line">linuxserver/nginx   An Nginx container, brought to you by LinuxS…   178                  </span><br><span class="line">bitnami/nginx       Bitnami nginx Docker Image                      140                  [OK]</span><br></pre></td></tr></table></figure><h3 id="docker-pull-下载镜像"><a href="#docker-pull-下载镜像" class="headerlink" title="docker pull 下载镜像"></a>docker pull 下载镜像</h3><p>查看命令帮助</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker pull --help</span><br><span class="line"></span><br><span class="line">Usage:  docker pull [OPTIONS] NAME[:TAG|@DIGEST]</span><br><span class="line"></span><br><span class="line">Pull an image or a repository from a registry</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -a, --all-tags                Download all tagged images in the repository</span><br><span class="line">      --disable-content-trust   Skip image verification (default true)</span><br><span class="line">      --platform string         Set platform if server is multi-platform capable</span><br><span class="line">  -q, --quiet                   Suppress verbose output</span><br></pre></td></tr></table></figure><p>下载镜像 docker pull 镜像名[:tag]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker pull mysql</span><br><span class="line">Using default tag: latest   # 不写tag，默认就是下载latest最新版镜像</span><br><span class="line">latest: Pulling from library/mysql</span><br><span class="line">72a69066d2fe: Pull complete # 分层下载，docker image的核心 联合文件系统</span><br><span class="line">93619dbc5b36: Pull complete </span><br><span class="line">99da31dd6142: Pull complete </span><br><span class="line">626033c43d70: Pull complete </span><br><span class="line">37d5d7efb64e: Pull complete </span><br><span class="line">ac563158d721: Pull complete </span><br><span class="line">d2ba16033dad: Pull complete </span><br><span class="line">688ba7d5c01a: Pull complete </span><br><span class="line">00e060b6d11d: Pull complete </span><br><span class="line">1c04857f594f: Pull complete </span><br><span class="line">4d7cfa90e6ea: Pull complete </span><br><span class="line">e0431212d27d: Pull complete </span><br><span class="line">Digest: sha256:e9027fe4d91c0153429607251656806cc784e914937271037f7738bd5b8e7709 # 签名防伪标志</span><br><span class="line">Status: Downloaded newer image for mysql:latest</span><br><span class="line">docker.io/library/mysql:latest  # 真实地址</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下两个命令等价：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql</span><br><span class="line">docker pull docker.io/library/mysql:latest  # 真实地址</span><br></pre></td></tr></table></figure><p>指定版本下载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull mysql:5.7</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker pull mysql:5.7</span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line">5.7: Pulling from library/mysql</span><br><span class="line">72a69066d2fe: Already exists </span><br><span class="line">93619dbc5b36: Already exists </span><br><span class="line">99da31dd6142: Already exists </span><br><span class="line">626033c43d70: Already exists </span><br><span class="line">37d5d7efb64e: Already exists </span><br><span class="line">ac563158d721: Already exists </span><br><span class="line">d2ba16033dad: Already exists </span><br><span class="line">0ceb82207cd7: Pull complete </span><br><span class="line">37f2405cae96: Pull complete </span><br><span class="line">e2482e017e53: Pull complete </span><br><span class="line">70deed891d42: Pull complete </span><br><span class="line">Digest: sha256:f2ad209efe9c67104167fc609cca6973c8422939491c9345270175a300419f94</span><br><span class="line">Status: Downloaded newer image for mysql:5.7</span><br><span class="line">docker.io/library/mysql:5.7</span><br></pre></td></tr></table></figure><p>Already exists: 在联合文件系统中的与mysql:lasted下载时公用的层级，5.7版本下载时直接加载即可，无需主动下载，而下面的层级存在差异，因此需要重新下载。</p><p>全部下载完成，此时即可查看所有镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">mysql         5.7       c20987f18b13   9 months ago    448MB</span><br><span class="line">mysql         latest    3218b38490ce   9 months ago    516MB</span><br><span class="line">hello-world   latest    feb5d9fea6a5   12 months ago   13.3kB</span><br></pre></td></tr></table></figure><h3 id="docker-rmi-删除镜像"><a href="#docker-rmi-删除镜像" class="headerlink" title="docker rmi 删除镜像"></a>docker rmi 删除镜像</h3><p>查看命令帮助</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker rmi --help</span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line"></span><br><span class="line">Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]</span><br><span class="line"></span><br><span class="line">Remove one or more images</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -f, --force      Force removal of the image</span><br><span class="line">      --no-prune   Do not delete untagged parents</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>删除指定镜像：<code>sudo docker rmi -f 镜像id</code></p><p>删除多个镜像：<code>sudo docker rmi -f 镜像id 镜像id 镜像id</code></p><p>删除全部镜像：<code>sudo docker rmi -f $(sudo docker images -aq)</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rmi -f c20987f18b13</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker images -a</span><br><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">mysql         5.7       c20987f18b13   9 months ago    448MB</span><br><span class="line">mysql         latest    3218b38490ce   9 months ago    516MB</span><br><span class="line">hello-world   latest    feb5d9fea6a5   12 months ago   13.3kB</span><br><span class="line">[chyris@localhost ~]$ ^C</span><br><span class="line">[chyris@localhost ~]$ sudo docker rmi -f c20987f18b13</span><br><span class="line">Untagged: mysql:5.7</span><br><span class="line">Untagged: mysql@sha256:f2ad209efe9c67104167fc609cca6973c8422939491c9345270175a300419f94</span><br><span class="line">Deleted: sha256:c20987f18b130f9d144c9828df630417e2a9523148930dc3963e9d0dab302a76</span><br><span class="line">Deleted: sha256:6567396b065ee734fb2dbb80c8923324a778426dfd01969f091f1ab2d52c7989</span><br><span class="line">Deleted: sha256:0910f12649d514b471f1583a16f672ab67e3d29d9833a15dc2df50dd5536e40f</span><br><span class="line">Deleted: sha256:6682af2fb40555c448b84711c7302d0f86fc716bbe9c7dc7dbd739ef9d757150</span><br><span class="line">Deleted: sha256:5c062c3ac20f576d24454e74781511a5f96739f289edaadf2de934d06e910b92</span><br><span class="line">[chyris@localhost ~]$ sudo docker images -a</span><br><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">mysql         latest    3218b38490ce   9 months ago    516MB</span><br><span class="line">hello-world   latest    feb5d9fea6a5   12 months ago   13.3kB</span><br><span class="line">[chyris@localhost ~]$ sudo docker rmi -f $(sudo docker images -aq)</span><br><span class="line">Untagged: mysql:latest</span><br><span class="line">Untagged: mysql@sha256:e9027fe4d91c0153429607251656806cc784e914937271037f7738bd5b8e7709</span><br><span class="line">Deleted: sha256:3218b38490cec8d31976a40b92e09d61377359eab878db49f025e5d464367f3b</span><br><span class="line">Deleted: sha256:aa81ca46575069829fe1b3c654d9e8feb43b4373932159fe2cad1ac13524a2f5</span><br><span class="line">Deleted: sha256:0558823b9fbe967ea6d7174999be3cc9250b3423036370dc1a6888168cbd224d</span><br><span class="line">Deleted: sha256:a46013db1d31231a0e1bac7eeda5ad4786dea0b1773927b45f92ea352a6d7ff9</span><br><span class="line">Deleted: sha256:af161a47bb22852e9e3caf39f1dcd590b64bb8fae54315f9c2e7dc35b025e4e3</span><br><span class="line">Deleted: sha256:feff1495e6982a7e91edc59b96ea74fd80e03674d92c7ec8a502b417268822ff</span><br><span class="line">Deleted: sha256:8805862fcb6ef9deb32d4218e9e6377f35fb351a8be7abafdf1da358b2b287ba</span><br><span class="line">Deleted: sha256:872d2f24c4c64a6795e86958fde075a273c35c82815f0a5025cce41edfef50c7</span><br><span class="line">Deleted: sha256:6fdb3143b79e1be7181d32748dd9d4a845056dfe16ee4c827410e0edef5ad3da</span><br><span class="line">Deleted: sha256:b0527c827c82a8f8f37f706fcb86c420819bb7d707a8de7b664b9ca491c96838</span><br><span class="line">Deleted: sha256:75147f61f29796d6528486d8b1f9fb5d122709ea35620f8ffcea0e0ad2ab0cd0</span><br><span class="line">Deleted: sha256:2938c71ddf01643685879bf182b626f0a53b1356138ef73c40496182e84548aa</span><br><span class="line">Deleted: sha256:ad6b69b549193f81b039a1d478bc896f6e460c77c1849a4374ab95f9a3d2cea2</span><br><span class="line">Untagged: hello-world:latest</span><br><span class="line">Untagged: hello-world@sha256:62af9efd515a25f84961b70f973a798d2eca956b1b2b026d0a4a63a3b0b6a3f2</span><br><span class="line">Deleted: sha256:feb5d9fea6a5e9606aa995e879d862b825965ba48de054caab5ef356dc6b3412</span><br><span class="line">[chyris@localhost ~]$ sudo docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID   CREATED   SIZE</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="容器命令"><a href="#容器命令" class="headerlink" title="容器命令"></a>容器命令</h2><p>使用docker run一个镜像，即可创建一个容器</p><p>下载一个最新版本的centos</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull centos</span><br></pre></td></tr></table></figure><h3 id="新建容器并启动"><a href="#新建容器并启动" class="headerlink" title="新建容器并启动"></a>新建容器并启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run [可选参数] image</span><br></pre></td></tr></table></figure><p>查看docker run 参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run --help</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>–name&#x3D;”name” 创建容器时命名</li><li>-d            后台方式运行，nohup</li><li>-it           使用交互方式运行，进入容器查看内容</li><li>-p            指定容器端口 -p 8080:8080<ul><li>-ip:主机端口：容器端口</li><li>-p 主机端口：容器端口</li><li>-p 容器端口 不往外走</li><li>容器端口</li></ul></li><li>-P            随机指定端口</li></ul><p>启动并进入容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker run -it centos /bin/bash</span><br><span class="line">[root@239ce122ad01 /]# </span><br></pre></td></tr></table></figure><p>查看容器内的centos</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker run -it centos /bin/bash</span><br><span class="line">[root@239ce122ad01 /]# ls</span><br><span class="line">bin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var</span><br><span class="line">[root@239ce122ad01 /]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从容器退回主机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@239ce122ad01 /]# exit</span><br><span class="line">exit</span><br><span class="line">[chyris@localhost ~]$ </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="列出所有运行的容器"><a href="#列出所有运行的容器" class="headerlink" title="列出所有运行的容器"></a>列出所有运行的容器</h3><p>docker ps 命令</p><p><code>docker ps</code> 列出当前正在运行的容器</p><p><code>docker ps -a</code> 列出当前正在运行的容器+历史运行过的容器</p><p><code>docker ps -n=?</code> 显示最近创建的容器</p><p><code>docker ps -a -n=?</code> 显示最近创建的容器</p><p><code>docker ps -q</code> 只显示容器的编号</p><p><code>docker ps -aq</code> 显示所有容器的编号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker ps</span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br><span class="line">[chyris@localhost ~]$ sudo docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND       CREATED         STATUS                     PORTS     NAMES</span><br><span class="line">239ce122ad01   centos         &quot;/bin/bash&quot;   8 minutes ago   Exited (0) 4 minutes ago             keen_pascal</span><br><span class="line">1abb8920fce6   feb5d9fea6a5   &quot;/hello&quot;      3 hours ago     Exited (0) 3 hours ago               angry_kalam</span><br><span class="line">[chyris@localhost ~]$ sudo docker ps -a -n=2</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                      PORTS     NAMES</span><br><span class="line">239ce122ad01   centos         &quot;/bin/bash&quot;   22 minutes ago   Exited (0) 18 minutes ago             keen_pascal</span><br><span class="line">1abb8920fce6   feb5d9fea6a5   &quot;/hello&quot;      4 hours ago      Exited (0) 4 hours ago                angry_kalam</span><br><span class="line">[chyris@localhost ~]$ sudo docker ps -a -n=1</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS                      PORTS     NAMES</span><br><span class="line">239ce122ad01   centos    &quot;/bin/bash&quot;   22 minutes ago   Exited (0) 18 minutes ago             keen_pascal</span><br><span class="line">[chyris@localhost ~]$ sudo docker ps -n=1</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS                      PORTS     NAMES</span><br><span class="line">239ce122ad01   centos    &quot;/bin/bash&quot;   22 minutes ago   Exited (0) 18 minutes ago             keen_pascal</span><br><span class="line">[chyris@localhost ~]$ sudo docker ps -aq</span><br><span class="line">239ce122ad01</span><br><span class="line">1abb8920fce6</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="退出容器"><a href="#退出容器" class="headerlink" title="退出容器"></a>退出容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit 直接停止容器并退出</span><br><span class="line">Ctrl + P + Q 容器不停止退出</span><br></pre></td></tr></table></figure><p>进入容器后执行 <code>Ctrl + P + Q</code> ，即可退出容器而不停止</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br><span class="line">[chyris@localhost ~]$ sudo docker run -it centos /bin/bash</span><br><span class="line">[root@79e553547440 /]# [chyris@localhost ~]$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS          PORTS     NAMES</span><br><span class="line">79e553547440   centos    &quot;/bin/bash&quot;   46 seconds ago   Up 45 seconds             xenodochial_banzai</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h3><p>删除指定容器，不能删除正在运行的容器，如果要强制删除<code>sudo docker rm -f 容器id</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rm 容器id</span><br></pre></td></tr></table></figure><p>删除所有容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rm -f $(docker ps -aq)</span><br></pre></td></tr></table></figure><p>删除所有容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker ps -a -q|xargs docker rm</span><br></pre></td></tr></table></figure><h3 id="停止和启动容器"><a href="#停止和启动容器" class="headerlink" title="停止和启动容器"></a>停止和启动容器</h3><p>启动一个容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker start 容器id</span><br></pre></td></tr></table></figure><p>重启一个容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker restart 容器id</span><br></pre></td></tr></table></figure><p>停止一个正在运行的容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker stop 容器id</span><br></pre></td></tr></table></figure><p>强制停止一个容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker kill 容器id</span><br></pre></td></tr></table></figure><h2 id="常用其它命令"><a href="#常用其它命令" class="headerlink" title="常用其它命令"></a>常用其它命令</h2><h3 id="后台启动容器"><a href="#后台启动容器" class="headerlink" title="后台启动容器"></a>后台启动容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker run -d centos</span><br><span class="line">e3cd4778bdf6bf56b1e70dd5f5900280a5e5347bd6993657ea75751292007cba</span><br><span class="line">[chyris@localhost ~]$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br></pre></td></tr></table></figure><p>后台启动容器后，centos停止了：容器使用后台运行，必须要一个前台进程。docker发现没有应用，就会自动停止。</p><h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><p>查看帮助</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker logs --help</span><br><span class="line"></span><br><span class="line">Usage:  docker logs [OPTIONS] CONTAINER</span><br><span class="line"></span><br><span class="line">Fetch the logs of a container</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">      --details        Show extra details provided to logs</span><br><span class="line">  -f, --follow         Follow log output</span><br><span class="line">      --since string   Show logs since timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)</span><br><span class="line">  -n, --tail string    Number of lines to show from the end of the logs (default &quot;all&quot;)</span><br><span class="line">  -t, --timestamps     Show timestamps</span><br><span class="line">      --until string   Show logs before a timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看并无日志</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker logs -f -t --tail number 容器id</span><br></pre></td></tr></table></figure><p>编写shell脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d centos /bin/bash -c &quot;while true;do echo xxx;sleep 2;done&quot;</span><br></pre></td></tr></table></figure><p><code>-tf</code> 显示日志<br><code>-f</code> follow output,实时追踪<br><code>-t</code> 日志显示时间戳<br><code>-- tail number</code> 要显示日志条数</p><p>shell运行脚本的两种方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash xx.sh</span><br><span class="line">bash -c &quot;cmd string&quot;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br><span class="line">[chyris@localhost ~]$ sudo docker run -d centos /bin/bash -c &quot;while true;do echo xxx;sleep 2;done&quot;</span><br><span class="line">72fa3d3ba58022654e8dcb215c71364c0a5addb69cc5850608a54bf9dabf6b6c</span><br><span class="line">[chyris@localhost ~]$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS        PORTS     NAMES</span><br><span class="line">72fa3d3ba580   centos    &quot;/bin/bash -c &#x27;while…&quot;   2 seconds ago   Up 1 second             vigilant_brown</span><br><span class="line">[chyris@localhost ~]$ sudo docker logs -f -t --tail 10 72fa3d3ba580</span><br><span class="line">2022-09-26T18:03:31.634395615Z xxx</span><br><span class="line">2022-09-26T18:03:33.636541123Z xxx</span><br><span class="line">2022-09-26T18:03:35.639232025Z xxx</span><br><span class="line">2022-09-26T18:03:37.641563794Z xxx</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="查看容器中的进程-类似linux中的ps命令"><a href="#查看容器中的进程-类似linux中的ps命令" class="headerlink" title="查看容器中的进程[类似linux中的ps命令]"></a>查看容器中的进程[类似linux中的ps命令]</h3><p>查看top命令帮助</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker top --help</span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line"></span><br><span class="line">Usage:  docker top CONTAINER [ps OPTIONS]</span><br><span class="line"></span><br><span class="line">Display the running processes of a container</span><br></pre></td></tr></table></figure><p>查看容器内进程信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker top 容器id</span><br></pre></td></tr></table></figure><p>查看指定容器内部的进程信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES</span><br><span class="line">8f4f718740a2   centos    &quot;/bin/bash -c &#x27;while…&quot;   12 seconds ago   Up 11 seconds             goofy_hoover</span><br><span class="line">[chyris@localhost ~]$ sudo docker top 8f4f718740a2</span><br><span class="line">UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD</span><br><span class="line">root                11722               11700               0                   02:29               ?                   00:00:00            /bin/bash -c while true;do echo xxx;sleep 2;done</span><br><span class="line">root                11815               11722               0                   02:29               ?                   00:00:00            /usr/bin/coreutils --coreutils-prog-shebang=sleep /usr/bin/sleep 2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>UID</code> 用户ID、<code>PID</code> 当前进程ID、<code>PPID</code> 父进程ID</p><h3 id="查看镜像的元数据"><a href="#查看镜像的元数据" class="headerlink" title="查看镜像的元数据"></a>查看镜像的元数据</h3><p>查看inspect帮助文档</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker inspect --help</span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line"></span><br><span class="line">Usage:  docker inspect [OPTIONS] NAME|ID [NAME|ID...]</span><br><span class="line"></span><br><span class="line">Return low-level information on Docker objects</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -f, --format string   Format the output using the given Go template</span><br><span class="line">  -s, --size            Display total file sizes if the type is container</span><br><span class="line">      --type string     Return JSON for specified type</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看容器信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker inspect 容器id</span><br></pre></td></tr></table></figure><p>查看指定容器信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker run -d centos /bin/bash -c &quot;while true;do echo xxx;sleep 2;done&quot;</span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line">9b8dfbb1a7b5a8c279b231e235cd268c8494b34a0841b245483a3c4d90ed98a5</span><br><span class="line">[chyris@localhost ~]$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES</span><br><span class="line">9b8dfbb1a7b5   centos    &quot;/bin/bash -c &#x27;while…&quot;   23 seconds ago   Up 22 seconds             distracted_nobel</span><br><span class="line">[chyris@localhost ~]$ sudo docker inspect 9b8dfbb1a7b5</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Id&quot;: &quot;9b8dfbb1a7b5a8c279b231e235cd268c8494b34a0841b245483a3c4d90ed98a5&quot;,</span><br><span class="line">        &quot;Created&quot;: &quot;2022-09-26T19:16:02.833443366Z&quot;,</span><br><span class="line">        &quot;Path&quot;: &quot;/bin/bash&quot;,</span><br><span class="line">        &quot;Args&quot;: [</span><br><span class="line">            &quot;-c&quot;,</span><br><span class="line">            &quot;while true;do echo xxx;sleep 2;done&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;State&quot;: &#123;</span><br><span class="line">            &quot;Status&quot;: &quot;running&quot;,</span><br><span class="line">            &quot;Running&quot;: true,</span><br><span class="line">            &quot;Paused&quot;: false,</span><br><span class="line">            &quot;Restarting&quot;: false,</span><br><span class="line">            &quot;OOMKilled&quot;: false,</span><br><span class="line">            &quot;Dead&quot;: false,</span><br><span class="line">            &quot;Pid&quot;: 12654,</span><br><span class="line">            &quot;ExitCode&quot;: 0,</span><br><span class="line">            &quot;Error&quot;: &quot;&quot;,</span><br><span class="line">            &quot;StartedAt&quot;: &quot;2022-09-26T19:16:03.278295629Z&quot;,</span><br><span class="line">            &quot;FinishedAt&quot;: &quot;0001-01-01T00:00:00Z&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Image&quot;: &quot;sha256:5d0da3dc976460b72c77d94c8a1ad043720b0416bfc16c52c45d4847e53fadb6&quot;,</span><br><span class="line">        &quot;ResolvConfPath&quot;: &quot;/var/lib/docker/containers/9b8dfbb1a7b5a8c279b231e235cd268c8494b34a0841b245483a3c4d90ed98a5/resolv.conf&quot;,</span><br><span class="line">        &quot;HostnamePath&quot;: &quot;/var/lib/docker/containers/9b8dfbb1a7b5a8c279b231e235cd268c8494b34a0841b245483a3c4d90ed98a5/hostname&quot;,</span><br><span class="line">        &quot;HostsPath&quot;: &quot;/var/lib/docker/containers/9b8dfbb1a7b5a8c279b231e235cd268c8494b34a0841b245483a3c4d90ed98a5/hosts&quot;,</span><br><span class="line">        &quot;LogPath&quot;: &quot;/var/lib/docker/containers/9b8dfbb1a7b5a8c279b231e235cd268c8494b34a0841b245483a3c4d90ed98a5/9b8dfbb1a7b5a8c279b231e235cd268c8494b34a0841b245483a3c4d90ed98a5-json.log&quot;,</span><br><span class="line">        &quot;Name&quot;: &quot;/distracted_nobel&quot;,</span><br><span class="line">        &quot;RestartCount&quot;: 0,</span><br><span class="line">        &quot;Driver&quot;: &quot;overlay2&quot;,</span><br><span class="line">        &quot;Platform&quot;: &quot;linux&quot;,</span><br><span class="line">        &quot;MountLabel&quot;: &quot;&quot;,</span><br><span class="line">        &quot;ProcessLabel&quot;: &quot;&quot;,</span><br><span class="line">        &quot;AppArmorProfile&quot;: &quot;&quot;,</span><br><span class="line">        &quot;ExecIDs&quot;: null,</span><br><span class="line">        &quot;HostConfig&quot;: &#123;</span><br><span class="line">            &quot;Binds&quot;: null,</span><br><span class="line">            &quot;ContainerIDFile&quot;: &quot;&quot;,</span><br><span class="line">            &quot;LogConfig&quot;: &#123;</span><br><span class="line">                &quot;Type&quot;: &quot;json-file&quot;,</span><br><span class="line">                &quot;Config&quot;: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;NetworkMode&quot;: &quot;default&quot;,</span><br><span class="line">            &quot;PortBindings&quot;: &#123;&#125;,</span><br><span class="line">            &quot;RestartPolicy&quot;: &#123;</span><br><span class="line">                &quot;Name&quot;: &quot;no&quot;,</span><br><span class="line">                &quot;MaximumRetryCount&quot;: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;AutoRemove&quot;: false,</span><br><span class="line">            &quot;VolumeDriver&quot;: &quot;&quot;,</span><br><span class="line">            &quot;VolumesFrom&quot;: null,</span><br><span class="line">            &quot;CapAdd&quot;: null,</span><br><span class="line">            &quot;CapDrop&quot;: null,</span><br><span class="line">            &quot;CgroupnsMode&quot;: &quot;host&quot;,</span><br><span class="line">            &quot;Dns&quot;: [],</span><br><span class="line">            &quot;DnsOptions&quot;: [],</span><br><span class="line">            &quot;DnsSearch&quot;: [],</span><br><span class="line">            &quot;ExtraHosts&quot;: null,</span><br><span class="line">            &quot;GroupAdd&quot;: null,</span><br><span class="line">            &quot;IpcMode&quot;: &quot;private&quot;,</span><br><span class="line">            &quot;Cgroup&quot;: &quot;&quot;,</span><br><span class="line">            &quot;Links&quot;: null,</span><br><span class="line">            &quot;OomScoreAdj&quot;: 0,</span><br><span class="line">            &quot;PidMode&quot;: &quot;&quot;,</span><br><span class="line">            &quot;Privileged&quot;: false,</span><br><span class="line">            &quot;PublishAllPorts&quot;: false,</span><br><span class="line">            &quot;ReadonlyRootfs&quot;: false,</span><br><span class="line">            &quot;SecurityOpt&quot;: null,</span><br><span class="line">            &quot;UTSMode&quot;: &quot;&quot;,</span><br><span class="line">            &quot;UsernsMode&quot;: &quot;&quot;,</span><br><span class="line">            &quot;ShmSize&quot;: 67108864,</span><br><span class="line">            &quot;Runtime&quot;: &quot;runc&quot;,</span><br><span class="line">            &quot;ConsoleSize&quot;: [</span><br><span class="line">                0,</span><br><span class="line">                0</span><br><span class="line">            ],</span><br><span class="line">            &quot;Isolation&quot;: &quot;&quot;,</span><br><span class="line">            &quot;CpuShares&quot;: 0,</span><br><span class="line">            &quot;Memory&quot;: 0,</span><br><span class="line">            &quot;NanoCpus&quot;: 0,</span><br><span class="line">            &quot;CgroupParent&quot;: &quot;&quot;,</span><br><span class="line">            &quot;BlkioWeight&quot;: 0,</span><br><span class="line">            &quot;BlkioWeightDevice&quot;: [],</span><br><span class="line">            &quot;BlkioDeviceReadBps&quot;: null,</span><br><span class="line">            &quot;BlkioDeviceWriteBps&quot;: null,</span><br><span class="line">            &quot;BlkioDeviceReadIOps&quot;: null,</span><br><span class="line">            &quot;BlkioDeviceWriteIOps&quot;: null,</span><br><span class="line">            &quot;CpuPeriod&quot;: 0,</span><br><span class="line">            &quot;CpuQuota&quot;: 0,</span><br><span class="line">            &quot;CpuRealtimePeriod&quot;: 0,</span><br><span class="line">            &quot;CpuRealtimeRuntime&quot;: 0,</span><br><span class="line">            &quot;CpusetCpus&quot;: &quot;&quot;,</span><br><span class="line">            &quot;CpusetMems&quot;: &quot;&quot;,</span><br><span class="line">            &quot;Devices&quot;: [],</span><br><span class="line">            &quot;DeviceCgroupRules&quot;: null,</span><br><span class="line">            &quot;DeviceRequests&quot;: null,</span><br><span class="line">            &quot;KernelMemory&quot;: 0,</span><br><span class="line">            &quot;KernelMemoryTCP&quot;: 0,</span><br><span class="line">            &quot;MemoryReservation&quot;: 0,</span><br><span class="line">            &quot;MemorySwap&quot;: 0,</span><br><span class="line">            &quot;MemorySwappiness&quot;: null,</span><br><span class="line">            &quot;OomKillDisable&quot;: false,</span><br><span class="line">            &quot;PidsLimit&quot;: null,</span><br><span class="line">            &quot;Ulimits&quot;: null,</span><br><span class="line">            &quot;CpuCount&quot;: 0,</span><br><span class="line">            &quot;CpuPercent&quot;: 0,</span><br><span class="line">            &quot;IOMaximumIOps&quot;: 0,</span><br><span class="line">            &quot;IOMaximumBandwidth&quot;: 0,</span><br><span class="line">            &quot;MaskedPaths&quot;: [</span><br><span class="line">                &quot;/proc/asound&quot;,</span><br><span class="line">                &quot;/proc/acpi&quot;,</span><br><span class="line">                &quot;/proc/kcore&quot;,</span><br><span class="line">                &quot;/proc/keys&quot;,</span><br><span class="line">                &quot;/proc/latency_stats&quot;,</span><br><span class="line">                &quot;/proc/timer_list&quot;,</span><br><span class="line">                &quot;/proc/timer_stats&quot;,</span><br><span class="line">                &quot;/proc/sched_debug&quot;,</span><br><span class="line">                &quot;/proc/scsi&quot;,</span><br><span class="line">                &quot;/sys/firmware&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;ReadonlyPaths&quot;: [</span><br><span class="line">                &quot;/proc/bus&quot;,</span><br><span class="line">                &quot;/proc/fs&quot;,</span><br><span class="line">                &quot;/proc/irq&quot;,</span><br><span class="line">                &quot;/proc/sys&quot;,</span><br><span class="line">                &quot;/proc/sysrq-trigger&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;GraphDriver&quot;: &#123;</span><br><span class="line">            &quot;Data&quot;: &#123;</span><br><span class="line">                &quot;LowerDir&quot;: &quot;/var/lib/docker/overlay2/71d47e380f73add20c212833476956e1bcc7abe9ca8556d9df8c32647131f69a-init/diff:/var/lib/docker/overlay2/ec7d133822e9d7981a24b358c5b4b8d39921dd05098b72c851dac47de3d3978d/diff&quot;,</span><br><span class="line">                &quot;MergedDir&quot;: &quot;/var/lib/docker/overlay2/71d47e380f73add20c212833476956e1bcc7abe9ca8556d9df8c32647131f69a/merged&quot;,</span><br><span class="line">                &quot;UpperDir&quot;: &quot;/var/lib/docker/overlay2/71d47e380f73add20c212833476956e1bcc7abe9ca8556d9df8c32647131f69a/diff&quot;,</span><br><span class="line">                &quot;WorkDir&quot;: &quot;/var/lib/docker/overlay2/71d47e380f73add20c212833476956e1bcc7abe9ca8556d9df8c32647131f69a/work&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;Name&quot;: &quot;overlay2&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Mounts&quot;: [],</span><br><span class="line">        &quot;Config&quot;: &#123;</span><br><span class="line">            &quot;Hostname&quot;: &quot;9b8dfbb1a7b5&quot;,</span><br><span class="line">            &quot;Domainname&quot;: &quot;&quot;,</span><br><span class="line">            &quot;User&quot;: &quot;&quot;,</span><br><span class="line">            &quot;AttachStdin&quot;: false,</span><br><span class="line">            &quot;AttachStdout&quot;: false,</span><br><span class="line">            &quot;AttachStderr&quot;: false,</span><br><span class="line">            &quot;Tty&quot;: false,</span><br><span class="line">            &quot;OpenStdin&quot;: false,</span><br><span class="line">            &quot;StdinOnce&quot;: false,</span><br><span class="line">            &quot;Env&quot;: [</span><br><span class="line">                &quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Cmd&quot;: [</span><br><span class="line">                &quot;/bin/bash&quot;,</span><br><span class="line">                &quot;-c&quot;,</span><br><span class="line">                &quot;while true;do echo xxx;sleep 2;done&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;Image&quot;: &quot;centos&quot;,</span><br><span class="line">            &quot;Volumes&quot;: null,</span><br><span class="line">            &quot;WorkingDir&quot;: &quot;&quot;,</span><br><span class="line">            &quot;Entrypoint&quot;: null,</span><br><span class="line">            &quot;OnBuild&quot;: null,</span><br><span class="line">            &quot;Labels&quot;: &#123;</span><br><span class="line">                &quot;org.label-schema.build-date&quot;: &quot;20210915&quot;,</span><br><span class="line">                &quot;org.label-schema.license&quot;: &quot;GPLv2&quot;,</span><br><span class="line">                &quot;org.label-schema.name&quot;: &quot;CentOS Base Image&quot;,</span><br><span class="line">                &quot;org.label-schema.schema-version&quot;: &quot;1.0&quot;,</span><br><span class="line">                &quot;org.label-schema.vendor&quot;: &quot;CentOS&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;NetworkSettings&quot;: &#123;</span><br><span class="line">            &quot;Bridge&quot;: &quot;&quot;,</span><br><span class="line">            &quot;SandboxID&quot;: &quot;04433626b38df081b13f75c13cea73112a96e6a7f3d81899a12e346d0ea6b131&quot;,</span><br><span class="line">            &quot;HairpinMode&quot;: false,</span><br><span class="line">            &quot;LinkLocalIPv6Address&quot;: &quot;&quot;,</span><br><span class="line">            &quot;LinkLocalIPv6PrefixLen&quot;: 0,</span><br><span class="line">            &quot;Ports&quot;: &#123;&#125;,</span><br><span class="line">            &quot;SandboxKey&quot;: &quot;/var/run/docker/netns/04433626b38d&quot;,</span><br><span class="line">            &quot;SecondaryIPAddresses&quot;: null,</span><br><span class="line">            &quot;SecondaryIPv6Addresses&quot;: null,</span><br><span class="line">            &quot;EndpointID&quot;: &quot;f96d7176577f0e6b133c9cc5e4c2e53afe9a76708452444df2ca3f6fd19b1799&quot;,</span><br><span class="line">            &quot;Gateway&quot;: &quot;172.17.0.1&quot;,</span><br><span class="line">            &quot;GlobalIPv6Address&quot;: &quot;&quot;,</span><br><span class="line">            &quot;GlobalIPv6PrefixLen&quot;: 0,</span><br><span class="line">            &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,</span><br><span class="line">            &quot;IPPrefixLen&quot;: 16,</span><br><span class="line">            &quot;IPv6Gateway&quot;: &quot;&quot;,</span><br><span class="line">            &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,</span><br><span class="line">            &quot;Networks&quot;: &#123;</span><br><span class="line">                &quot;bridge&quot;: &#123;</span><br><span class="line">                    &quot;IPAMConfig&quot;: null,</span><br><span class="line">                    &quot;Links&quot;: null,</span><br><span class="line">                    &quot;Aliases&quot;: null,</span><br><span class="line">                    &quot;NetworkID&quot;: &quot;0ad51380eac702bccfcfe28fbd7f9e19001407c3657125e3f4d9a66463ad8dc3&quot;,</span><br><span class="line">                    &quot;EndpointID&quot;: &quot;f96d7176577f0e6b133c9cc5e4c2e53afe9a76708452444df2ca3f6fd19b1799&quot;,</span><br><span class="line">                    &quot;Gateway&quot;: &quot;172.17.0.1&quot;,</span><br><span class="line">                    &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,</span><br><span class="line">                    &quot;IPPrefixLen&quot;: 16,</span><br><span class="line">                    &quot;IPv6Gateway&quot;: &quot;&quot;,</span><br><span class="line">                    &quot;GlobalIPv6Address&quot;: &quot;&quot;,</span><br><span class="line">                    &quot;GlobalIPv6PrefixLen&quot;: 0,</span><br><span class="line">                    &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,</span><br><span class="line">                    &quot;DriverOpts&quot;: null</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>容器完整id：<code>&quot;Id&quot;: &quot;9b8dfbb1a7b5a8c279b231e235cd268c8494b34a0841b245483a3c4d90ed98a5&quot;</code></p><p>容器创建时间：<code>&quot;Created&quot;: &quot;2022-09-26T19:16:02.833443366Z&quot;</code></p><p>容器默认控制台：<code>&quot;Path&quot;: &quot;/bin/bash&quot;</code></p><p>传递参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;Args&quot;: [</span><br><span class="line">    &quot;-c&quot;,</span><br><span class="line">    &quot;while true;do echo xxx;sleep 2;done&quot;</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>容器状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&quot;State&quot;: &#123;</span><br><span class="line">    &quot;Status&quot;: &quot;running&quot;,    # 容器处于运行状态</span><br><span class="line">    &quot;Running&quot;: true,</span><br><span class="line">    &quot;Paused&quot;: false,</span><br><span class="line">    &quot;Restarting&quot;: false,</span><br><span class="line">    &quot;OOMKilled&quot;: false,</span><br><span class="line">    &quot;Dead&quot;: false,</span><br><span class="line">    &quot;Pid&quot;: 12654,   # 当前进程id</span><br><span class="line">    &quot;ExitCode&quot;: 0,</span><br><span class="line">    &quot;Error&quot;: &quot;&quot;,</span><br><span class="line">    &quot;StartedAt&quot;: &quot;2022-09-26T19:16:03.278295629Z&quot;,</span><br><span class="line">    &quot;FinishedAt&quot;: &quot;0001-01-01T00:00:00Z&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>来源镜像：<code>&quot;Image&quot;: &quot;sha256:5d0da3dc976460b72c77d94c8a1ad043720b0416bfc16c52c45d4847e53fadb6&quot;</code></p><p>环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;Env&quot;: [</span><br><span class="line">    &quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;Cmd&quot;: [</span><br><span class="line">    &quot;/bin/bash&quot;,</span><br><span class="line">    &quot;-c&quot;,</span><br><span class="line">    &quot;while true;do echo xxx;sleep 2;done&quot;</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>桥接模式网络信息：<code>&quot;Networks&quot;: &quot;bridge&quot;</code></p><h3 id="进入当前正在运行容器"><a href="#进入当前正在运行容器" class="headerlink" title="进入当前正在运行容器"></a>进入当前正在运行容器</h3><p>容器通常后台运行，需要进入容器，修改一些变量</p><p>docker exec命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker exec -it 容器id bashShell</span><br></pre></td></tr></table></figure><p>进入指定容器进行操作，会开启一个新的终端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker ps</span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES</span><br><span class="line">9b8dfbb1a7b5   centos    &quot;/bin/bash -c &#x27;while…&quot;   16 minutes ago   Up 16 minutes             distracted_nobel</span><br><span class="line">[chyris@localhost ~]$ sudo docker exec -it 9b8dfbb1a7b5 /bin/bash</span><br><span class="line">[root@9b8dfbb1a7b5 /]# ps -ef</span><br><span class="line">UID         PID   PPID  C STIME TTY          TIME CMD</span><br><span class="line">root          1      0  0 19:16 ?        00:00:00 /bin/bash -c while true;do echo xxx;sleep 2;done</span><br><span class="line">root        533      0  0 19:33 pts/0    00:00:00 /bin/bash</span><br><span class="line">root        549      1  0 19:33 ?        00:00:00 /usr/bin/coreutils --coreutils-prog-shebang=sleep /usr/bin/sleep 2</span><br><span class="line">root        550    533  0 19:33 pts/0    00:00:00 ps -ef</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>docker attach 命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker attach 容器id</span><br></pre></td></tr></table></figure><p>进入一个正在执行的终端，不会启动新的进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker attach 9b8dfbb1a7b5</span><br><span class="line">当前代码正在执行...</span><br></pre></td></tr></table></figure><h3 id="从容器内拷贝文件到主机"><a href="#从容器内拷贝文件到主机" class="headerlink" title="从容器内拷贝文件到主机"></a>从容器内拷贝文件到主机</h3><p>docker cp 容器id:容器内路径 目的主机路径</p><p>容器内创建文件，在并外部拷贝出来到主机上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost home]$ ls</span><br><span class="line">chyris</span><br><span class="line">[chyris@localhost home]$ sudo docker attach b6a96dd6b157</span><br><span class="line">[root@b6a96dd6b157 /]# cd /home</span><br><span class="line">[root@b6a96dd6b157 home]# ls</span><br><span class="line">[root@b6a96dd6b157 home]# touch a.py</span><br><span class="line">[root@b6a96dd6b157 home]# ls</span><br><span class="line">a.py</span><br><span class="line">[root@b6a96dd6b157 home]# exit</span><br><span class="line">exit</span><br><span class="line">[chyris@localhost home]$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br><span class="line">[chyris@localhost home]$ sudo docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND       CREATED         STATUS                      PORTS     NAMES</span><br><span class="line">b6a96dd6b157   centos    &quot;/bin/bash&quot;   8 minutes ago   Exited (0) 15 seconds ago             peaceful_dirac</span><br><span class="line">[chyris@localhost home]$ sudo docker cp b6a96dd6b157:/home/a.py /home</span><br><span class="line">[chyris@localhost home]$ ls /home</span><br><span class="line">a.py  chyris</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>cp命令是手动拷贝过程，未来也可以使用-v卷的技术，将容器内指定目录和主机内指定目录自动同步。</p><h3 id="命令小结"><a href="#命令小结" class="headerlink" title="命令小结"></a>命令小结</h3><p>查看<a href="https://docs.docker.com/engine/reference/commandline/docker/">官方文档</a>对理解下列命令将会有所帮助</p><img src="/2022/09/26/docker%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/docker%E5%91%BD%E4%BB%A4.png" class="" title="This is an docker命令 image"><h2 id="docker命令练习"><a href="#docker命令练习" class="headerlink" title="docker命令练习"></a>docker命令练习</h2><p>使用<a href="https://hub.docker.com/search?q=">hub.docker</a>的示例将会对你有所帮助。</p><h3 id="部署nginx"><a href="#部署nginx" class="headerlink" title="部署nginx"></a>部署nginx</h3><p>搜索nginx，建议去docker hub上搜索</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker search nginx</span><br></pre></td></tr></table></figure><p>搜索结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost home]$ sudo docker search nginx</span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line">NAME                                              DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">nginx                                             Official build of Nginx.                        17445     [OK]       </span><br><span class="line">linuxserver/nginx                                 An Nginx container, brought to you by LinuxS…   178                  </span><br><span class="line">bitnami/nginx                                     Bitnami nginx Docker Image                      140                  [OK]</span><br></pre></td></tr></table></figure><p>下载镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull nginx</span><br></pre></td></tr></table></figure><p>默认下载最新版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost home]$ sudo docker pull nginx</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/nginx</span><br><span class="line">a2abf6c4d29d: Pull complete </span><br><span class="line">a9edb18cadd1: Pull complete </span><br><span class="line">589b7251471a: Pull complete </span><br><span class="line">186b1aaa4aa6: Pull complete </span><br><span class="line">b4df32aa5a72: Pull complete </span><br><span class="line">a0bcbecc962e: Pull complete </span><br><span class="line">Digest: sha256:0d17b565c37bcbd895e9d92315a05c1c3c9a29f762b011a10c54a66cd53c9b31</span><br><span class="line">Status: Downloaded newer image for nginx:latest</span><br><span class="line">docker.io/library/nginx:latest</span><br></pre></td></tr></table></figure><p>运行测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost home]$ sudo docker images</span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">nginx        latest    605c77e624dd   9 months ago    141MB</span><br><span class="line">centos       latest    5d0da3dc9764   12 months ago   231MB</span><br><span class="line">[chyris@localhost home]$ sudo docker run -d --name nginx01 -p 2022:80 nginx</span><br><span class="line">35b4983079e2e1cb3954656ca5500a23859ca3b6a359cec1333c7208cd0ce25f</span><br><span class="line">[chyris@localhost home]$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                                   NAMES</span><br><span class="line">35b4983079e2   nginx     &quot;/docker-entrypoint.…&quot;   12 seconds ago   Up 10 seconds   0.0.0.0:2022-&gt;80/tcp, :::2022-&gt;80/tcp   nginx01</span><br><span class="line">[chyris@localhost home]$ curl localhost:2022</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">html &#123; color-scheme: light dark; &#125;</span><br><span class="line">body &#123; width: 35em; margin: 0 auto;</span><br><span class="line">font-family: Tahoma, Verdana, Arial, sans-serif; &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>外部访问</p><p>使用<code>ip addr</code>命令查看主机ip地址，然后在浏览器输入<code>http://ip:2022</code>出现nginx欢迎页面即为部署成功。</p><p>进入容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost home]$ sudo docker exec -it nginx01 /bin/bash</span><br><span class="line">root@35b4983079e2:/# whereis nginx</span><br><span class="line">nginx: /usr/sbin/nginx /usr/lib/nginx /etc/nginx /usr/share/nginx</span><br><span class="line">root@35b4983079e2:/# ls</span><br><span class="line">bin   dev   docker-entrypoint.sh  home  lib64  mnt  proc  run   srv  tmp  var</span><br><span class="line">boot  docker-entrypoint.d  etc lib   media  opt  root  sbin  sys  usr</span><br><span class="line">root@35b4983079e2:/# cd /etc/nginx/</span><br><span class="line">root@35b4983079e2:/etc/nginx# ls</span><br><span class="line">conf.dfastcgi_paramsmime.types  modules  nginx.conf  scgi_params  uwsgi_params</span><br></pre></td></tr></table></figure><p>停止容器后，服务将不可访问</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@35b4983079e2:/etc/nginx# exit</span><br><span class="line">exit</span><br><span class="line">[chyris@localhost home]$ sudo docker ps</span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                                   NAMES</span><br><span class="line">35b4983079e2   nginx     &quot;/docker-entrypoint.…&quot;   26 minutes ago   Up 26 minutes   0.0.0.0:2022-&gt;80/tcp, :::2022-&gt;80/tcp   nginx01</span><br><span class="line">[chyris@localhost home]$ sudo docker stop 35b4983079e2</span><br><span class="line">35b4983079e2</span><br></pre></td></tr></table></figure><p>端口暴露的概念</p><img src="/2022/09/26/docker%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/%E7%AB%AF%E5%8F%A3%E6%9A%B4%E9%9C%B2.png" class="" title="This is an 端口暴露.png image"><p>进入容器内部以后，可以修改配置文件，但是每次改动都要进入容器内部，效率不高，使用数据卷-v技术，可以实现在容器外部提供一个映射路径，每次在容器外部的修改都可以自动对容器内部进行修改。</p><h3 id="部署tomcat"><a href="#部署tomcat" class="headerlink" title="部署tomcat"></a>部署tomcat</h3><p>docker hub官方方式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --rm tomcat:9.0</span><br></pre></td></tr></table></figure><p>–rm 表示用完即删，一般用于测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker run -it --rm tomcat:9.0</span><br><span class="line">Unable to find image &#x27;tomcat:9.0&#x27; locally</span><br><span class="line">9.0: Pulling from library/tomcat</span><br><span class="line">安装启动...</span><br></pre></td></tr></table></figure><p>由于本地没有tomcat，所以从远程仓库下载，完成后直接交互式启动</p><p>一般情况下，使用以下顺序来部署tomcat，先下载，在运行</p><p>下载最新版本的tomcat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull tomcat</span><br></pre></td></tr></table></figure><p>运行tomcat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d -p 8080:8080 --name tomcat01 tomcat</span><br></pre></td></tr></table></figure><p>使用curl命令测试访问成功，但是返回404</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ curl localhost:8080</span><br><span class="line">&lt;!doctype html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;&lt;title&gt;HTTP Status 404 – Not Found&lt;/title&gt;&lt;style type=&quot;text/css&quot;&gt;body &#123;font-family:Tahoma,Arial,sans-serif;&#125; h1, h2, h3, b &#123;color:white;background-color:#525D76;&#125; h1 &#123;font-size:22px;&#125; h2 &#123;font-size:16px;&#125; h3 &#123;font-size:14px;&#125; p &#123;font-size:12px;&#125; a &#123;color:black;&#125; .line &#123;height:1px;background-color:#525D76;border:none;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;HTTP Status 404 – Not Found&lt;/h1&gt;&lt;hr class=&quot;line&quot; /&gt;&lt;p&gt;&lt;b&gt;Type&lt;/b&gt; Status Report&lt;/p&gt;&lt;p&gt;&lt;b&gt;Description&lt;/b&gt; The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.&lt;/p&gt;&lt;hr class=&quot;line&quot; /&gt;&lt;h3&gt;Apache Tomcat/10.0.14&lt;/h3&gt;&lt;/body&gt;&lt;/html&gt;[chyris@localhost ~]$ </span><br></pre></td></tr></table></figure><p>由于使用的网络模式为桥接，所以虚拟主机接受了路由器的DHCP动态分配IP，且虚拟主机与容器进行了端口映射，所以可以在外部直接使用<a href="http://ip:8080来访问。">http://ip:8080来访问。</a></p><p>实际测试浏览器返回404页面</p><p>进入容器后发现，命令缺失且webapps内容为空。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker exec -it tomcat01 /bin/bash</span><br><span class="line">root@6bff55d738f9:/usr/local/tomcat# ll -a</span><br><span class="line">bash: ll: command not found</span><br><span class="line">root@6bff55d738f9:/usr/local/tomcat# ls -a</span><br><span class="line">. LICENSERUNNING.txt  logs     webapps.dist</span><br><span class="line">.. NOTICEbin     native-jni-lib  work</span><br><span class="line">BUILDING.txt README.mdconf     temp</span><br><span class="line">CONTRIBUTING.md  RELEASE-NOTESlib     webapps       </span><br><span class="line">root@6bff55d738f9:/usr/local/tomcat# ls webapps</span><br></pre></td></tr></table></figure><p>阿里云镜像的原因，默认是最小的镜像，剔除不必要的内容，保证最小可运行的环境。</p><p>将容器内webapps.dist中的内容复制到webapps目录中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@6bff55d738f9:/usr/local/tomcat# cp -r webapps.dist/* webapps</span><br><span class="line">root@6bff55d738f9:/usr/local/tomcat# ls webapps</span><br><span class="line">ROOT  docs  examples  host-manager  manager</span><br></pre></td></tr></table></figure><p>浏览器重新访问：<code>http://虚拟主机ip:8080</code>即可成功进入网站起始页。</p><p>部署tomcat需要进入容器内部，修改文件和目录，但是每次改动都要进入容器内部，效率不高，使用数据卷-v技术，可以实现在容器外部提供一个映射路径，每次在容器外部的修改都可以自动对容器内部进行修改。</p><h3 id="部署es-Kibana"><a href="#部署es-Kibana" class="headerlink" title="部署es+Kibana"></a>部署es+Kibana</h3><p>安装运行elasticsearch镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo docker network create somenetwork</span><br><span class="line"></span><br><span class="line">sudo docker run -d --name elasticsearch --net somenetwork -p 9200:9200 -p 9300:9300 -e &quot;discovery.type=single-node&quot; elasticsearch:tag</span><br></pre></td></tr></table></figure><p><code>--net somenetwork</code> docker网络<br><code>-e &quot;discovery.type=single-node&quot;</code> 默认单节点集群</p><p>使用一个es版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d --name elasticsearch -p 9200:9200 -p 9300:9300 -e &quot;discovery.type=single-node&quot; elasticsearch:7.6.2</span><br></pre></td></tr></table></figure><p>如果内存太小会导致系统卡顿，请先关闭其它服务节省内存</p><p>容器运行成功后，进行端口测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE                 COMMAND                  CREATED         STATUS         PORTS                                                                                  NAMES</span><br><span class="line">fccdf3420c88   elasticsearch:7.6.2   &quot;/usr/local/bin/dock…&quot;   5 minutes ago   Up 5 minutes   0.0.0.0:9200-&gt;9200/tcp, :::9200-&gt;9200/tcp, 0.0.0.0:9300-&gt;9300/tcp, :::9300-&gt;9300/tcp   elasticsearch</span><br><span class="line">[chyris@localhost ~]$ curl localhost:9200</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot; : &quot;fccdf3420c88&quot;,</span><br><span class="line">  &quot;cluster_name&quot; : &quot;docker-cluster&quot;,</span><br><span class="line">  &quot;cluster_uuid&quot; : &quot;5OLLzqG2SSSEZz9S-TxTuQ&quot;,</span><br><span class="line">  &quot;version&quot; : &#123;</span><br><span class="line">    &quot;number&quot; : &quot;7.6.2&quot;,</span><br><span class="line">    &quot;build_flavor&quot; : &quot;default&quot;,</span><br><span class="line">    &quot;build_type&quot; : &quot;docker&quot;,</span><br><span class="line">    &quot;build_hash&quot; : &quot;ef48eb35cf30adf4db14086e8aabd07ef6fb113f&quot;,</span><br><span class="line">    &quot;build_date&quot; : &quot;2020-03-26T06:34:37.794943Z&quot;,</span><br><span class="line">    &quot;build_snapshot&quot; : false,</span><br><span class="line">    &quot;lucene_version&quot; : &quot;8.4.0&quot;,</span><br><span class="line">    &quot;minimum_wire_compatibility_version&quot; : &quot;6.8.0&quot;,</span><br><span class="line">    &quot;minimum_index_compatibility_version&quot; : &quot;6.0.0-beta1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用<code>sudo docker stats</code>查看内存占用情况，消耗很大，需要添加内存限制。</p><p>停止容器，修改配置文件 -e 环境配置修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d --name elasticsearch01 -p 9200:9200 -p 9300:9300 -e &quot;discovery.type=single-node&quot; -e ES_JAVA_OPTS=&quot;-Xms64m -Xmx512m&quot; elasticsearch:7.6.2</span><br></pre></td></tr></table></figure><p>命令<code>sudo docker stats</code>查看内存占用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">CONTAINER ID   NAME              CPU %     MEM USAGE / LIMIT     MEM %     NET I/O     BLOCK I/O         PIDS</span><br><span class="line">0a72e1881177   elasticsearch01   0.67%     296.7MiB / 972.4MiB   30.51%    656B / 0B   4.35GB / 2.31MB   43</span><br><span class="line"></span><br><span class="line">`curl`命令测试容器运行</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">[chyris@localhost ~]$ curl localhost:9200</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot; : &quot;0a72e1881177&quot;,</span><br><span class="line">  &quot;cluster_name&quot; : &quot;docker-cluster&quot;,</span><br><span class="line">  &quot;cluster_uuid&quot; : &quot;nj5JWgUzQoWY0E6hXtmpTg&quot;,</span><br><span class="line">  &quot;version&quot; : &#123;</span><br><span class="line">    &quot;number&quot; : &quot;7.6.2&quot;,</span><br><span class="line">    &quot;build_flavor&quot; : &quot;default&quot;,</span><br><span class="line">    &quot;build_type&quot; : &quot;docker&quot;,</span><br><span class="line">    &quot;build_hash&quot; : &quot;ef48eb35cf30adf4db14086e8aabd07ef6fb113f&quot;,</span><br><span class="line">    &quot;build_date&quot; : &quot;2020-03-26T06:34:37.794943Z&quot;,</span><br><span class="line">    &quot;build_snapshot&quot; : false,</span><br><span class="line">    &quot;lucene_version&quot; : &quot;8.4.0&quot;,</span><br><span class="line">    &quot;minimum_wire_compatibility_version&quot; : &quot;6.8.0&quot;,</span><br><span class="line">    &quot;minimum_index_compatibility_version&quot; : &quot;6.0.0-beta1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>docker网络原理，实现访问可达</p><img src="/2022/09/26/docker%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/docker%E7%BD%91%E7%BB%9C.png" class="" title="This is an docker网络 image"><h2 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h2><h3 id="portainer"><a href="#portainer" class="headerlink" title="portainer"></a>portainer</h3><p>portainer是Docker图形化界面管理工具，提供后台面板可直接操作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d -p 8088:9000 --restart=always -v /var/run/docker.sock:/var/run/docker.sock --privileged=true portainer/portainer</span><br></pre></td></tr></table></figure><p>访问测试，访问外网8088端口，进入默认页面：<code>http://192.168.0.105:8088/#/init/admin</code>，因为我的主机名就是桥接网卡的IP，所以可以直接以内网访问。</p><p>设置完密码，可以使用local本地连接正在运行portainer的docker环境，之后就可以实现对容器镜像以及其它docker内容的可视化管理。</p><h3 id="Rancher-CI-x2F-CD"><a href="#Rancher-CI-x2F-CD" class="headerlink" title="Rancher(CI&#x2F;CD)"></a>Rancher(CI&#x2F;CD)</h3><p>pass</p><h2 id="Docker镜像"><a href="#Docker镜像" class="headerlink" title="Docker镜像"></a>Docker镜像</h2><h3 id="什么是镜像"><a href="#什么是镜像" class="headerlink" title="什么是镜像"></a>什么是镜像</h3><p>镜像是一种轻量级、可执行的独立软件包，它包含运行某个软件所需的所有内容，我们把应用程序和配置依赖打包好行程一个可交付的运行环境（包括代码、运行时需要的库、环境变量和配置文件等），这个打包好的运行环境就是image镜像文件。</p><p>获取一个docker镜像可以有多种方式，分为在线和离线获取。</p><h3 id="docker镜像获取"><a href="#docker镜像获取" class="headerlink" title="docker镜像获取"></a>docker镜像获取</h3><h4 id="docker-pull-from-registry"><a href="#docker-pull-from-registry" class="headerlink" title="docker pull from registry"></a>docker pull from registry</h4><p>从registry拉取，分为共有和私有：pull from registry(online)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull container_name[:version]</span><br></pre></td></tr></table></figure><h4 id="docker-build-from-Dockerfile"><a href="#docker-build-from-Dockerfile" class="headerlink" title="docker build from Dockerfile"></a>docker build from Dockerfile</h4><p>从Dockerfile构建：build from Dockerfile(online)</p><p>需要确保docker命令执行路径和Dockerfile文件路径一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker build -t target_name:version</span><br></pre></td></tr></table></figure><h4 id="docker-load-from-image-file"><a href="#docker-load-from-image-file" class="headerlink" title="docker load from image file"></a>docker load from image file</h4><p>加载一个文件成为镜像：load from file(offline)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker image load -i 文件名.image</span><br></pre></td></tr></table></figure><p>将一个镜像导出成一个文件(offline)<br>sudo docker image save 镜像名称:版本号 -o 文件名称.image</p><h4 id="docker-commit-from-container"><a href="#docker-commit-from-container" class="headerlink" title="docker commit from container"></a>docker commit from container</h4><p>将容器里面运行的程序及运行环境打包生成新的镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo docker commit [选项] 容器ID/名称 仓库名称[:标签]</span><br><span class="line">-m：说明信息</span><br><span class="line">-a：作者信息</span><br><span class="line">-p：生成过程中停止容器的运行</span><br></pre></td></tr></table></figure><h4 id="docker-import-from-tar-file"><a href="#docker-import-from-tar-file" class="headerlink" title="docker import from tar file"></a>docker import from tar file</h4><p>docker import : 从归档文件中创建镜像。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker import [OPTIONS] file|URL|- [REPOSITORY[:TAG]]</span><br><span class="line"></span><br><span class="line">-c 应用docker 指令创建镜像；</span><br><span class="line">-m 提交时的说明文字；</span><br></pre></td></tr></table></figure><p>例如从tar文件中导入centos镜像，并指定仓库名称和版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker import my_centos_v1.tar repos/centos:v2</span><br></pre></td></tr></table></figure><p>docker export:将文件系统作为一个tar归档文件导出到STDOUT。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker export [OPTIONS] CONTAINER</span><br><span class="line"></span><br><span class="line">-o 将输入内容写到文件</span><br></pre></td></tr></table></figure><p>将id为a404c6c174a2的容器按日期保存为tar文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~$ docker export -o mysql-`date +%Y%m%d`.tar a404c6c174a2</span><br><span class="line">root@localhost:~$ ls mysql-`date +%Y%m%d`.tar</span><br><span class="line">mysql-20160711.tar</span><br></pre></td></tr></table></figure><h3 id="Docker-镜像加载原理"><a href="#Docker-镜像加载原理" class="headerlink" title="Docker 镜像加载原理"></a>Docker 镜像加载原理</h3><h4 id="UnionFS（联合文件系统）"><a href="#UnionFS（联合文件系统）" class="headerlink" title="UnionFS（联合文件系统）"></a>UnionFS（联合文件系统）</h4><p>Docker 中的文件存储驱动叫做 storage driver。</p><p>Docker 最早支持的stotage driver是 AUFS，它实际上由一层一层的文件系统组成，这种层级的文件系统叫UnionFS。</p><p>联合文件系统（UnionFS）：Union 文件系统，是一种分层、轻量级并且高性能的文件系统，它支持对文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂载到同一个虚拟文件系统下（unite serveral directories into a single virtual filesystem）。</p><p>Union文件系统是Docker镜像的基础。镜像可以通过分层来进行集成，基于基础镜像可以制作具体的应用镜像。</p><p>特性：一次同时加载多个文件系统，但从外面看起来，只能看到一个文件系统，联合加载会把各层文件系统叠加起来，这样最终的文件系统会包含所有底层的文件和目录。</p><p>后来出现的docker版本中，除了AUFS，还支持OverlayFS、Btrfs、Device Mapper、VFS、ZFS等storage driver。</p><h4 id="bootfs和rootfs"><a href="#bootfs和rootfs" class="headerlink" title="bootfs和rootfs"></a>bootfs和rootfs</h4><p>bootfs（boot file system）主要包含 bootloader 和 kernel，bootloader主要是引导加载 kernel，Linux刚启动时会加载bootfs文件系统。</p><p>在Docker镜像的最底层是引导文件系统bootfs。这一层与我们典型的Linux&#x2F;Unix系统是一样的，包含boot加载器和内核。当boot加载完成之后整个内核就都在内存中了，此时内存的使用权已经由 bootfs 转交给内核，此时系统也会卸载 bootfs。</p><p>rootfs（root file system），在bootfs之上，包含的就是典型Linux系统中的 &#x2F;dev、&#x2F;proc、&#x2F;bin、&#x2F;etc等标准目录和文件。rootfs就是各种不同的操作系统发行版，比如Ubuntu、CentOS等。</p><p>docker镜像底层层次：</p><img src="/2022/09/26/docker%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/bootfs.png" class="" title="This is an bootfs.png image"><p>对于一个精简的OS，rootfs可以很小，只需要包括最基本的命令、工具和程序库就可以了，因为底层直接使用Host的Kernel，自己只需要提供rootfs就可以。所以，对于不同的Linux发行版，bootfs基本是一致的，rootfs会有差别，不同的发行版可以共用bootfs。</p><p>有差别的rootfs</p><img src="/2022/09/26/docker%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/rootfs.png" class="" title="This is an rootfs.png image"><h4 id="镜像分层"><a href="#镜像分层" class="headerlink" title="镜像分层"></a>镜像分层</h4><p>Docker镜像的分层，在镜像下载时就有体现。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker pull redis</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/redis</span><br><span class="line">a2abf6c4d29d: Already exists </span><br><span class="line">c7a4e4382001: Pull complete </span><br><span class="line">4044b9ba67c9: Pull complete </span><br><span class="line">c8388a79482f: Pull complete </span><br><span class="line">413c8bb60be2: Pull complete </span><br><span class="line">1abfd3011519: Pull complete </span><br><span class="line">Digest: sha256:db485f2e245b5b3329fdc7eff4eb00f913e09d8feb9ca720788059fdc2ed8339</span><br><span class="line">Status: Downloaded newer image for redis:latest</span><br><span class="line">docker.io/library/redis:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用命令<code>sudo docker image inspect redis:latest</code>就可以查看具体的镜像分层结构。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&quot;RootFS&quot;: &#123;</span><br><span class="line">    &quot;Type&quot;: &quot;layers&quot;,</span><br><span class="line">    &quot;Layers&quot;: [</span><br><span class="line">        &quot;sha256:2edcec3590a4ec7f40cf0743c15d78fb39d8326bc029073b41ef9727da6c851f&quot;,</span><br><span class="line">        &quot;sha256:9b24afeb7c2f21e50a686ead025823cd2c6e9730c013ca77ad5f115c079b57cb&quot;,</span><br><span class="line">        &quot;sha256:4b8e2801e0f956a4220c32e2c8b0a590e6f9bd2420ec65453685246b82766ea1&quot;,</span><br><span class="line">        &quot;sha256:529cdb636f61e95ab91a62a51526a84fd7314d6aab0d414040796150b4522372&quot;,</span><br><span class="line">        &quot;sha256:9975392591f2777d6bf4d9919ad1b2c9afa12f9a9b4d260f45025ec3cc9b18ed&quot;,</span><br><span class="line">        &quot;sha256:8e5669d8329116b8444b9bbb1663dda568ede12d3dbcce950199b582f6e94952&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>其中 <code>&quot;sha256:2edcec359...</code> 就是一个已经安装（Already exists）的linux发行版。</p><p>Docker支持扩展现有镜像，创建新的镜像。新镜像是从base镜像一层一层叠加生成的。</p><p>例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Version: 0.0.1</span></span><br><span class="line">FROM debian  # 直接在debain base镜像上构建</span><br><span class="line">MAINTAINER mylinux</span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y emacs # 安装emacs</span><br><span class="line">RUN apt-get install -y apache2 # 安装apache2</span><br><span class="line">CMD [&quot;/bin/bash&quot;] # 容器启动时运行bash</span><br></pre></td></tr></table></figure><p>镜像创建过程：</p><img src="/2022/09/26/docker%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/%E9%95%9C%E5%83%8F%E5%88%86%E5%B1%82.png" class="" title="This is an 镜像分层.png image"><p>镜像分层的一个最大好处就是共享资源，方便复制迁移，方便复用。</p><h4 id="容器层"><a href="#容器层" class="headerlink" title="容器层"></a>容器层</h4><p>当容器启动时，一个新的可写层将被加载到镜像的顶部，这一层通常被称为容器层，容器层之下的都叫镜像层。</p><p>所有对容器的改动，无论添加、删除、还是修改文件都只会发生在容器层中。</p><p>只有容器层是可写的，容器层下面的所有镜像层都是只读的。</p><img src="/2022/09/26/docker%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/%E5%AE%B9%E5%99%A8%E5%B1%82.png" class="" title="This is an 容器层.png image"><h4 id="commit镜像"><a href="#commit镜像" class="headerlink" title="commit镜像"></a>commit镜像</h4><p>使用<code>docker commit</code>提交一个容器成为一个新的副本，命令和git原理类似</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -m=&quot;提交的描述信息&quot; -a=&quot;作者&quot; 容器id 目标镜像名[:TAG]</span><br></pre></td></tr></table></figure><p>对使用默认版本tomcat运行的容器，由于站点内容的缺失，需要对webapps文件夹中添加一些站点内容才能使用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE                 COMMAND             CREATED          STATUS          PORTS                                       NAMES</span><br><span class="line">fa54175ebde3   tomcat:latest         &quot;catalina.sh run&quot;   23 seconds ago   Up 22 seconds   8080/tcp                                    crazy_wu</span><br><span class="line">[chyris@localhost ~]$ sudo docker exec -it crazy_wu /bin/bash</span><br><span class="line">root@fa54175ebde3:/usr/local/tomcat# ls</span><br><span class="line">BUILDING.txt  CONTRIBUTING.md  LICENSENOTICEREADME.md  RELEASE-NOTES  RUNNING.txt  bin  conf  lib  logs  native-jni-lib  temp  webapps  webapps.dist  work</span><br><span class="line">root@fa54175ebde3:/usr/local/tomcat# ls webapps</span><br><span class="line">root@fa54175ebde3:/usr/local/tomcat# ls webapps.dist/</span><br><span class="line">ROOT  docs  examples  host-manager  manager</span><br><span class="line">root@fa54175ebde3:/usr/local/tomcat# cp -r webapps.dist/* webapps</span><br><span class="line">root@fa54175ebde3:/usr/local/tomcat# ls webapps</span><br><span class="line">ROOT  docs  examples  host-manager  manager</span><br><span class="line">root@fa54175ebde3:/usr/local/tomcat# exit</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>退出容器后，可以对当前正在运行的容器进行commit获取一个新版本的镜像，改镜像将保留之前在容器中对webapps目录做的修改。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker ps</span><br><span class="line">CONTAINER ID   IMAGE                 COMMAND             CREATED         STATUS         PORTS                                       NAMES</span><br><span class="line">78e0fe6bd84c   tomcat:latest         &quot;catalina.sh run&quot;   5 minutes ago   Up 5 minutes   0.0.0.0:8080-&gt;8080/tcp, :::8080-&gt;8080/tcp   sweet_banach</span><br><span class="line"></span><br><span class="line">[chyris@localhost ~]$ sudo docker commit -m=&quot;add webapps app&quot; -a=&quot;chyris&quot; 78e0fe6bd84c tomcat02:1.0</span><br><span class="line">sha256:4ca2d35f5039c9b5d0cd39dfa275bf5ab1d017a07308bb96604b19e1902a1dc1</span><br></pre></td></tr></table></figure><p>此时使用8081端口直接运行该镜像，浏览器即可直接访问到正常的页面。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[chyris@localhost ~]$ sudo docker images</span><br><span class="line">REPOSITORY            TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">tomcat02              1.0       4ca2d35f5039   11 seconds ago   684MB</span><br><span class="line">nginx                 latest    605c77e624dd   9 months ago     141MB</span><br><span class="line">tomcat                9.0       b8e65a4d736d   9 months ago     680MB</span><br><span class="line">tomcat                latest    fb5657adc892   9 months ago     680MB</span><br><span class="line">redis                 latest    7614ae9453d1   9 months ago     113MB</span><br><span class="line">centos                latest    5d0da3dc9764   12 months ago    231MB</span><br><span class="line">portainer/portainer   latest    580c0e4e98b0   18 months ago    79.1MB</span><br><span class="line">elasticsearch         7.6.2     f29a1ee41030   2 years ago      791MB</span><br><span class="line"></span><br><span class="line">[chyris@localhost ~]$ sudo docker run -d -p 8081:8080 tomcat02:1.0</span><br><span class="line">da651daa4da552d2d253047ed4e37638c2f9baeb075b21b357cdb82beec7a58a</span><br><span class="line"></span><br><span class="line">[chyris@localhost ~]$ sudo docker ps</span><br><span class="line">[sudo] chyris 的密码：</span><br><span class="line">CONTAINER ID   IMAGE                 COMMAND             CREATED          STATUS          PORTS                                       NAMES</span><br><span class="line">da651daa4da5   tomcat02:1.0          &quot;catalina.sh run&quot;   6 minutes ago    Up 6 minutes    0.0.0.0:8081-&gt;8080/tcp, :::8081-&gt;8080/tcp   modest_lumiere</span><br><span class="line">78e0fe6bd84c   tomcat:latest         &quot;catalina.sh run&quot;   14 minutes ago   Up 14 minutes   0.0.0.0:8080-&gt;8080/tcp, :::8080-&gt;8080/tcp   sweet_banach</span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1]<a href="http://edu.jb51.net/docker/docker-tutorial.html">菜鸟学堂 docker-tutorial</a><br>[2]<a href="">Docker hub</a><br>[3]<a href="">Docker</a><br>[4]<a href="">bilibili.kuangshen</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;docker安装&quot;&gt;&lt;a href=&quot;#docker安装&quot; class=&quot;headerlink&quot; title=&quot;docker安装&quot;&gt;&lt;/a&gt;docker安装&lt;/h2&gt;&lt;p&gt;docker安装及使用文档，请参考&lt;a href=&quot;https://docs.docker.</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="programming" scheme="https://chyriso.github.io/categories/major/programming/"/>
    
    <category term="docker" scheme="https://chyriso.github.io/categories/major/programming/docker/"/>
    
    
    <category term="docker" scheme="https://chyriso.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>关于 hexo-helper-live2d 与 busuanzi-count 冲突</title>
    <link href="https://chyriso.github.io/2022/06/19/%E5%85%B3%E4%BA%8E-hexo-helper-live2d-%E4%B8%8E-busuanzi-count-%E5%86%B2%E7%AA%81/"/>
    <id>https://chyriso.github.io/2022/06/19/%E5%85%B3%E4%BA%8E-hexo-helper-live2d-%E4%B8%8E-busuanzi-count-%E5%86%B2%E7%AA%81/</id>
    <published>2022-06-18T16:15:48.000Z</published>
    <updated>2022-06-18T16:49:09.658Z</updated>
    
    <content type="html"><![CDATA[<p>Next 主题下 live2d 和 busuanzi 并不兼容，通过查看网页源码，发现在 busuanzi 插入的 <span> 标签中多了个 style：<code>style=&quot;display: none;&quot;</code><br>当live2d启用时，就会出现 <code>style=&quot;display: none;&quot;</code>，导致 busuanzi统计失效。这里给出临时解决办法。</p><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p>找到 <code>themes\next\layout\_partials\footer.njk</code> 文件，将两处 <code>&lt;span&gt;</code> 标签注释，修改为如下内容，即删除外层 <code>&lt;span&gt;</code> 标签。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&#123;%- <span class="keyword">if</span> theme.<span class="property">busuanzi_count</span>.<span class="property">enable</span> %&#125;</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;busuanzi-count&quot;</span>&gt;</span><br><span class="line">  &#123;%- <span class="keyword">if</span> theme.<span class="property">busuanzi_count</span>.<span class="property">total_visitors</span> %&#125;</span><br><span class="line">    &lt;!-- by vhyriso</span><br><span class="line">    &lt;span <span class="keyword">class</span>=<span class="string">&quot;post-meta-item&quot;</span> id=<span class="string">&quot;busuanzi_container_site_uv&quot;</span>&gt;</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;&#123;&#123; theme.busuanzi_count.total_visitors_icon &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;site-uv&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&#123;&#123; __(&#x27;footer.total_visitors&#x27;) &#125;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">--&gt;</span><br><span class="line">&lt;!--by chyriso--&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;&#123;&#123; theme.busuanzi_count.total_visitors_icon &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;site-uv&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&#123;&#123; __(&#x27;footer.total_visitors&#x27;) &#125;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      Total visitors = <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;%- <span class="keyword">if</span> theme.<span class="property">busuanzi_count</span>.<span class="property">total_views</span> %&#125;</span><br><span class="line">&lt;!-- by chyriso</span><br><span class="line">    &lt;span <span class="keyword">class</span>=<span class="string">&quot;post-meta-item&quot;</span> id=<span class="string">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;&#123;&#123; theme.busuanzi_count.total_views_icon &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;site-pv&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&#123;&#123; __(&#x27;footer.total_views&#x27;) &#125;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--by chyriso--&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;&#123;&#123; theme.busuanzi_count.total_views_icon &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;site-pv&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&#123;&#123; __(&#x27;footer.total_views&#x27;) &#125;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      Total views = <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">  </span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><p>主题目录下找到文件 busuanzi-counter.njk，比如：\themes\next\layout_third-party\statistics\busuanzi-counter.njk</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">find ./ -name &quot;busuanzi*&quot;</span><br></pre></td></tr></table></figure><p>源码中存在 <code>busuanzi.pure.mini.js</code> 引用，先将 <code>busuanzi.pure.mini.js</code> 下载到本地，并存放至 hexo-site&#x2F;node_modules&#x2F;hexo-theme-next&#x2F;source&#x2F;js&#x2F;</p><p>修改 <code>busuanzi.pure.mini.js</code> 文件：<code>b.style.display=&quot;none&quot;</code> 修改为 <code>b.style.display=&quot;inline&quot;</code></p><p>修改 busuanzi-counter.njk 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;%- <span class="keyword">if</span> theme.<span class="property">busuanzi_count</span>.<span class="property">enable</span> %&#125;</span><br><span class="line">  &lt;script&#123;&#123; pjax &#125;&#125; <span class="keyword">async</span> src=<span class="string">&quot;/js/busuanzi.pure.mini.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure><p>最后直接 <code>hexo clean &amp;&amp; hexo s</code> 重启服务即可。</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="http://cncc.bingj.com/cache.aspx?q=busuanzi_count&d=4916217463242832&mkt=zh-CN&setlang=zh-CN&w=DL7c2_T9Ani7owqe1wlwBkiobtFuy-yH">关于 hexo-helper-live2d 与 busuanzi-count 冲突</a></p><p>[2] <a href="https://moguangpeng998.github.io/2020/06/13/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8D%E8%92%9C%E5%AD%90%E5%92%8Clive2d%E7%9C%8B%E6%9D%BF%E5%A8%98%E5%86%B2%E7%AA%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/">Hexo博客不蒜子和live2d看板娘冲突问题解决方案</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Next 主题下 live2d 和 busuanzi 并不兼容，通过查看网页源码，发现在 busuanzi 插入的 &lt;span&gt; 标签中多了个 style：&lt;code&gt;style=&amp;quot;display: none;&amp;quot;&lt;/code&gt;&lt;br&gt;当live2d启用时</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="website" scheme="https://chyriso.github.io/categories/major/website/"/>
    
    <category term="hexo" scheme="https://chyriso.github.io/categories/major/website/hexo/"/>
    
    
    <category term="hexo" scheme="https://chyriso.github.io/tags/hexo/"/>
    
    <category term="live2d" scheme="https://chyriso.github.io/tags/live2d/"/>
    
    <category term="busuanzi" scheme="https://chyriso.github.io/tags/busuanzi/"/>
    
  </entry>
  
  <entry>
    <title>mysql小结</title>
    <link href="https://chyriso.github.io/2022/06/18/mysql%E5%B0%8F%E7%BB%93/"/>
    <id>https://chyriso.github.io/2022/06/18/mysql%E5%B0%8F%E7%BB%93/</id>
    <published>2022-06-18T13:24:32.000Z</published>
    <updated>2022-06-18T13:38:48.726Z</updated>
    
    <content type="html"><![CDATA[<p>感谢</p><p>bilibili.com<br><a href="https://www.bilibili.com/video/BV1uJ411Y7uH?p=123&amp;vd_source=08abc8c179610d71e6a390ddad0b9f56">https://www.bilibili.com/video/BV1uJ411Y7uH?p=123&amp;vd_source=08abc8c179610d71e6a390ddad0b9f56</a></p><p>知乎：向上的团子<br>MySQL系列：<a href="https://www.zhihu.com/people/di-di-da-da-73-54/posts">https://www.zhihu.com/people/di-di-da-da-73-54/posts</a></p><p>cnblogs.com：Summer儿</p><p>MySQL基础：<a href="https://www.cnblogs.com/summer1019/category/1479240.html">https://www.cnblogs.com/summer1019/category/1479240.html</a><br>MySQL高级：<a href="https://www.cnblogs.com/summer1019/category/1485154.html">https://www.cnblogs.com/summer1019/category/1485154.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;感谢&lt;/p&gt;
&lt;p&gt;bilibili.com&lt;br&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1uJ411Y7uH?p=123&amp;amp;vd_source=08abc8c179610d71e6a390ddad0b9f56&quot;&gt;http</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="programming" scheme="https://chyriso.github.io/categories/major/programming/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/categories/major/programming/mysql/"/>
    
    
    <category term="Database" scheme="https://chyriso.github.io/tags/Database/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql主从</title>
    <link href="https://chyriso.github.io/2022/06/18/mysql%E4%B8%BB%E4%BB%8E/"/>
    <id>https://chyriso.github.io/2022/06/18/mysql%E4%B8%BB%E4%BB%8E/</id>
    <published>2022-06-18T13:03:41.000Z</published>
    <updated>2022-06-18T16:16:22.769Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">source：https://www.cnblogs.com/summer1019/p/11063459.html</span><br><span class="line"></span><br><span class="line">-- mysql主从-1</span><br><span class="line"></span><br><span class="line">    -- 1. 主从同步的定义</span><br><span class="line">        -- 主从同步使得数据可以从一个数据库服务器复制到其他服务器上，在复制数据时，一个服务器充当主服务器（master），其余的服务器充当从服务器（slave）。</span><br><span class="line"></span><br><span class="line">        -- 因为复制是异步进行的，所以从服务器不需要一直连接着主服务器，从服务器甚至可以通过拨号断断续续地连接主服务器。</span><br><span class="line"></span><br><span class="line">        -- 通过配置文件，可以指定复制所有的数据库，某个数据库，甚至是某个数据库上的某个表。</span><br><span class="line"></span><br><span class="line">        -- 使用主从同步的好处：</span><br><span class="line"></span><br><span class="line">            -- 通过增加从服务器来提高数据库的性能，在主服务器上执行写入和更新，在从服务器上向外提供读功能，可以动态地调整从服务器的数量，从而调整整个数据库的性能。</span><br><span class="line">            -- 提高数据安全，因为数据已复制到从服务器，从服务器可以终止复制进程，所以，可以在从服务器上备份而不破坏主服务器相应数据</span><br><span class="line">            -- 在主服务器上生成实时数据，而在从服务器上分析这些数据，从而提高主服务器的性能</span><br><span class="line"></span><br><span class="line">    -- 2. 主从同步的机制</span><br><span class="line"></span><br><span class="line">        查看图片：https://img2018.cnblogs.com/blog/1529447/201906/1529447-20190621105901735-1482733699.png</span><br><span class="line"></span><br><span class="line">        -- Mysql服务器之间的主从同步是基于二进制日志机制，主服务器使用二进制日志来记录数据库的变动情况，从服务器通过读取和执行该日志文件来保持和主服务器的数据一致。</span><br><span class="line"></span><br><span class="line">        -- 在使用二进制日志时，主服务器的所有操作都会被记录下来，然后从服务器会接收到该日志的一个副本。从服务器可以指定执行该日志中的哪一类事件（譬如只插入数据或者只更新数据），默认会执行日志中的所有语句。</span><br><span class="line"></span><br><span class="line">        -- 每一个从服务器会记录关于二进制日志的信息：文件名和已经处理过的语句，这样意味着不同的从服务器可以分别执行同一个二进制日志的不同部分，并且从服务器可以随时连接或者中断和服务器的连接。</span><br><span class="line"></span><br><span class="line">        -- 主服务器和每一个从服务器都必须配置一个唯一的ID号（在my.cnf文件的[mysqld]模块下有一个server-id配置项）。</span><br><span class="line"></span><br><span class="line">        -- 另外，每一个从服务器还需要通过CHANGE MASTER TO语句来配置它要连接的主服务器的ip地址，日志文件名称和该日志里面的位置（这些信息存储在主服务器的数据库里）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 3. 配置主从同步的基本步骤</span><br><span class="line"></span><br><span class="line">        -- 有很多种配置主从同步的方法，可以总结为如下的步骤：</span><br><span class="line"></span><br><span class="line">            -- 在主服务器上，必须开启二进制日志机制和配置一个独立的ID</span><br><span class="line">            -- 在每一个从服务器上，配置一个唯一的ID，创建一个用来专门复制主服务器数据的账号</span><br><span class="line">            -- 在开始复制进程前，在主服务器上记录二进制文件的位置信息</span><br><span class="line">            -- 如果在开始复制之前，数据库中已经有数据，就必须先创建一个数据快照（可以使用mysqldump导出数据库，或者直接复制数据文件）</span><br><span class="line">            -- 配置从服务器要连接的主服务器的IP地址和登陆授权，二进制日志文件名和位置</span><br><span class="line"></span><br><span class="line">-- mysql主从-2</span><br><span class="line"></span><br><span class="line">    -- 4.详细配置主从同步的方法</span><br><span class="line"></span><br><span class="line">        -- 主和从的身份可以自己指定，我们将虚拟机Ubuntu中MySQL作为主服务器，将Windows中的MySQL作为从服务器。 在主从设置前，要保证Ubuntu与Windows间的网络连通。</span><br><span class="line"></span><br><span class="line">        -- 4.1 备份主服务器原有数据到从服务器</span><br><span class="line"></span><br><span class="line">            -- 如果在设置主从同步前，主服务器上已有大量数据，可以使用mysqldump进行数据备份并还原到从服务器以实现数据的复制。</span><br><span class="line"></span><br><span class="line">            -- 4.1.1 在主服务器Ubuntu上进行备份，执行命令：</span><br><span class="line"></span><br><span class="line">                mysqldump -uroot -pmysql --all-databases --lock-all-tables &gt; ~/master_db.sql</span><br><span class="line"></span><br><span class="line">            -- 说明</span><br><span class="line">                -u ：用户名</span><br><span class="line">                -p ：示密码</span><br><span class="line">                --all-databases ：导出所有数据库</span><br><span class="line">                --lock-all-tables ：执行操作时锁住所有表，防止操作时有数据修改</span><br><span class="line">                ~/master_db.sql :导出的备份数据（sql文件）位置，可自己指定</span><br><span class="line"></span><br><span class="line">            -- 4.1.2 在从服务器Windows上进行数据还原</span><br><span class="line"></span><br><span class="line">                --  找到Windows上mysql命令的位置</span><br><span class="line"></span><br><span class="line">                -- 新打开的命令窗口，在这个窗口中可以执行类似在Ubuntu终端中执行的mysql命令</span><br><span class="line"></span><br><span class="line">                -- 将从主服务器Ubuntu中导出的文件复制到从服务器Windows中(xshell或filezilla)，可以将其放在上面mysql命令所在的文件夹中，方便还原使用</span><br><span class="line"></span><br><span class="line">                -- 在刚打开的命令黑窗口中执行还原操作:</span><br><span class="line"></span><br><span class="line">                    mysql –uroot –pmysql &lt; master_db.sql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- 4.2 配置主服务器master（Ubuntu中的MySQL）</span><br><span class="line"></span><br><span class="line">            -- 4.2.1 编辑设置mysqld的配置文件，设置log_bin和server-id</span><br><span class="line"></span><br><span class="line">                sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br><span class="line"></span><br><span class="line">                （1）将bind-address添加注释</span><br><span class="line"></span><br><span class="line">                （2）将server-id和login_bin去掉注释</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            -- 4.2.2 重启mysql服务</span><br><span class="line"></span><br><span class="line">                sudo service mysql restart</span><br><span class="line"></span><br><span class="line">            -- 4.2.3 登入主服务器Ubuntu中的mysql，创建用于从服务器同步数据使用的帐号</span><br><span class="line"></span><br><span class="line">                mysql –uroot –p</span><br><span class="line"></span><br><span class="line">                GRANT REPLICATION SLAVE ON *.* TO &#x27;slave&#x27;@&#x27;%&#x27; identified by &#x27;slave&#x27;;</span><br><span class="line">                FLUSH PRIVILEGES;</span><br><span class="line"></span><br><span class="line">            -- 4.2.4 获取主服务器的二进制日志信息</span><br><span class="line"></span><br><span class="line">                SHOW MASTER STATUS;</span><br><span class="line"></span><br><span class="line">                -- File为使用的日志文件名字，Position为使用的文件位置，这两个参数须记下，配置从服务器时会用到</span><br><span class="line"></span><br><span class="line">        -- 4.3 配置从服务器slave（Windows中的MySQL）</span><br><span class="line"></span><br><span class="line">            -- 4.3.1 找到Windows中MySQL的配置文件</span><br><span class="line"></span><br><span class="line">            -- 4.3.2 编辑my.ini文件，将server-id修改为2，并保存退出。</span><br><span class="line"></span><br><span class="line">                server-id=2</span><br><span class="line"></span><br><span class="line">                -- 注：保证主服务器与从服务器上的server-ID不同！！</span><br><span class="line"></span><br><span class="line">            -- 4.3.3 打开windows服务管理</span><br><span class="line"></span><br><span class="line">                -- 可以在开始菜单中输入services.msc找到并运行</span><br><span class="line">                    services.msc</span><br><span class="line"></span><br><span class="line">            -- 4.3.4 在打开的服务管理中找到MySQL57，并重启该服务</span><br><span class="line"></span><br><span class="line">    -- 5. 进入windows的mysql，设置连接到master主服务器</span><br><span class="line"></span><br><span class="line">        change master to master_host=&#x27;10.211.55.5&#x27;, master_user=&#x27;slave&#x27;, master_password=&#x27;slave&#x27;,master_log_file=&#x27;mysql-bin.000006&#x27;, master_log_pos=590;</span><br><span class="line"></span><br><span class="line">        注：</span><br><span class="line">            master_host：主服务器Ubuntu的ip地址</span><br><span class="line">            master_log_file: 前面查询到的主服务器日志文件名</span><br><span class="line">            master_log_pos: 前面查询到的主服务器日志文件位</span><br><span class="line"></span><br><span class="line">    -- 6. 开启同步，查看同步状态</span><br><span class="line"></span><br><span class="line">        start slave;</span><br><span class="line">        show slave status \G;</span><br><span class="line"></span><br><span class="line">    -- 7. 测试主从同步</span><br><span class="line"></span><br><span class="line">        -- 在Ubuntu的MySQL中（主服务器）创建一个数据库</span><br><span class="line"></span><br><span class="line">            create database dailyfresh default charset=utf8;</span><br><span class="line"></span><br><span class="line">        -- 在Windows的MySQL中（从服务器）查看新建的数据库是否存在</span><br><span class="line"></span><br><span class="line">            show databases;</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="programming" scheme="https://chyriso.github.io/categories/major/programming/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/categories/major/programming/mysql/"/>
    
    
    <category term="Database" scheme="https://chyriso.github.io/tags/Database/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/tags/mysql/"/>
    
    <category term="sql" scheme="https://chyriso.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>视图事务索引</title>
    <link href="https://chyriso.github.io/2022/06/18/%E8%A7%86%E5%9B%BE%E4%BA%8B%E5%8A%A1%E7%B4%A2%E5%BC%95/"/>
    <id>https://chyriso.github.io/2022/06/18/%E8%A7%86%E5%9B%BE%E4%BA%8B%E5%8A%A1%E7%B4%A2%E5%BC%95/</id>
    <published>2022-06-18T12:05:52.000Z</published>
    <updated>2022-06-18T12:08:00.673Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-- 视图</span><br><span class="line"></span><br><span class="line">    -- 视图的使用场景：多表查询太复杂，简化查询的方案</span><br><span class="line">        -- 把复杂的查询写一次，再保存，多次使用</span><br><span class="line">        -- 交给别人(dba)去写，自己来使用</span><br><span class="line"></span><br><span class="line">    -- 视图的作用</span><br><span class="line">        -- 简化查询</span><br><span class="line"></span><br><span class="line">    -- 视图的特点</span><br><span class="line">        -- 1）视图是对若干张基本表的引用，是一张虚表，是通过select查询出来的结果集</span><br><span class="line">        -- 2）不存储具体的数据（基本表数据发生了改变，视图也会跟着改变）</span><br><span class="line"></span><br><span class="line">    -- 定义视图</span><br><span class="line">        语法：create view 视图名称 as select ...</span><br><span class="line">        问题：基于三张表 goods、goods_cates、goods_brands创建视图v_goods;</span><br><span class="line">        select g.id,g.name,c.name as &quot;cate_name&quot;,b.name as &quot;brand_name&quot;,g.price,g.is_show from goods as g inner join goods_cates as c inner join goods_brands as b on g.cate_id=c.id and g.brand_id=b.id</span><br><span class="line"></span><br><span class="line">        create view v_goods as (select g.id,g.name,c.name as &quot;cate_name&quot;,b.name as &quot;brand_name&quot;,g.price,g.is_show from goods as g inner join goods_cates as c inner join goods_brands as b on g.cate_id=c.id and  g.brand_id=b.id);</span><br><span class="line">        create view v_goods as select g.id,g.name,c.name as &quot;cate_name&quot;,b.name as &quot;brand_name&quot;,g.price,g.is_show from goods as g inner join goods_cates as c inner join goods_brands as b on g.cate_id=c.id and  g.brand_id=b.id;</span><br><span class="line">        create view v_goods as select g.id,g.name,c.name as cate_name,b.name as brand_name,g.price,g.is_show from goods as g inner join goods_cates as c inner join goods_brands as b on g.cate_id=c.id and  g.brand_id=b.id;</span><br><span class="line"></span><br><span class="line">    -- 使用视图</span><br><span class="line">        -- a&gt; 查看数据库中有哪些视图：</span><br><span class="line">            show tables;</span><br><span class="line"></span><br><span class="line">        -- b&gt; 使用视图: select * from 视图;</span><br><span class="line">            select * from v_goods;</span><br><span class="line"></span><br><span class="line">        -- c&gt; 删除视图：</span><br><span class="line">            drop view 视图名称;</span><br><span class="line"></span><br><span class="line">    -- 视图的优缺点</span><br><span class="line">        -- a&gt; 优点：</span><br><span class="line">            -- 简化查询操作</span><br><span class="line">                -- 对于复杂的查询，往往是有多个数据表进行关联查询而得到，对于这个复杂的查询结果保存为一个视图，便于下一次查询时简化查询操作。</span><br><span class="line"></span><br><span class="line">            -- 逻辑上的独立性，屏蔽了真实表结构更改带来的影响</span><br><span class="line">                -- 视图可以使应用程序和数据库表在一定程度上独立。如果没有视图，应用一定是建立在表上的。有了视图之后，程序可以建立在视图之上，从而程序与数据库表被视图分割开来。</span><br><span class="line"></span><br><span class="line">            -- 视图能够对机密数据提供一定安全保护</span><br><span class="line">                -- 因为视图是虚拟的，物理上是不存在的，只是存储了数据的集合，我们可以屏蔽基表中重要的字段信息，不通过视图呈现给用户。</span><br><span class="line"></span><br><span class="line">        -- b&gt; 不足：</span><br><span class="line">            -- 性能差</span><br><span class="line">                -- 对视图(select)的查询最终转换为对基本表的查询，如果这个视图是由一个复杂的多表查询所定义，那么，即使是视图的一个简单查询，也会花费一定时间。</span><br><span class="line">            -- 额外增加数据库的复杂度（50表，50视图--&gt;100）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 事务</span><br><span class="line">    -- 为什么要有事务</span><br><span class="line"></span><br><span class="line">        -- 事务广泛的运用于订单系统、银行系统等多种场景</span><br><span class="line"></span><br><span class="line">        -- 例如：</span><br><span class="line"></span><br><span class="line">            -- A用户和B用户是银行的储户，现在A要给B转账500元，那么需要做以下几件事：</span><br><span class="line">                -- 检查A的账户余额&gt;500元；</span><br><span class="line">                -- A 账户中扣除500元;</span><br><span class="line">                -- B 账户中增加500元;</span><br><span class="line"></span><br><span class="line">        -- 正常的流程走下来，A账户扣了500，B账户加了500，皆大欢喜。</span><br><span class="line">        -- 那如果A账户扣了钱之后，系统出故障了呢？A白白损失了500，而B也没有收到本该属于他的500。</span><br><span class="line">        -- 以上的案例中，隐藏着一个前提条件：A扣钱和B加钱，要么同时成功，要么同时失败。事务的需求就在于此</span><br><span class="line"></span><br><span class="line">        -- 所谓事务,它是一个操作序列，这些操作要么都执行，要么都不执行，它是一个不可分割的工作单位。</span><br><span class="line"></span><br><span class="line">        -- 例如，银行转帐工作：从一个帐号扣款并使另一个帐号增款，这两个操作要么都执行，要么都不执行。所以，应该把他们看成一个事务。事务是数据库维护数据一致性的单位，在每个事务结束时，都能保持数据一致性</span><br><span class="line"></span><br><span class="line">    -- 事务四大特性(简称ACID)</span><br><span class="line"></span><br><span class="line">        -- 原子性(Atomicity)</span><br><span class="line">        -- 一致性(Consistency)</span><br><span class="line">        -- 隔离性(Isolation)</span><br><span class="line">        -- 持久性(Durability)</span><br><span class="line"></span><br><span class="line">        -- 以下内容出自《高性能MySQL》第三版，了解事务的ACID及四种隔离级有助于我们更好的理解事务运作。</span><br><span class="line">        -- 下面举一个银行应用是解释事务必要性的一个经典例子。假如一个银行的数据库有两张表：支票表（checking）和储蓄表（savings）。现在要从用户Jane的支票账户转移200美元到她的储蓄账户，那么至少需要三个步骤：</span><br><span class="line">            -- 检查支票账户的余额高于或者等于200美元。</span><br><span class="line">            -- 从支票账户余额中减去200美元。</span><br><span class="line">            -- 在储蓄帐户余额中增加200美元。</span><br><span class="line">        -- 上述三个步骤的操作必须打包在一个事务中，任何一个步骤失败，则必须回滚所有的步骤。</span><br><span class="line">        -- 可以用START TRANSACTION语句开始一个事务，然后要么使用COMMIT提交将修改的数据持久保存，要么使用ROLLBACK撤销所有的修改。事务SQL的样本如下：</span><br><span class="line"></span><br><span class="line">            -- start transaction;</span><br><span class="line">            -- select balance from checking where customer_id = 10233276;</span><br><span class="line">            -- update checking set balance = balance - 200.00 where customer_id = 10233276;</span><br><span class="line">            -- update savings set balance = balance + 200.00 where customer_id = 10233276;</span><br><span class="line">            -- commit;</span><br><span class="line"></span><br><span class="line">        -- 一个很好的事务处理系统，必须具备这些标准特性：</span><br><span class="line"></span><br><span class="line">            -- 原子性（atomicity）</span><br><span class="line">                -- 一个事务必须被视为一个不可分割的最小工作单元，整个事务中的所有操作要么全部提交成功，要么全部失败回滚，对于一个事务来说，不可能只执行其中的一部分操作，这就是事务的原子性</span><br><span class="line"></span><br><span class="line">            -- 一致性（consistency）</span><br><span class="line">                -- 数据库总是从一个一致性的状态转换到另一个一致性的状态。（在前面的例子中，一致性确保了，即使在执行第三、四条语句之间时系统崩溃，支票账户中也不会损失200美元，因为事务最终没有提交，所以事务中所做的修改也不会保存到数据库中。）</span><br><span class="line"></span><br><span class="line">            -- 隔离性（isolation）</span><br><span class="line">                -- 通常来说，一个事务所做的修改在最终提交以前，对其他事务是不可见的。（在前面的例子中，当执行完第三条语句、第四条语句还未开始时，此时有另外的一个账户汇总程序开始运行，则其看到支票帐户的余额并没有被减去200美元。）</span><br><span class="line"></span><br><span class="line">            -- 持久性（durability）</span><br><span class="line">                -- 一旦事务提交，则其所做的修改会永久保存到数据库。（此时即使系统崩溃，修改的数据也不会丢失。）</span><br><span class="line"></span><br><span class="line">    -- 事务命令</span><br><span class="line"></span><br><span class="line">        -- 表的引擎类型必须是innodb类型才可以使用事务，这是mysql表的默认引擎</span><br><span class="line">        -- 查看表的创建语句，可以看到engine=innodb</span><br><span class="line"></span><br><span class="line">        -- 选择数据库</span><br><span class="line">            use jing_dong;</span><br><span class="line">            -- 查看goods表</span><br><span class="line">            show create table goods;</span><br><span class="line"></span><br><span class="line">        -- 开启事务，命令如下：</span><br><span class="line">            -- 开启事务后执行修改命令，变更会维护到本地缓存中，而不维护到物理表中</span><br><span class="line">            begin;</span><br><span class="line">            -- 或者</span><br><span class="line">            start transaction;</span><br><span class="line"></span><br><span class="line">        -- 提交事务，命令如下</span><br><span class="line">            -- 将缓存中的数据变更维护到物理表中</span><br><span class="line">            commit;</span><br><span class="line"></span><br><span class="line">        -- 回滚事务，命令如下：</span><br><span class="line">            -- 放弃缓存中变更的数据</span><br><span class="line">            rollback;</span><br><span class="line"></span><br><span class="line">        -- 注意</span><br><span class="line">            -- 修改数据的命令会自动的触发事务，包括insert、update、delete</span><br><span class="line">            -- 而在SQL语句中有手动开启事务的原因是：可以进行多次数据的修改，如果成功一起成功，否则一起会滚到之前的数据</span><br><span class="line"></span><br><span class="line">    -- 提交</span><br><span class="line">        -- 为了演示效果，需要打开两个终端窗口，使用同一个数据库，操作同一张表</span><br><span class="line"></span><br><span class="line">        -- step1：连接</span><br><span class="line">            -- 终端1：查询商品分类信息</span><br><span class="line">                select * from goods_cates;</span><br><span class="line"></span><br><span class="line">        -- step2：增加数据</span><br><span class="line">            -- 终端2：开启事务，插入数据</span><br><span class="line">                begin;</span><br><span class="line">                insert into goods_cates(name) values(&#x27;小霸王游戏机&#x27;);</span><br><span class="line"></span><br><span class="line">            -- 终端2：查询数据，此时有新增的数据</span><br><span class="line">                select * from goods_cates;</span><br><span class="line"></span><br><span class="line">        -- step3：查询</span><br><span class="line">            -- 终端1：查询数据，发现并没有新增的数据(因为此时终端2并没有提交,操作的数据仍然在缓存中)</span><br><span class="line">                select * from goods_cates;</span><br><span class="line"></span><br><span class="line">        -- step4：提交</span><br><span class="line">            -- 终端2：完成提交</span><br><span class="line">                commit;</span><br><span class="line"></span><br><span class="line">        -- step5：查询</span><br><span class="line">            -- 终端1：查询，发现有新增的数据(因为此时终端2已经提交数据)</span><br><span class="line">                select * from goods_cates;</span><br><span class="line"></span><br><span class="line">    -- 回滚</span><br><span class="line">        -- 为了演示效果，需要打开两个终端窗口，使用同一个数据库，操作同一张表</span><br><span class="line"></span><br><span class="line">        -- step1：连接</span><br><span class="line">            -- 终端1</span><br><span class="line">                select * from goods_cates;</span><br><span class="line"></span><br><span class="line">        -- step2：增加数据</span><br><span class="line">            -- 终端2：开启事务，插入数据</span><br><span class="line">                begin;</span><br><span class="line">                insert into goods_cates(name) values(&#x27;小霸王游戏机&#x27;);</span><br><span class="line"></span><br><span class="line">            -- 终端2：查询数据，此时有新增的数据</span><br><span class="line">                select * from goods_cates;</span><br><span class="line"></span><br><span class="line">        -- step3：查询</span><br><span class="line">            -- 终端1：查询数据，发现并没有新增的数据</span><br><span class="line">                select * from goods_cates;</span><br><span class="line"></span><br><span class="line">        -- step4：回滚</span><br><span class="line">            -- 终端2：完成回滚</span><br><span class="line">                rollback;</span><br><span class="line"></span><br><span class="line">        -- step5：查询</span><br><span class="line">            -- 终端1：查询数据，发现没有新增的数据</span><br><span class="line">                select * from goods_cates;</span><br><span class="line"></span><br><span class="line">-- 索引</span><br><span class="line">    -- 1. 思考</span><br><span class="line">        -- 在图书馆中是如何找到一本书的？</span><br><span class="line">        -- 一般的应用系统对比数据库的读写比例在10:1左右(即有10次查询操作时有1次写的操作)，</span><br><span class="line">        -- 而且插入操作和更新操作很少出现性能问题，遇到最多、最容易出问题还是一些复杂的查询操作，所以查询语句的优化显然是重中之重</span><br><span class="line"></span><br><span class="line">    -- 2. 解决办法</span><br><span class="line">        -- 当数据库中数据量很大时，查找数据会变得很慢</span><br><span class="line">        -- 优化方案：索引</span><br><span class="line"></span><br><span class="line">    -- 3. 索引是什么</span><br><span class="line">        -- 索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。</span><br><span class="line">        -- 更通俗的说，数据库索引好比是一本书前面的目录，能加快数据库的查询速度</span><br><span class="line"></span><br><span class="line">    -- 4. 索引目的</span><br><span class="line">        -- 索引的目的在于提高查询效率，可以类比字典，如果要查“mysql”这个单词，我们肯定需要定位到m字母，然后从下往下找到y字母，再找到剩下的sql。如果没有索引，</span><br><span class="line">        -- 那么你可能需要把所有单词看一遍才能找到你想要的，如果我想找到m开头的单词呢？或者ze开头的单词呢？是不是觉得如果没有索引，这个事情根本无法完成？</span><br><span class="line"></span><br><span class="line">    -- 5. 索引原理</span><br><span class="line">        -- 除了词典，生活中随处可见索引的例子，如火车站的车次表、图书的目录等。它们的原理都是一样的，通过不断的缩小想要获得数据的范围来筛选出最终想要的结果，同时把随机的事件变成顺序的事件，也就是我们总是通过同一种查找方式来锁定数据。</span><br><span class="line">        -- 数据库也是一样，但显然要复杂许多，因为不仅面临着等值查询，还有范围查询(&gt;、&lt;、between、in)、模糊查询(like)、并集查询(or)等等。数据库应该选择怎么样的方式来应对所有的问题呢？我们回想字典的例子，能不能把数据分成段，然后分段查询呢？最简单的如果1000条数据，1到100分成第一段，101到200分成第二段，201到300分成第三段……这样查第250条数据，只要找第三段就可以了，一下子去除了90%的无效数据。</span><br><span class="line">        -- 原理： 缩小查询范围  数据库内部实现： 通过B+ 数算法来实现的</span><br><span class="line">    -- 索引的使用</span><br><span class="line"></span><br><span class="line">        -- 查看索引</span><br><span class="line">            -- show index from 表名;</span><br><span class="line"></span><br><span class="line">        -- 创建索引</span><br><span class="line">            -- 如果指定字段是字符串，需要指定长度，建议长度与定义字段时的长度一致</span><br><span class="line">            -- 字段类型如果不是字符串，可以不填写长度部分</span><br><span class="line"></span><br><span class="line">            -- create index 索引名称 on 表名(字段名称(长度))</span><br><span class="line"></span><br><span class="line">        -- 删除索引：</span><br><span class="line">            -- drop index 索引名称 on 表名;</span><br><span class="line"></span><br><span class="line">    -- 索引demo</span><br><span class="line">        -- 创建测试表testindex</span><br><span class="line">            create table test_index(title varchar(10));</span><br><span class="line"></span><br><span class="line">        -- 使用python程序（ipython也可以）通过pymsql模块 向表中加入十万条数据</span><br><span class="line">            复制代码：</span><br><span class="line"></span><br><span class="line">                from pymysql import connect</span><br><span class="line"></span><br><span class="line">                def main():</span><br><span class="line">                    # 创建Connection连接</span><br><span class="line">                    conn = connect(host=&#x27;localhost&#x27;,port=3306,database=&#x27;jing_dong&#x27;,user=&#x27;root&#x27;,password=&#x27;mysql&#x27;,charset=&#x27;utf8&#x27;)</span><br><span class="line">                    # 获得Cursor对象</span><br><span class="line">                    cursor = conn.cursor()</span><br><span class="line">                    # 插入10万次数据</span><br><span class="line">                    for i in range(100000):</span><br><span class="line">                        cursor.execute(&quot;insert into test_index values(&#x27;ha-%d&#x27;)&quot; % i)</span><br><span class="line">                    # 提交数据</span><br><span class="line">                    conn.commit()</span><br><span class="line"></span><br><span class="line">                if __name__ == &quot;__main__&quot;:</span><br><span class="line">                    main()</span><br><span class="line"></span><br><span class="line">    -- 查询</span><br><span class="line">        -- 开启运行时间监测：</span><br><span class="line">            set profiling=1;</span><br><span class="line"></span><br><span class="line">        -- 查找第1万条数据ha-99999</span><br><span class="line">            select * from test_index where title=&#x27;ha-99999&#x27;;</span><br><span class="line"></span><br><span class="line">        -- 查看执行的时间：</span><br><span class="line">            show profiles;</span><br><span class="line"></span><br><span class="line">        -- 为表title_index的title列创建索引：</span><br><span class="line">            create index title_index on test_index(title(10));</span><br><span class="line"></span><br><span class="line">        -- 执行查询语句：</span><br><span class="line">            select * from test_index where title=&#x27;ha-99999&#x27;;</span><br><span class="line"></span><br><span class="line">        -- 再次查看执行的时间</span><br><span class="line">            show profiles;</span><br><span class="line"></span><br><span class="line">    -- 注意：</span><br><span class="line">        -- 要注意的是，建立太多的索引将会影响更新和插入的速度，因为它需要同样更新每个索引文件。</span><br><span class="line">        -- 对于一个经常需要更新和插入的表格，就没有必要为一个很少使用的where字句单独建立索引了，</span><br><span class="line">        -- 对于比较小的表，排序的开销不会很大，也没有必要建立另外的索引。</span><br><span class="line">        -- 建立索引会占用磁盘空间。</span><br><span class="line"></span><br><span class="line">        -- 索引注意点（谈谈你对索引的认识）</span><br><span class="line">            -- 1) 索引最主要解决的问题：当数据量较大时,且这些数据不需要经常修改,使用索引来加快查询速度</span><br><span class="line">            -- 2) 对于比较小的表，查询开销不会很大，也没有必要建立另外的索引</span><br><span class="line">            -- 3) 建立太多的索引将会影响更新和插入的速度，因为它需要同样更新每个索引文件</span><br><span class="line">            -- 4) 对于一个经常需要更新和插入的表格，就没有必要为一个很少使用的where字句单独建立索引</span><br><span class="line">            -- 5) 建立索引会占用磁盘空间</span><br><span class="line"></span><br><span class="line">        -- 作者：向上的团子</span><br><span class="line">        -- 链接：https://zhuanlan.zhihu.com/p/413515062</span><br><span class="line">        -- 来源：知乎</span><br><span class="line">        -- 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br><span class="line"></span><br><span class="line">-- 账户管理</span><br><span class="line">    -- 最新命令产看官方文档：https://dev.mysql.com/doc/refman/8.0/en/grant.html</span><br><span class="line">    -- CREATE USER &#x27;jeffrey&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;password&#x27;;</span><br><span class="line">    -- GRANT ALL ON db1.* TO &#x27;jeffrey&#x27;@&#x27;localhost&#x27;;</span><br><span class="line">    -- GRANT SELECT ON db2.invoice TO &#x27;jeffrey&#x27;@&#x27;localhost&#x27;;</span><br><span class="line">    -- ALTER USER &#x27;jeffrey&#x27;@&#x27;localhost&#x27; WITH MAX_QUERIES_PER_HOUR 90;</span><br><span class="line"></span><br><span class="line">    -- mysql账户介绍</span><br><span class="line">        -- 提示： 对账户管理，需要使用root账户操作</span><br><span class="line"></span><br><span class="line">    -- 授权</span><br><span class="line">        1) 查看所有账户</span><br><span class="line">            use mysql  # 数据库名</span><br><span class="line">            select host,user,authentication_string from user;</span><br><span class="line"></span><br><span class="line">        2) 创建账户及授权</span><br><span class="line">            # grant 权限列表 on 数据库 to &#x27;账户&#x27;@&#x27;访问主机&#x27; identified by &#x27;密码&#x27;;</span><br><span class="line">            grant select on db_python04.* to &#x27;xiaoli&#x27;@&#x27;localhost&#x27; identified by &#x27;1234&#x27;;</span><br><span class="line"></span><br><span class="line">            -- 提示：需要使用实例级账户登录后操作，以root为例</span><br><span class="line">            -- 常用权限主要包括：create、alter、drop、insert、update、delete、select</span><br><span class="line">            -- 如果分配所有权限，可以使用all privileges</span><br><span class="line">            -- 描述访问主机时，localhost表示只能在本机访问数据库，%表示可以通过任何ip访问数据库</span><br><span class="line">            -- 查看权限:show grants for 账户名@访问主机</span><br><span class="line"></span><br><span class="line">    -- 账户管理</span><br><span class="line">        1) 修改权限</span><br><span class="line">            # grant 权限名称 on 数据库 to &#x27;账户&#x27;@&#x27;主机&#x27; with grant option;</span><br><span class="line">            grant select,insert on db_python04.* to laoli@localhost with grant option;</span><br><span class="line">            flush privileges; # 刷新权限</span><br><span class="line">        2) 修改密码</span><br><span class="line">            # update user set authentication_string=password(&#x27;新密码&#x27;) where user=&#x27;用户名&#x27;;</span><br><span class="line">            use mysql;</span><br><span class="line">            update user set authentication_string=password(&#x27;abc&#x27;) where user=&#x27;laoli&#x27;;</span><br><span class="line">            flush privileges; # 刷新权限</span><br><span class="line">        3) 删除账户</span><br><span class="line">            # drop user &#x27;用户名&#x27;@&#x27;主机&#x27;;</span><br><span class="line">            drop user &#x27;laoli&#x27;@&#x27;localhost&#x27;;</span><br><span class="line">            flush privileges; # 刷新权限</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="programming" scheme="https://chyriso.github.io/categories/major/programming/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/categories/major/programming/mysql/"/>
    
    
    <category term="Database" scheme="https://chyriso.github.io/tags/Database/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/tags/mysql/"/>
    
    <category term="sql" scheme="https://chyriso.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>数据库设计</title>
    <link href="https://chyriso.github.io/2022/06/18/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/"/>
    <id>https://chyriso.github.io/2022/06/18/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/</id>
    <published>2022-06-18T12:04:11.000Z</published>
    <updated>2022-06-18T12:05:15.912Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line"># 数据库设计</span><br><span class="line">#     E-R模型(Entity-Relationship Model) : 实体 - 关系 - 模型</span><br><span class="line">#     关系型数据库是建立在实体关系模型(E-R模型 )基础之上,再开展数据库的分析与设计</span><br><span class="line">#     在项目开发中，一般会先设计好数据库，数据库开发一般是项目开发的第一步</span><br><span class="line">#     a&gt; 实体(Entry)实体设计就好比定义一个类一样，指定从哪些方面来描述对象，一个实体可以转换为数据库中的一个表。</span><br><span class="line">#     b&gt; 关系(Relationship) ，联系，描述两个实体之间的对应规则</span><br><span class="line">#         1) 一对一：一个萝卜一个坑、学生与指纹、员工和工资卡</span><br><span class="line">#         2) 一对多：班级与学生、客户与订单、部门与员工</span><br><span class="line">#         3) 多对一：学生与班级、员工与部门</span><br><span class="line">#         4) 多对多关系：学生与社团、运动员与比赛项目</span><br><span class="line">#</span><br><span class="line">#     5.2 三范式为了建立冗余较小、结构合理的数据库，设计数据库时必须遵循一定的规则。在关系型数据 库中这种规则就称为范式。数据库的范式越高，则数据冗余越少，但是会导致查询效率降低，一般数据库设计满足第三范式，就很好了。</span><br><span class="line">#         a&gt; 第一范式 强调的是列的原子性，即列不能够再分成其他几列。</span><br><span class="line">#         b&gt; 第二范式 首先是 1NF，另外包含两部分内容，一是表必须有一个主键；二是没有包含在主键中的列必 须完全依赖于主键。依据主键能够推导出其他字段的信息。</span><br><span class="line">#         c&gt; 第三范式 首先是2NF，另外非主键列必须直接依赖于主键，不能存在传递依赖。即不能存在：非主键列 A 依赖于非主键列 B，非主键列 B 依赖于主键的情况。</span><br><span class="line">#             a 主键</span><br><span class="line">#             间接依赖：a --&gt;b--&gt;c</span><br><span class="line">#             直接依赖：a--&gt;b、a--&gt;c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 初始化数据</span><br><span class="line">    -- 创建“京东”数据库 db_jingdong</span><br><span class="line">        create database db_jingdong charset=utf8;</span><br><span class="line">        use db_jingdong;</span><br><span class="line"></span><br><span class="line">    -- 创建商品表goods (int,name,cate_name,brand_name,price,is_show,is_saleoff)</span><br><span class="line"></span><br><span class="line">        create table goods(</span><br><span class="line">           id int unsigned primary key auto_increment not null,</span><br><span class="line">           name varchar(150) not null,</span><br><span class="line">           cate_name varchar(40) not null,</span><br><span class="line">           brand_name varchar(40) not null,</span><br><span class="line">           price decimal(10,3) not null default 0,</span><br><span class="line">           is_show bit not null default 1,</span><br><span class="line">           is_saleoff bit not null default 0</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">    -- 向goods表插入初始数据</span><br><span class="line">        insert into goods values(0,&#x27;r510vc 15.6英寸笔记本&#x27;,&#x27;笔记本&#x27;,&#x27;华硕&#x27;,&#x27;3399&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;y400n 14.0英寸笔记本电脑&#x27;,&#x27;笔记本&#x27;,&#x27;联想&#x27;,&#x27;4999&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;g150th 15.6英寸游戏本&#x27;,&#x27;游戏本&#x27;,&#x27;雷神&#x27;,&#x27;8499&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;x550cc 15.6英寸笔记本&#x27;,&#x27;笔记本&#x27;,&#x27;华硕&#x27;,&#x27;2799&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;x240 超极本&#x27;,&#x27;超级本&#x27;,&#x27;联想&#x27;,&#x27;4880&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;u330p 13.3英寸超极本&#x27;,&#x27;超级本&#x27;,&#x27;联想&#x27;,&#x27;4299&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;svp13226scb 触控超极本&#x27;,&#x27;超级本&#x27;,&#x27;索尼&#x27;,&#x27;7999&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;ipad mini 7.9英寸平板电脑&#x27;,&#x27;平板电脑&#x27;,&#x27;苹果&#x27;,&#x27;1998&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;ipad air 9.7英寸平板电脑&#x27;,&#x27;平板电脑&#x27;,&#x27;苹果&#x27;,&#x27;3388&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;ipad mini 配备 retina 显示屏&#x27;,&#x27;平板电脑&#x27;,&#x27;苹果&#x27;,&#x27;2788&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;ideacentre c340 20英寸一体电脑 &#x27;,&#x27;台式机&#x27;,&#x27;联想&#x27;,&#x27;3499&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;vostro 3800-r1206 台式电脑&#x27;,&#x27;台式机&#x27;,&#x27;戴尔&#x27;,&#x27;2899&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;imac me086ch/a 21.5英寸一体电脑&#x27;,&#x27;台式机&#x27;,&#x27;苹果&#x27;,&#x27;9188&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;at7-7414lp 台式电脑 linux ）&#x27;,&#x27;台式机&#x27;,&#x27;宏碁&#x27;,&#x27;3699&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;z220sff f4f06pa工作站&#x27;,&#x27;服务器/工作站&#x27;,&#x27;惠普&#x27;,&#x27;4288&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;poweredge ii服务器&#x27;,&#x27;服务器/工作站&#x27;,&#x27;戴尔&#x27;,&#x27;5388&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;mac pro专业级台式电脑&#x27;,&#x27;服务器/工作站&#x27;,&#x27;苹果&#x27;,&#x27;28888&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;hmz-t3w 头戴显示设备&#x27;,&#x27;笔记本配件&#x27;,&#x27;索尼&#x27;,&#x27;6999&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;商务双肩背包&#x27;,&#x27;笔记本配件&#x27;,&#x27;索尼&#x27;,&#x27;99&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;x3250 m4机架式服务器&#x27;,&#x27;服务器/工作站&#x27;,&#x27;ibm&#x27;,&#x27;6888&#x27;,default,default);</span><br><span class="line">        insert into goods values(0,&#x27;商务双肩背包&#x27;,&#x27;笔记本配件&#x27;,&#x27;索尼&#x27;,&#x27;99&#x27;,default,default);</span><br><span class="line"></span><br><span class="line">-- SQL强化练习</span><br><span class="line"></span><br><span class="line">    -- 查询类型 cate_name 为 &#x27;超级本&#x27; 的商品名称 name 、价格 price ( where )</span><br><span class="line"></span><br><span class="line">        select cate_name,name ,price from goods where cate_name=&#x27;超级本&#x27;;</span><br><span class="line"></span><br><span class="line">    -- 显示商品的种类</span><br><span class="line"></span><br><span class="line">        -- 分组的方式( group by )</span><br><span class="line">        select cate_name from goods group by cate_name;</span><br><span class="line"></span><br><span class="line">        -- 去重的方法( distinct )</span><br><span class="line">        select distinct cate_name from goods;</span><br><span class="line"></span><br><span class="line">        -- 显示每个分组中具体的商品名称（group_concat(name)函数：将每个分组中的name字段用逗号拼接在一起）</span><br><span class="line">        select cate_name,group_concat(name) from goods group by cate_name;</span><br><span class="line"></span><br><span class="line">    -- 求所有产品的平均价格avg ,并且保留两位小数( round :四舍五入)</span><br><span class="line">        select round(avg(price),2) from goods;</span><br><span class="line"></span><br><span class="line">    -- 显示每种类型 cate_name (由此可知需要分组)商品的平均价格</span><br><span class="line">        select cate_name, round(avg(price),2) as &#x27;平均价格&#x27; from goods group by cate_name;</span><br><span class="line">        -- 此时的avg(price)函数计算每个分组内所有商品的平均价格</span><br><span class="line"></span><br><span class="line">    -- 查询每种类型的商品中最贵max 、最便宜min 、平均价avg 、数量count</span><br><span class="line">        select cate_name, max(price),min(price), round(avg(price),2) as &#x27;平均价格&#x27; ,count(*) from goods group by cate_name;</span><br><span class="line">        -- 此时的聚合函数计算每个分组内所有商品的各种价格</span><br><span class="line"></span><br><span class="line">    -- 查询所有价格大于平均价格的商品，并且按价格降序排序order desc</span><br><span class="line">        # 1 查询平均价格(avg_price)</span><br><span class="line">            select avg(price) from goods;</span><br><span class="line">        # 2 使用子查询</span><br><span class="line">            select * from goods where price&gt;(select avg(price) from goods);</span><br><span class="line">            select * from goods where price&gt;(select avg(price) from goods) order by price desc;</span><br><span class="line"></span><br><span class="line">    -- 查询每种类型中最贵的产品信息(难)</span><br><span class="line">        思路：</span><br><span class="line">        1. 每种类型中最贵</span><br><span class="line">        2. 产品信息 ： goods</span><br><span class="line"></span><br><span class="line">        # 1 查找 每种类型 中 最贵的 价格</span><br><span class="line">        select cate_name,max(price) from goods group by cate_name;</span><br><span class="line"></span><br><span class="line">        # 2 关联查询 inner join 每种类型 中最贵的产品信息</span><br><span class="line">        select * from goods as g inner join (select cate_name,max(price) as m_price from goods group by cate_name) as m on g.cate_name=m.cate_name and g.price=m.m_price order by g.cate_name;</span><br><span class="line">        select * from (select cate_name,max(price) as m_price from goods group by cate_name) as m left join goods as g on g.cate_name=m.cate_name and g.price=m.m_price order by g.cate_name;</span><br><span class="line"></span><br><span class="line">-- 数据表设计与创建</span><br><span class="line">    -- 创建“商品分类”表</span><br><span class="line"></span><br><span class="line">        -- 第一步：创建表(商品种类表 goods_cates )</span><br><span class="line">            create table if not exists goods_cates(</span><br><span class="line">                id int unsigned primary key auto_increment,</span><br><span class="line">                name varchar(40) not null</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">        -- 第二步：同步商品分类表数据将商品表的所有（种类信息）写入到（商品种类表）中</span><br><span class="line">            -- 1. 手动添加</span><br><span class="line"></span><br><span class="line">            -- 2. 通过查询结果自动添加商品分类信息</span><br><span class="line"></span><br><span class="line">                # 查询goods表中的所有种类(cate_name)</span><br><span class="line">                    select distinct cate_name from goods; # 去重（distinct）</span><br><span class="line"></span><br><span class="line">                # 通过sql语句取得要插入的数据</span><br><span class="line">                    insert into goods_cates(name) (select distinct cate_name from goods);</span><br><span class="line">                    insert into goods_cates(name) select distinct cate_name from goods;</span><br><span class="line">                    注意：把查询出来的结果写入 goods_cates 表里去 ( insert into ) 只插入name，且不需要加values 。</span><br><span class="line"></span><br><span class="line">        -- 第三步：同步商品表数据</span><br><span class="line"></span><br><span class="line">            -- 通过 goods_cates 数据表来更新 goods 表</span><br><span class="line"></span><br><span class="line">            # 因为要通过goods_cates表更新goods表，所以要把两个表连接起来</span><br><span class="line">            select * from goods as g inner join goods_cates as c on g.cate_name=c.name;</span><br><span class="line"></span><br><span class="line">            # 把商品表goods 中的cate_name全部替换成商品分类表中的商品id (update ... set)</span><br><span class="line">            update (goods as g inner join goods_cates as c on g.cate_name=c.name) set g.cate_name=c.id;</span><br><span class="line">            update goods as g inner join goods_cates as c on g.cate_name=c.name set g.cate_name=c.id;</span><br><span class="line"></span><br><span class="line">        -- 第四步：修改表结构</span><br><span class="line"></span><br><span class="line">            -- 查看表结构（注意goods表的cate_id 与 goods_cates表的 id 字段类型需要一致）</span><br><span class="line">            -- 修改表结构 alter table 字段名字不同 change，把 cate_name 改成 cate_id int unsigned not null</span><br><span class="line"></span><br><span class="line">            alter table goods change cate_name cate_id int unsigned not null;</span><br><span class="line">            alter database db_jingdb_areas modify name=db_areas;</span><br><span class="line"></span><br><span class="line">    -- 创建商品品牌表 goods_brands</span><br><span class="line"></span><br><span class="line">        -- 第一步：创建 &quot;商品品牌表&quot; 表</span><br><span class="line"></span><br><span class="line">            # 创建goods_brands表</span><br><span class="line">                create table if not exists goods_brands(</span><br><span class="line">                    id int unsigned primary key auto_increment,</span><br><span class="line">                    name varchar(40) not null</span><br><span class="line">                );</span><br><span class="line"></span><br><span class="line">            # 插入数据，数据来自goods表</span><br><span class="line">                select brand_name from goods group by brand_name;</span><br><span class="line"></span><br><span class="line">            # 按照分组的方式查询goods表中的所有种类(brand_name)</span><br><span class="line">                insert goods_brands(name) (select brand_name from goods group by brand_name);</span><br><span class="line"></span><br><span class="line">            注意：把查询出来的结果写入 goods_brands 表里去 ( insert into ) 只插入name。</span><br><span class="line"></span><br><span class="line">            -- 创建数据库的同时插入数据</span><br><span class="line">                create table if not exists goods_brands(</span><br><span class="line">                    id int unsigned primary key auto_increment,</span><br><span class="line">                    name varchar(40) not null</span><br><span class="line">                ) select brand_name as name from goods group by brand_name;</span><br><span class="line">                -- 从goods表分组查询出来的brand_name需要和创建表时使用的name保持一致：brand_name as name</span><br><span class="line"></span><br><span class="line">        第二步：同步数据</span><br><span class="line"></span><br><span class="line">            # 通过goods_brands数据表来更新goods数据表 g.brand_name=b.id</span><br><span class="line">            select * from goods as g inner join goods_brands as b on g.brand_name=b.name;</span><br><span class="line">            update (goods as g inner join goods_brands as b on g.brand_name=b.name) set g.brand_name=b.id;</span><br><span class="line">            update goods as g inner join goods_brands as b on g.brand_name=b.name set g.brand_name=b.id;</span><br><span class="line"></span><br><span class="line">        第三步：修改表结构</span><br><span class="line"></span><br><span class="line">            # 通过alter table语句修改表结构 brand_id int unsigned not null</span><br><span class="line">            alter table goods change brand_name brand_id int unsigned not null;</span><br><span class="line"></span><br><span class="line">            -- 一个alter table语句一次可以修改或重命名多个字段</span><br><span class="line">            alter table goods change cate_name cate_id int unsigned not null,brand_name brand_id int unsigned not null;</span><br><span class="line"></span><br><span class="line">-- 外键的使用外键的作用：</span><br><span class="line">-- 从表（外键的表）插入或者更新的数据，必须参考主表(主键的表)的值。</span><br><span class="line"></span><br><span class="line">    -- 向goods表里插入任意一条数据</span><br><span class="line">        insert into goods (name,cate_id,brand_id,price) values(&#x27;联想固态硬盘&#x27;,10,10,1200);</span><br><span class="line"></span><br><span class="line">    -- 添加外键约束 foreign key</span><br><span class="line">        alter table goods add foreign key(cate_id) references goods_cates(id);</span><br><span class="line">        alter table goods add foreign key(brand_id) references goods_brands(id);</span><br><span class="line"></span><br><span class="line">            -- 失败原因，因为&#x27;联想固态硬盘&#x27;这行的数据不满足外键约束 delete</span><br><span class="line">            -- delete from goods where name=&quot;联想固态硬盘&quot;;</span><br><span class="line"></span><br><span class="line">    -- 创建表的同时设置外键 (注意 goods_cates 和 goods_brands 两个表必须事先存在)</span><br><span class="line"></span><br><span class="line">        create table goods(id int primary key auto_increment not null,</span><br><span class="line">            name varchar(40) default &#x27;&#x27;,</span><br><span class="line">            price decimal(5,2),</span><br><span class="line">            cate_id int unsigned,</span><br><span class="line">            brand_id int unsigned,</span><br><span class="line">            is_saleoff bit default 0,</span><br><span class="line">            foreign key(cate_id) references goods_cates(id),</span><br><span class="line">            foreign key(brand_id) references goods_brands(id)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">    -- 如何取消外键约束</span><br><span class="line">        -- 需要先获取外键约束名称,该名称系统会自动生成,可以通过查看表创建语句来获取名称</span><br><span class="line">        show create table goods;</span><br><span class="line"></span><br><span class="line">        # foreign key name:goods_ibfk_1,goods_ibfk_2</span><br><span class="line"></span><br><span class="line">        -- 获取名称之后就可以根据名称来删除外键约束</span><br><span class="line">        alter table goods drop foreign key goods_ibfk_1;</span><br><span class="line">        alter table goods drop foreign key goods_ibfk_2;</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="programming" scheme="https://chyriso.github.io/categories/major/programming/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/categories/major/programming/mysql/"/>
    
    
    <category term="Database" scheme="https://chyriso.github.io/tags/Database/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/tags/mysql/"/>
    
    <category term="sql" scheme="https://chyriso.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>表数据查询</title>
    <link href="https://chyriso.github.io/2022/06/18/%E8%A1%A8%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2/"/>
    <id>https://chyriso.github.io/2022/06/18/%E8%A1%A8%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2/</id>
    <published>2022-06-18T11:33:02.000Z</published>
    <updated>2022-06-18T11:41:39.814Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">-- select.sql文件</span><br><span class="line"></span><br><span class="line">-- 数据准备</span><br><span class="line">    -- 用户登录数据库</span><br><span class="line">    -- CMD:mysql -uroot - proot</span><br><span class="line"></span><br><span class="line">    -- 创建一个数据库</span><br><span class="line">    create database db_py charset = utf8;</span><br><span class="line"></span><br><span class="line">    -- 使用数据库</span><br><span class="line">    use db_py;</span><br><span class="line"></span><br><span class="line">    -- 显示当前使用的数据库是哪个</span><br><span class="line">    select database();</span><br><span class="line"></span><br><span class="line">    -- 创建一个数据表 students表</span><br><span class="line">    create table students(</span><br><span class="line">        id int unsigned primary key auto_increment not null,</span><br><span class="line">        name varchar(20) default &#x27;&#x27;,</span><br><span class="line">        age tinyint unsigned default 0,</span><br><span class="line">        height decimal(5,2),</span><br><span class="line">        gender enum(&quot;男&quot;,&quot;女&quot;,&quot;中性&quot;,&quot;保密&quot;) default &quot;保密&quot;,</span><br><span class="line">        cls_id int unsigned default 0,</span><br><span class="line">        is_delete bit default 0</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    -- char() 与 varchar()</span><br><span class="line">    -- char(20) 存20个字节，假设存2个字母，剩下的补空格</span><br><span class="line">    -- varchar（20) 最大存20个字节，存多少就用多少空间</span><br><span class="line"></span><br><span class="line">    -- tinyint 与 tinyint unsigned</span><br><span class="line">    -- tinyint 正负数都可以存 -128~127，tinyint unsigned 没有符号位 0~255</span><br><span class="line"></span><br><span class="line">    -- decimal(5,2)</span><br><span class="line">    -- 存五位数，小数两位</span><br><span class="line"></span><br><span class="line">    -- enum(&quot;男&quot;,&quot;女&quot;,&quot;中性&quot;，&quot;保密&quot;)</span><br><span class="line">    -- 分别可以用 1,2,3,4 表示 &quot;男&quot;,&quot;女&quot;,&quot;中性&quot;,&quot;保密&quot;</span><br><span class="line"></span><br><span class="line">    -- default x</span><br><span class="line">    -- 默认值 x</span><br><span class="line"></span><br><span class="line">    -- bit</span><br><span class="line">    -- bit:存一位，0、1 ，bit(2):存两位，0、1、2、3 二进制表示00、01、10、11</span><br><span class="line"></span><br><span class="line">    -- classes表</span><br><span class="line">    create table classes(</span><br><span class="line">        id int unsigned auto_increment primary key not null,</span><br><span class="line">        name varchar(30)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    -- 查看数据库、表创建语句</span><br><span class="line">    show create database db_py;</span><br><span class="line">    show create table students;</span><br><span class="line"></span><br><span class="line">    -- 向students表插入数据</span><br><span class="line">    insert into students values</span><br><span class="line">    (0,&#x27;小明&#x27;,18,180.00,2,1,0),</span><br><span class="line">    (0,&#x27;小月月&#x27;,18,180.00,2,2,1),</span><br><span class="line">    (0,&#x27;彭于晏&#x27;,29,185.00,1,1,0),</span><br><span class="line">    (0,&#x27;刘德华&#x27;,59,175.00,1,2,1),</span><br><span class="line">    (0,&#x27;黄蓉&#x27;,38,160.00,2,1,0),</span><br><span class="line">    (0,&#x27;凤姐&#x27;,28,150.00,4,2,1),</span><br><span class="line">    (0,&#x27;王祖贤&#x27;,18,172.00,2,1,1),</span><br><span class="line">    (0,&#x27;周杰伦&#x27;,36,NULL,1,1,0),</span><br><span class="line">    (0,&#x27;程坤&#x27;,27,181.00,1,2,0),</span><br><span class="line">    (0,&#x27;刘亦菲&#x27;,25,166.00,2,2,0),</span><br><span class="line">    (0,&#x27;金星&#x27;,33,162.00,3,3,1),</span><br><span class="line">    (0,&#x27;静香&#x27;,12,180.00,2,4,0),</span><br><span class="line">    (0,&#x27;郭靖&#x27;,12,170.00,1,4,0),</span><br><span class="line">    (0,&#x27;周杰&#x27;,34,176.00,2,5,0);</span><br><span class="line"></span><br><span class="line">    -- 向classes表插入数据</span><br><span class="line">    insert into classes values(0,&#x27;python_01期&#x27;),(0,&#x27;python_02期&#x27;);</span><br><span class="line"></span><br><span class="line">-- 查询</span><br><span class="line">    -- 查询所有字段</span><br><span class="line">    -- select * from 表名;</span><br><span class="line">    select * from students;</span><br><span class="line">    select * from classes;</span><br><span class="line">    select id,name from classes;</span><br><span class="line"></span><br><span class="line">    -- 查询指定字段</span><br><span class="line">    -- select 列1,列2,... from 表名;</span><br><span class="line">    select name,age from students;</span><br><span class="line"></span><br><span class="line">    -- 使用 as 给字段起别名</span><br><span class="line">        -- select 字段 as 名字... from 表名;</span><br><span class="line">        select name as 姓名,age as 年龄 from students;</span><br><span class="line"></span><br><span class="line">        -- sql语句查询字段的完全形式</span><br><span class="line">        -- select 表明.字段 ... from 表名;</span><br><span class="line">        -- select students.name,students.age from students;</span><br><span class="line"></span><br><span class="line">        -- 当一个sql语句中出现了多个数据表, 并且查询的字段在多个表中并且字段名相同, 此时表名不能够省略</span><br><span class="line">        select students.name as &#x27;姓名&#x27;,classes.name as &#x27;班名&#x27; from students,classes;</span><br><span class="line"></span><br><span class="line">    -- 可以通过as给表起别名</span><br><span class="line">    -- select 别名.字段 ... from 表名 as 别名;</span><br><span class="line">    select students.name,students.age from students;</span><br><span class="line">    select s.name,s.age from students as s;</span><br><span class="line">    select s.name as 姓名,c.name as 班名 from students as s,classes as c;</span><br><span class="line">    -- 失败的：select student.name,s.age from students as s;</span><br><span class="line">    -- 因为起了别名，所以上述sql执行失败，应该使用别名</span><br><span class="line"></span><br><span class="line">    -- 消除重复行</span><br><span class="line">    -- distinct字段：在select后面、列的前面使用distinct可以消除重复的行</span><br><span class="line">    select distinct gender from students;</span><br><span class="line">    select distinct id from students;</span><br><span class="line">    select distinct * from students;</span><br><span class="line"></span><br><span class="line">-- 条件查询</span><br><span class="line">-- select ... from 表名 where 条件</span><br><span class="line">-- 使用where子句对表中的数据筛选，结果为true的行会出现在结果集中</span><br><span class="line"></span><br><span class="line">    -- 比较运算符 &gt; 、&lt; 、&gt;=、&lt;=、=、!=</span><br><span class="line">        select * from students where age&gt;18;    # 查询大于18岁的学生信息</span><br><span class="line">        select * from students where age&lt;18;    # 查询小于18岁的学生信息</span><br><span class="line">        select * from students where age&lt;=18;   # 查询小于或者等于18岁的学生信息</span><br><span class="line">        select * from students where age=18; # 查询年龄为18岁的所有学生的名字</span><br><span class="line">        select * from students where age!=18;   # 不等于： != 或者 &lt;&gt;</span><br><span class="line"></span><br><span class="line">    -- 逻辑运算符 and、or、not</span><br><span class="line">        -- 双目运算符：a and b/ a or b</span><br><span class="line">        -- 单目运算符：not a</span><br><span class="line"></span><br><span class="line">        # and (并且)</span><br><span class="line">        -- 年龄在18和28之间的所有学生信息</span><br><span class="line">        select * from students where age&gt;18 and age&lt;28;</span><br><span class="line"></span><br><span class="line">        # 18岁以上的女性</span><br><span class="line">        select * from students where age&gt;18 and gender=&#x27;女&#x27;;</span><br><span class="line"></span><br><span class="line">        # or (或者)</span><br><span class="line">        -- 18以上或者身高高过180(包含)以上的学生信息</span><br><span class="line">        select * from students where age&gt;18 or height&gt;=180;</span><br><span class="line"></span><br><span class="line">        # not (取反)</span><br><span class="line">        -- 不在18岁以上的女性 这个范围内的信息</span><br><span class="line">        select * from students where not (age&gt;18 and gender=&#x27;女&#x27;);</span><br><span class="line"></span><br><span class="line">    -- 模糊查询</span><br><span class="line">        -- like（后面用%、_）</span><br><span class="line">            -- % 替换一个或者多个</span><br><span class="line">            -- _ 替换一个</span><br><span class="line"></span><br><span class="line">            -- 查询姓名中 以&quot;小&quot;开始的名字</span><br><span class="line">            select name from students where name like &quot;小<span class="operator">%</span>&quot;;</span><br><span class="line"></span><br><span class="line">            -- 查询姓名中 有&quot;小&quot;的所有名字</span><br><span class="line">            select name from students where name like &quot;<span class="operator">%</span>小<span class="operator">%</span>&quot;;</span><br><span class="line"></span><br><span class="line">            -- 查询有两个字的名字</span><br><span class="line">            select name from students where name like &quot;__&quot;;</span><br><span class="line"></span><br><span class="line">            -- 查询有三个字的名字</span><br><span class="line">            select name from students where name like &quot;___&quot;;</span><br><span class="line"></span><br><span class="line">            -- 查询至少有两个字的名字</span><br><span class="line">            select name from students where name like &quot;__<span class="operator">%</span>&quot;;</span><br><span class="line"></span><br><span class="line">        -- rlike 正则（后面用正则表达式）</span><br><span class="line">            -- 使用正则表达式</span><br><span class="line"></span><br><span class="line">            -- 查询以&quot;周&quot;开始的名字</span><br><span class="line">            select name from students where name rlike &quot;<span class="operator">^</span>周.<span class="operator">*</span>&quot;;</span><br><span class="line"></span><br><span class="line">            -- 查询以&quot;周&quot;开始、&quot;伦&quot;结尾的名字</span><br><span class="line">            select name from students where name rlike &quot;<span class="operator">^</span>周.<span class="operator">*</span>伦$&quot;;</span><br><span class="line"></span><br><span class="line">    -- 范围查询</span><br><span class="line">        -- in(1,3,8) 表示在一个非连续的范围内</span><br><span class="line">            # 查询年龄为12、18、34的学生</span><br><span class="line">            select name,age from students where age = 18 or age = 34 or age = 12;</span><br><span class="line">            select name,age from students where age in (18,34,12);</span><br><span class="line"></span><br><span class="line">        -- not in 不在非连续的范围之内</span><br><span class="line">            # 查询年龄不是12、18、34的学生</span><br><span class="line">            select name,age from students where age not in (12,18,34);</span><br><span class="line"></span><br><span class="line">        -- between ... and ...表示在一个连续的范围内</span><br><span class="line">            # 查询 年龄在18到34之间的女同学信息</span><br><span class="line">            select * from students where age between 18 and 34 and gender=&#x27;女&#x27;;</span><br><span class="line"></span><br><span class="line">            # 查询 年龄不在18到34之间的信息</span><br><span class="line">            select * from students where age not between 18 and 34;</span><br><span class="line">            select * from students where not age between 18 and 34;</span><br><span class="line">            select * from students where not (age between 18 and 34);</span><br><span class="line"></span><br><span class="line">    -- 空判断</span><br><span class="line"></span><br><span class="line">        -- 判空 is null</span><br><span class="line">            -- 查询身高为空的学生信息</span><br><span class="line">            select * from students where height is null;</span><br><span class="line"></span><br><span class="line">        -- 判非空 is not null</span><br><span class="line">            -- 查询身高不为空的学生信息</span><br><span class="line">            select * from students where height is not nUll;</span><br><span class="line"></span><br><span class="line">    -- 优先级</span><br><span class="line">        -- 优先级由高到低的顺序为：小括号，算术运算符,比较运算符，逻辑运算符</span><br><span class="line">        -- not&gt;and&gt;or，如果同时出现并希望先算or，需要结合()使用</span><br><span class="line"></span><br><span class="line">        -- 分析以下sql语句：</span><br><span class="line">            select * from students where not (age&gt;=18) or height&gt;=180 and gender=&quot;男&quot;;</span><br><span class="line"></span><br><span class="line">-- 排序</span><br><span class="line">-- select * from 表名 [where ...] order by 列1 asc|desc [,列2 asc|desc,...]</span><br><span class="line">-- 有where条件时，order by需放到where条件的后面</span><br><span class="line">-- asc从小到大排列，即升序，默认是升序</span><br><span class="line">-- desc从大到小排序，即降序</span><br><span class="line"></span><br><span class="line">    -- order by 字段</span><br><span class="line"></span><br><span class="line">        -- 查询年龄在18到34之间的男性，按照年龄从小到大排序</span><br><span class="line">        select * from students where (age between 18 and 34) and gender = 1 order by age;</span><br><span class="line">        select * from students where (age between 18 and 34) and gender = 1 order by age asc;</span><br><span class="line"></span><br><span class="line">        -- 查询年龄在18到34之间的女性，按照身高从高到矮排序</span><br><span class="line">        -- 升高相同的情况下默认按照主键排序</span><br><span class="line">        select * from students where age between 18 and 34 and gender = 2 order by height desc;</span><br><span class="line">        select * from students where (age between 18 and 34) and gender = 2 order by height desc;</span><br><span class="line"></span><br><span class="line">        # 查询未删除学生的信息，按年龄降序排序</span><br><span class="line">        select * from students where is_delete =0 order by age desc;</span><br><span class="line"></span><br><span class="line">        # 错误的写法： order by要放在 where的后面</span><br><span class="line">        -- select * from students order by age desc where is_delete =0;</span><br><span class="line"></span><br><span class="line">    -- order by 多个字段</span><br><span class="line"></span><br><span class="line">        -- 查询年龄在18到34之间的女性，按照身高从高到矮排序，如果身高相同的情况下按照id从大到小排序</span><br><span class="line">        select * from students where (age between 18 and 34) and gender = 2 order by height desc,id desc;</span><br><span class="line"></span><br><span class="line">        -- 查询年龄在18到34之间的女性，按照身高从高到矮排序，如果身高相同的情况下按照年龄从小到大排序,如果年龄也相同，按照id从大到小排序</span><br><span class="line">        select * from students where (age between 18 and 34) and gender = 2 order by height desc,age,id desc;</span><br><span class="line">        select * from students where (age between 18 and 34) and gender = 2 order by height desc,age asc,id desc;</span><br><span class="line"></span><br><span class="line">        # 查询所有学生信息，按照年龄从小到大、当年龄相同，则身高从高到矮的排序</span><br><span class="line">        select * from students  order by age asc, height desc;</span><br><span class="line">        select * from students  order by age, height desc;</span><br><span class="line"></span><br><span class="line">-- 聚合函数</span><br><span class="line">-- 聚合函数aggregation function又称为组函数，是把结果集当做一个组进行统计，对查询的结果集进行统计分析。</span><br><span class="line"></span><br><span class="line">    -- 求总数</span><br><span class="line"></span><br><span class="line">        -- count(*)表示计算总行数</span><br><span class="line">        -- count(列)表示计算某列的总行数，假如该列某个值为null则不会统计</span><br><span class="line"></span><br><span class="line">        # 统计学生表中总人数有多少人</span><br><span class="line">        select count(*) from students;</span><br><span class="line"></span><br><span class="line">        # 统计学生表中，女性有多少人</span><br><span class="line">        select count(*) from students where gender=&#x27;女&#x27;;</span><br><span class="line"></span><br><span class="line">        # 统计学生表中，height 字段不为空的总人数</span><br><span class="line">        select count(height) from students;</span><br><span class="line"></span><br><span class="line">    -- 求最大值</span><br><span class="line"></span><br><span class="line">        --max(列) 求此列的最大值</span><br><span class="line"></span><br><span class="line">            # 查询最大的年龄</span><br><span class="line">            select max(age) from students;</span><br><span class="line"></span><br><span class="line">            # 查询女性的最高身高</span><br><span class="line">            select max(height) from students where gender=&#x27;女&#x27;;</span><br><span class="line"></span><br><span class="line">    --  求最小值</span><br><span class="line"></span><br><span class="line">        -- min(列)表示求此列的最小值</span><br><span class="line"></span><br><span class="line">        # 查询最小身高</span><br><span class="line">        select min(height) from students;</span><br><span class="line"></span><br><span class="line">    -- 求和</span><br><span class="line"></span><br><span class="line">        -- sum(列)表示求此列的和</span><br><span class="line"></span><br><span class="line">        # 计算所有学生的年龄总和</span><br><span class="line">        select sum(age) from students;</span><br><span class="line"></span><br><span class="line">    -- 求平均值</span><br><span class="line"></span><br><span class="line">        -- avg(列) 表示求此列的平均值</span><br><span class="line"></span><br><span class="line">        -- 计算学生平均年龄</span><br><span class="line">        select avg(age) from students;</span><br><span class="line">        select sum(age)/count(*) from students;</span><br><span class="line"></span><br><span class="line">        # 计算未删除女生的总人数及平均年龄</span><br><span class="line">        select count(*),avg(age) from students where is_delete=0 and gender=&#x27;女&#x27;;</span><br><span class="line"></span><br><span class="line">        -- 目前：聚合函数不能与列名写在一起 select name,avg(XXX) from</span><br><span class="line">        # 错误的写法</span><br><span class="line">        -- select name,count(*),avg(age) from students where is_delete=0 and gender=&#x27;女&#x27;;</span><br><span class="line"></span><br><span class="line">-- 分页</span><br><span class="line">-- 当数据量过大时，通过分批分页加载数据既能提升加载速度，也可更好显示查询结果</span><br><span class="line">-- select * from 表名 limit [start,] count</span><br><span class="line">-- 限制查询，start表示要获取的结果在结果集中的起始位置，count为限制查询的数量</span><br><span class="line">-- 注意: limit 放在查询语句的最后面</span><br><span class="line"></span><br><span class="line">    # 查询5个数据</span><br><span class="line">    select * from students limit 5;</span><br><span class="line">    select * from students limit 0,5;</span><br><span class="line">    select * from students limit 6,5;</span><br><span class="line"></span><br><span class="line">    分页查询（开发的实际场景）  count=2</span><br><span class="line"></span><br><span class="line">    # 每页显示2个，第1个页面</span><br><span class="line">    select * from students limit 0,2;</span><br><span class="line"></span><br><span class="line">    # 每页显示2个，第2个页面</span><br><span class="line">    select * from students limit 2,2;</span><br><span class="line"></span><br><span class="line">    # 每页显示2个，第3个页面</span><br><span class="line">    select * from students limit 4,2;</span><br><span class="line"></span><br><span class="line">    # 每页显示2个，第4个页面</span><br><span class="line">    select * from students limit 6,2;</span><br><span class="line"></span><br><span class="line">    每页显示2个，显示第6页的信息, 按照年龄从小到大排序</span><br><span class="line">    # 公式: start=(page-1)*count</span><br><span class="line">    select * from students order by age limit 10,2;</span><br><span class="line"></span><br><span class="line">    -- 以下两个皆为失败案例</span><br><span class="line">    -- select * from students limit 10,2 order by age;</span><br><span class="line">    -- select * from students order by age limit (6-1)*2,2;</span><br><span class="line"></span><br><span class="line">-- 连接查询</span><br><span class="line">    -- inner join ... on (内连接)</span><br><span class="line"></span><br><span class="line">        -- 结果仅包含符合连接条件的两表中的行</span><br><span class="line">        -- select ... from 表A inner join 表B  on  条件;</span><br><span class="line"></span><br><span class="line">        select * from students inner join classes;</span><br><span class="line">        select * from students,classes;</span><br><span class="line"></span><br><span class="line">        笛卡尔积： 乘法</span><br><span class="line">        select * from students inner join classes on students.cls_id=classes.id;</span><br><span class="line"></span><br><span class="line">        -- 查询有能够对应班级的学生以及班级信息</span><br><span class="line">        select * from students inner join classes on students.cls_id=classes.id;</span><br><span class="line"></span><br><span class="line">        -- 只显示姓名、班级</span><br><span class="line">        select students.name,classes.id,classes.name from students inner join classes on students.cls_id=classes.id;</span><br><span class="line"></span><br><span class="line">        -- 给数据表起别名</span><br><span class="line">        select s.name,c.id,c.name from students as s inner join classes as c on s.cls_id=c.id;</span><br><span class="line"></span><br><span class="line">        -- 查询 有能够对应班级的学生以及班级信息，显示学生的所有信息，只显示班级名称</span><br><span class="line">        select s.*,c.name from students as s inner join classes as c on s.cls_id=c.id;</span><br><span class="line"></span><br><span class="line">        -- 在以上查询中，将班级姓名显示在第一列</span><br><span class="line">        select c.name as 班级名称,s.* from students as s inner join classes as c on s.cls_id=c.id;</span><br><span class="line"></span><br><span class="line">        -- 查询 有能够对应班级的学生以及班级信息，按照班级进行排序</span><br><span class="line">        -- select c.xxx s.xxx from students as s inner join classes as c on ... order by ...;</span><br><span class="line">        select c.name as 班级名称,s.* from students as s inner join classes as c on s.cls_id=c.id order by c.name;</span><br><span class="line"></span><br><span class="line">        -- 当是同一班级的时候，按照学生的id进行从小到大排序</span><br><span class="line">        select c.name as 班级名称,s.* from students as s inner join classes as c on s.cls_id=c.id order by c.name,s.id;</span><br><span class="line"></span><br><span class="line">    -- left join ... on (左外连接)</span><br><span class="line"></span><br><span class="line">        -- 查询每位学生对应的班级信息</span><br><span class="line">        select * from students as s left join classes as c on s.cls_id = c.id;</span><br><span class="line"></span><br><span class="line">        -- 查询没有对应班级信息的学生</span><br><span class="line">        -- select ... from xxx as s left join xxx as c on ... where;</span><br><span class="line">        -- select ... from xxx as s left join xxx as c on ... having;</span><br><span class="line">        -- having：从查询出来的结果集中取东西</span><br><span class="line">        -- where：从表中取数据</span><br><span class="line">        select c.*,s.* from students as s left join classes as c on c.id=s.cls_id having c.id is null;</span><br><span class="line">        select * from students as s left join classes as c on c.id=s.cls_id having c.id is null;</span><br><span class="line">        --失败 select s.* from students as s left join classes as c on c.id=s.cls_id having c.id is null;</span><br><span class="line"></span><br><span class="line">        select * from students as s left join classes as c on c.id=s.cls_id where c.id is null;</span><br><span class="line">        -- 成功 select s.* from students as s left join classes as c on c.id=s.cls_id where c.id is null;</span><br><span class="line"></span><br><span class="line">    -- right join on</span><br><span class="line">        -- 将数据表名字互换位置，用left join完成</span><br><span class="line"></span><br><span class="line">-- 自关联查询</span><br><span class="line">    -- 分析：</span><br><span class="line">        -- provice：省（直辖市）（id,name） city：地级市（id,name,p_id） county：区、县（id,name,c_id）</span><br><span class="line">        -- 三级城市关联：county.c_id -&gt; city.p_id -&gt; provice.id</span><br><span class="line"></span><br><span class="line">        -- 方案一：使用三张不同的表存储各区域信息.</span><br><span class="line">        -- 方案二：由于存储内容相同，可以构造成一张表，其中为provice增加p_id字段，默认为null,将county.c_id字段修改为p_id,最终：</span><br><span class="line">        -- areas（id,name,p_id） 自关联：一个表中的一列指向、关联同表的另外一列（主键）</span><br><span class="line"></span><br><span class="line">    -- 自关联（自己关联自己）</span><br><span class="line"></span><br><span class="line">        -- 创建areas表(aid,atilte,pid)</span><br><span class="line">        create table areas(</span><br><span class="line">            aid int primary key,</span><br><span class="line">            atitle varchar(20),</span><br><span class="line">            pid int</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        -- 向areas表插入记录</span><br><span class="line">            -- 通过执行sql文件向areas表插入记录</span><br><span class="line">                -- 命令行进入areas.sql文件所在目录</span><br><span class="line">                -- 登录 mysql：mysql -uroot -proot</span><br><span class="line">                -- 使用数据库：use db_areas;</span><br><span class="line">                -- 执行sql文件：source areas.sql;</span><br><span class="line"></span><br><span class="line">        -- 查询一共有多少个省</span><br><span class="line">        select * from areas where pid is null;</span><br><span class="line"></span><br><span class="line">        -- 查询山东地级市</span><br><span class="line">        -- select * from areas where pid = (select aid from areas where atitle = &quot;山东省&quot;);</span><br><span class="line">        select city.* from areas as city inner join areas as province on city.pid=province.aid where province.atitle=&quot;山东省&quot;;</span><br><span class="line"></span><br><span class="line">        select city.*,province.* from areas as city inner join areas as province on city.pid=province.aid having province.atitle=&quot;山东省&quot;;</span><br><span class="line">        select city.*,province.* from areas as city inner join areas as province on city.pid=province.aid where province.atitle=&quot;山东省&quot;;</span><br><span class="line"></span><br><span class="line">        select * from areas as city inner join areas as province on city.pid=province.aid having province.atitle=&quot;山东省&quot;;</span><br><span class="line">        select * from areas as city inner join areas as province on city.pid=province.aid where province.atitle=&quot;山东省&quot;;</span><br><span class="line"></span><br><span class="line">        -- 查询青岛市地级区</span><br><span class="line">        -- select * from areas where pid = (select aid from areas where atitle = &quot;青岛市&quot;);</span><br><span class="line">        select a.* from areas as c inner join areas as a on c.aid=a.pid where c.atitle=&quot;青岛市&quot;;</span><br><span class="line"></span><br><span class="line">        select a.*,c.* from areas as c inner join areas as a on c.aid=a.pid where c.atitle=&quot;青岛市&quot;;</span><br><span class="line">        select a.*,c.* from areas as c inner join areas as a on c.aid=a.pid having c.atitle=&quot;青岛市&quot;;</span><br><span class="line"></span><br><span class="line">        select * from areas as c inner join areas as a on c.aid=a.pid where c.atitle=&quot;青岛市&quot;;</span><br><span class="line">        select * from areas as c inner join areas as a on c.aid=a.pid having c.atitle=&quot;青岛市&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- 查询广东省中的所有城市</span><br><span class="line">        select city.* from areas as city inner join areas as province on city.pid=province.aid where province.atitle=&#x27;广东省&#x27;;</span><br><span class="line"></span><br><span class="line">        -- 查询属于深圳市的所有的区</span><br><span class="line">        select a.* from areas as a inner join areas as c on a.pid=c.aid where c.atitle=&#x27;深圳市&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 子查询即查询的嵌套</span><br><span class="line">    -- select ...</span><br><span class="line">    -- select标量子查询：子查询返回的结果是一个数据(一行一列)</span><br><span class="line">    -- 列子查询：返回的结果是一列(一列多行)</span><br><span class="line">    -- 行子查询：返回的结果是一行(一行多列)</span><br><span class="line">    -- 表子查询：返回的结果是一个临时表(多行多列)</span><br><span class="line"></span><br><span class="line">    -- 标量子查询</span><br><span class="line">        -- 查询出高于平均身高的信息（height）</span><br><span class="line"></span><br><span class="line">        # 1 查出平均身高</span><br><span class="line">        select avg(height) from students;   #172.07</span><br><span class="line"></span><br><span class="line">        # 2 查出高于平均身高的信息</span><br><span class="line">        select * from students where height&gt;(select avg(height) from students);</span><br><span class="line"></span><br><span class="line">    -- 列子查询</span><br><span class="line">        # 查询有班级的学生信息</span><br><span class="line">        select name from students where cls_id in (select id from classes);</span><br><span class="line"></span><br><span class="line">        # 1 查出所有的班级id</span><br><span class="line">        select id from classes;   # (1,2)</span><br><span class="line"></span><br><span class="line">        # 2 查出能够对应上班级号的学生信息</span><br><span class="line">        select * from students where cls_id in (select id from classes);</span><br><span class="line"></span><br><span class="line">    -- 表子查询</span><br><span class="line">        # 查询编号小于6的男性同学的姓名</span><br><span class="line">        select name from (select gender,name from students where id&lt;6) as s where gender=&quot;男&quot;;</span><br><span class="line"></span><br><span class="line">        -- 提示：对于表子查询，子表要设置一个别名。</span><br><span class="line">        -- Every derived table must have its own alias.</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="programming" scheme="https://chyriso.github.io/categories/major/programming/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/categories/major/programming/mysql/"/>
    
    
    <category term="Database" scheme="https://chyriso.github.io/tags/Database/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/tags/mysql/"/>
    
    <category term="sql" scheme="https://chyriso.github.io/tags/sql/"/>
    
    <category term="select" scheme="https://chyriso.github.io/tags/select/"/>
    
  </entry>
  
  <entry>
    <title>表数据操作</title>
    <link href="https://chyriso.github.io/2022/06/18/%E8%A1%A8%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/"/>
    <id>https://chyriso.github.io/2022/06/18/%E8%A1%A8%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/</id>
    <published>2022-06-18T11:29:25.000Z</published>
    <updated>2022-06-18T11:37:11.216Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">-- curd.sql文件</span><br><span class="line">-- 表数据操作（CURD）</span><br><span class="line">-- CURD的解释：代表创建（Create）、更新（Update）、读取（Retrieve/Read）和删除（Delete）</span><br><span class="line"></span><br><span class="line">-- 增加（Create）</span><br><span class="line"></span><br><span class="line">    -- 全列插入</span><br><span class="line">        -- insert [into] 表名 values(...)</span><br><span class="line">        -- into 可以省略</span><br><span class="line">        -- 主键字段 可以用 0  null  default 来占位 ，实际插入数据会根据 AUTO_INCREMENT=?自动生成</span><br><span class="line"></span><br><span class="line">        -- 向classes表中插入一个班级</span><br><span class="line">        insert into t_classes values(0, &#x27;python7期&#x27;);</span><br><span class="line"></span><br><span class="line">        -- 向students表中插入一个学生信息</span><br><span class="line">        -- 表 t_students (id、name、age、high (decimal)、gender (enum)、cls_id)</span><br><span class="line">        insert into t_students values(null,&#x27;wang&#x27;,18,168.88, &#x27;女&#x27;,1);</span><br><span class="line"></span><br><span class="line">        -- 表 t_students (id、name、age、high (decimal)、gender (enum)、cls_id、birth)</span><br><span class="line">        -- enum(&#x27;女&#x27;,&#x27;男&#x27;,&#x27;保密&#x27;)在插入语句中可以使用&#x27;女&#x27;,&#x27;男&#x27;,&#x27;保密&#x27;，或者1，2，3表示</span><br><span class="line">        -- insert into t_students values(default,&#x27;wang&#x27;,18,168.88,&#x27;女&#x27;,1,&quot;1998-02-20&quot;);</span><br><span class="line">        -- insert into t_students values(0,&#x27;wang&#x27;,18,168.88,1,1,&quot;1998-02-20&quot;);</span><br><span class="line"></span><br><span class="line">    -- 部分插入</span><br><span class="line">        insert into 表名(列1,...) values(值1,...)</span><br><span class="line"></span><br><span class="line">        insert into t_students(name,gender) values(&#x27;zhang&#x27;,&#x27;男&#x27;);</span><br><span class="line">        insert into t_classes(name) values(&#x27;python8期&#x27;);</span><br><span class="line"></span><br><span class="line">    -- 多行插入</span><br><span class="line">        insert into t_students values (0,&quot;laowang&quot;,18,166.66,1,111),(0,&quot;laoli&quot;,18,166.66,1,111);</span><br><span class="line">        -- insert into t_students values(default,&#x27;wang1&#x27;,18,168.88,&#x27;女&#x27;,1,&quot;1998-02-20&quot;),(default,&#x27;wang2&#x27;,18,168.88,&#x27;女&#x27;,2,&quot;1998-02-20&quot;);</span><br><span class="line">        insert into t_students(name,gender) values(&quot;小张1&quot;,1),(&quot;小张2&quot;,2);</span><br><span class="line"></span><br><span class="line">-- 修改（Update）</span><br><span class="line">    -- update 表名 set 列1 = 值1,列2 = 值2，... where 条件;</span><br><span class="line"></span><br><span class="line">    -- 全部修改</span><br><span class="line">        update t_students set gender = 1;</span><br><span class="line"></span><br><span class="line">    -- 按条件修改</span><br><span class="line">        -- 同名&quot;xz&quot;全部修改</span><br><span class="line">        update t_students set age = 18 where name = &quot;xz&quot;;</span><br><span class="line">        -- 修改唯一一个</span><br><span class="line">        update t_students set gender = &#x27;男&#x27; where id = 2;</span><br><span class="line"></span><br><span class="line">    -- 按条件修改多个值</span><br><span class="line">        -- update students set gender =&quot;&quot;,name = &quot;xxx&quot; where 条件;</span><br><span class="line"></span><br><span class="line">        update t_students set age=20,gender=1 where name=&#x27;laowang&#x27;;</span><br><span class="line">        update t_students set age=20,gender=2 where id=1;</span><br><span class="line"></span><br><span class="line">-- 查询（select）</span><br><span class="line">    -- 查询所有列</span><br><span class="line">        -- select * from 表名;</span><br><span class="line">        select * from t_students;</span><br><span class="line">        select * from t_classes;</span><br><span class="line"></span><br><span class="line">    -- 指定条件查询</span><br><span class="line">        select * from t_students where name = &quot;xc&quot;;</span><br><span class="line">        select * from t_students where id &gt; 3;</span><br><span class="line"></span><br><span class="line">    -- 查询指定列</span><br><span class="line">        -- select 列1,列2,... from 表名;</span><br><span class="line">        select name,gender from t_students;</span><br><span class="line">        select id,name from t_classes;</span><br><span class="line"></span><br><span class="line">    -- 可以使用as为列或表指定别名</span><br><span class="line">        -- select 字段[as 别名] from  数据表 where ...;</span><br><span class="line">        select name as 姓名,gender as 性别 from t_students;</span><br><span class="line"></span><br><span class="line">    -- 字段的显示顺序</span><br><span class="line">        select id as 序号,gender as 性别,name as 姓名 from t_students;</span><br><span class="line"></span><br><span class="line">-- 删除（Delete）</span><br><span class="line"></span><br><span class="line">    -- 物理删除</span><br><span class="line">        delete from 表名 where 条件</span><br><span class="line"></span><br><span class="line">        -- 清空数据表，整个数据表中的所有数据都被删除</span><br><span class="line">        delete from t_students;</span><br><span class="line"></span><br><span class="line">        -- 按条件删除</span><br><span class="line">        -- 即使删了id=3一项数据，也不要再插入id=3，因为后面如果有数据，随着数据持续插入会导致id重复，产生冲突</span><br><span class="line">        -- 如果后面没有数据，则可以插入id=3的一行数据</span><br><span class="line">        delete from t_students where id=3;</span><br><span class="line"></span><br><span class="line">    -- 逻辑删除(本质就是修改操作)</span><br><span class="line">        -- 修改属性，例如布尔属性</span><br><span class="line">        alter table t_students add is_delete bit default 0;</span><br><span class="line">        update t_students set is_delete = 1 where name = &quot;xz&quot;;</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="programming" scheme="https://chyriso.github.io/categories/major/programming/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/categories/major/programming/mysql/"/>
    
    
    <category term="Database" scheme="https://chyriso.github.io/tags/Database/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/tags/mysql/"/>
    
    <category term="sql" scheme="https://chyriso.github.io/tags/sql/"/>
    
    <category term="CURD" scheme="https://chyriso.github.io/tags/CURD/"/>
    
  </entry>
  
  <entry>
    <title>数据表操作</title>
    <link href="https://chyriso.github.io/2022/06/18/%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%93%8D%E4%BD%9C/"/>
    <id>https://chyriso.github.io/2022/06/18/%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%93%8D%E4%BD%9C/</id>
    <published>2022-06-18T11:25:17.000Z</published>
    <updated>2022-06-18T11:37:09.701Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">-- table.sql文件</span><br><span class="line">-- 数据表的操作（创建表、删除表、修改表结构）</span><br><span class="line"></span><br><span class="line">-- 查看当前数据库中所有表</span><br><span class="line">-- show tables;</span><br><span class="line"></span><br><span class="line">-- 创建表</span><br><span class="line">-- create table 数据表名字(字段 类型 约束[, 字段 类型 约束]);</span><br><span class="line"></span><br><span class="line">-- 类型和约束：</span><br><span class="line">    -- int unsigned 无符号整形</span><br><span class="line">    -- auto_increment 表示自动增长</span><br><span class="line">    -- not null 表示不能为空</span><br><span class="line">    -- primary key 表示主键</span><br><span class="line">    -- default 默认值</span><br><span class="line"></span><br><span class="line">-- 创建表练习：</span><br><span class="line"></span><br><span class="line">    -- 练习:创建 students 表(id、name、age、high (decimal)、gender (enum)、cls_id)</span><br><span class="line">    create table t_students (</span><br><span class="line">        id int unsigned primary key auto_increment not null,</span><br><span class="line">        name varchar(20) default &#x27;&#x27;,</span><br><span class="line">        age tinyint unsigned default 0,</span><br><span class="line">        high decimal(5,2),</span><br><span class="line">        gender enum(&#x27;女&#x27;,&#x27;男&#x27;,&#x27;保密&#x27;) default &#x27;保密&#x27;,</span><br><span class="line">        cls_id int unsigned</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    -- unsigned primary key auto_increment not null 约束顺序可变</span><br><span class="line">    -- varchar(20) 最大存二十个字节，假设存两个字母，只会使用两个字节空间存储，存多少字节就用多少空间</span><br><span class="line">    -- char(20) 使用二十个字节的空间存储，假设存两个字母，不足的用空格填充</span><br><span class="line">    -- decimal(5,2) 一共有五位，保留两位小数</span><br><span class="line">    -- default 0 没有插入该值的时候默认是0</span><br><span class="line">    -- 可以使用primary key(id)放在最后设置主键，即：</span><br><span class="line"></span><br><span class="line">        create table t_students (</span><br><span class="line">            id int unsigned auto_increment not null,</span><br><span class="line">            name varchar(20) default &#x27;&#x27;,</span><br><span class="line">            age tinyint unsigned default 0,</span><br><span class="line">            high decimal(5,2),</span><br><span class="line">            gender enum(&#x27;女&#x27;,&#x27;男&#x27;,&#x27;保密&#x27;) default &#x27;保密&#x27;,</span><br><span class="line">            cls_id int unsigned,</span><br><span class="line">            primary key (id)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">    -- 练习:创建 classes 表(id、name)</span><br><span class="line">    create table t_classes (</span><br><span class="line">        id int unsigned primary key auto_increment not null,</span><br><span class="line">        name varchar(20)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">-- 查看表的创建语句</span><br><span class="line">-- show create table 表名字;</span><br><span class="line">show create table t_classes;</span><br><span class="line">show create table t_students;</span><br><span class="line">-- 以下t_students表创建语句</span><br><span class="line"></span><br><span class="line">    -- t_students | CREATE TABLE `t_students` (</span><br><span class="line">    --   `id` int unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">    --   `name` varchar(20) DEFAULT &#x27;&#x27;,</span><br><span class="line">    --   `age` tinyint unsigned DEFAULT &#x27;0&#x27;,</span><br><span class="line">    --   `high` decimal(5,2) DEFAULT NULL,</span><br><span class="line">    --   `gender` enum(&#x27;女&#x27;,&#x27;男&#x27;,&#x27;保密&#x27;) DEFAULT &#x27;保密&#x27;,</span><br><span class="line">    --   `cls_id` int unsigned DEFAULT NULL,</span><br><span class="line">    --   PRIMARY KEY (`id`)</span><br><span class="line">    -- ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3</span><br><span class="line"></span><br><span class="line">    -- ENGINE=InnoDB</span><br><span class="line">    -- MySQL存储引擎MyISAM与InnoDB区别：</span><br><span class="line">        -- 两种类型最主要的差别就是InnoDB支持事务处理与外键和行级锁。而MyISAM不支持。所以MyISAM往往就容易被人认为只适合在小项目中使用。</span><br><span class="line">        -- Mysql的行锁和表锁（ 锁是计算机协调多个进程或纯线程并发访问某一资源的机制）</span><br><span class="line">            -- 表级锁： 每次操作锁住整张表。开销小，加锁快；不会出现死锁；锁定粒度大，发生锁冲突的概率最高，并发度最低；</span><br><span class="line">            -- 行级锁： 每次操作锁住一行数据。开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最低，并发度也最高；</span><br><span class="line">        -- 事务是访问并更新数据库中各种数据项的一个程序执行单元。事务可由一条非常简单的SQL语句组成，也可以由一组复杂的SQL语句组成。在事务操作中，这些语句要么都执行，要么都不执行。</span><br><span class="line">    -- 执行：insert into t_students values(0,&quot;xz&quot;,11,12.21,1,0);后最后一句将变为：ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb3</span><br><span class="line">        -- t_students | CREATE TABLE `t_students` (</span><br><span class="line">        --   `id` int unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">        --   `name` varchar(20) DEFAULT &#x27;&#x27;,</span><br><span class="line">        --   `age` tinyint unsigned DEFAULT &#x27;0&#x27;,</span><br><span class="line">        --   `high` decimal(5,2) DEFAULT NULL,</span><br><span class="line">        --   `gender` enum(&#x27;女&#x27;,&#x27;男&#x27;,&#x27;保密&#x27;) DEFAULT &#x27;保密&#x27;,</span><br><span class="line">        --   `cls_id` int unsigned DEFAULT NULL,</span><br><span class="line">        --   PRIMARY KEY (`id`)</span><br><span class="line">        -- ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb3</span><br><span class="line"></span><br><span class="line">        -- AUTO_INCREMENT=2 保存的是下一条数据的主键id自增值，即便删除之前的所有数据，下条数据主键id任然从AUTO_INCREMENT=2开始，而不会重新计算</span><br><span class="line"></span><br><span class="line">-- 查看表结构</span><br><span class="line">-- desc 数据表的名字;</span><br><span class="line">desc t_classes;</span><br><span class="line">desc t_students;</span><br><span class="line"></span><br><span class="line">-- 修改表</span><br><span class="line"></span><br><span class="line">    -- 添加字段</span><br><span class="line">    -- alter table 表名 add 列名 类型;</span><br><span class="line">    alter table t_classes add logo varchar(30) default &#x27;人生苦短&#x27;;</span><br><span class="line">    alter table t_students add birthday datetime;</span><br><span class="line"></span><br><span class="line">    -- 修改字段—不重命名版</span><br><span class="line">    -- alter table 表名 modify 列名 类型及约束;</span><br><span class="line">    alter table t_classes modify logo varchar(50) default &#x27;我用python&#x27;;</span><br><span class="line">    alter table t_students modify birthday date;</span><br><span class="line"></span><br><span class="line">    -- 修改字段—重命名版</span><br><span class="line">    -- alter table 表名 change 原名 新名 类型及约束;</span><br><span class="line">    alter table t_classes change logo NewLogo varchar(50) default &#x27;人生苦短，我用python&#x27;;</span><br><span class="line">    alter table t_students change birthday birth date default &quot;1997-10-10&quot;;</span><br><span class="line"></span><br><span class="line">    -- 删除字段</span><br><span class="line">    -- alter table 表名 drop 列名;</span><br><span class="line">    alter table t_classes drop NewLogo;</span><br><span class="line">    alter table t_students drop birth;</span><br><span class="line">    -- 删除字段会导致该字段下的所有数据都被删除</span><br><span class="line"></span><br><span class="line">-- 删除表</span><br><span class="line">-- drop table 表名;</span><br><span class="line">drop table t_students;</span><br><span class="line">drop table t_classes;</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="programming" scheme="https://chyriso.github.io/categories/major/programming/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/categories/major/programming/mysql/"/>
    
    
    <category term="Database" scheme="https://chyriso.github.io/tags/Database/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/tags/mysql/"/>
    
    <category term="sql" scheme="https://chyriso.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>数据库操作</title>
    <link href="https://chyriso.github.io/2022/06/18/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/"/>
    <id>https://chyriso.github.io/2022/06/18/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/</id>
    <published>2022-06-18T11:22:31.000Z</published>
    <updated>2022-06-18T11:37:07.214Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">-- 提示：sql语句不区分大小写，每条sql语句后面加分号 “;”</span><br><span class="line">-- db.sql文件</span><br><span class="line">-- 数据库的操作</span><br><span class="line"></span><br><span class="line">    -- 链接数据库</span><br><span class="line">    mysql -uroot -proot</span><br><span class="line">    mysql -uroot -p</span><br><span class="line">    -- Enter password: root</span><br><span class="line"></span><br><span class="line">    -- 显示mysql数据库软件版本 version</span><br><span class="line">    select version();</span><br><span class="line"></span><br><span class="line">    -- 显示时间</span><br><span class="line">    select now();</span><br><span class="line">    select year(now());</span><br><span class="line"></span><br><span class="line">    -- 查看所有数据库</span><br><span class="line">    show databases;</span><br><span class="line"></span><br><span class="line">    -- 创建数据库</span><br><span class="line">    -- create database 数据库名 charset=utf8;</span><br><span class="line">    create database db_xxx charset=utf8;</span><br><span class="line"></span><br><span class="line">    -- 查看创建数据库的语句</span><br><span class="line">    -- show create database 数据库名;</span><br><span class="line">    show create database db_xxx;</span><br><span class="line"></span><br><span class="line">    -- 查看当前使用的数据库</span><br><span class="line">    select database();</span><br><span class="line"></span><br><span class="line">    -- 使用数据库</span><br><span class="line">    -- use 数据库名;</span><br><span class="line">    use db_xxx;</span><br><span class="line"></span><br><span class="line">    -- 删除数据库</span><br><span class="line">    -- drop database 数据库名;</span><br><span class="line">    drop database db_xxx;</span><br><span class="line"></span><br><span class="line">    -- 退出数据库</span><br><span class="line">    exit/quit</span><br><span class="line">    ctrl+d</span><br><span class="line"></span><br><span class="line">-- 数据库的备份</span><br><span class="line"></span><br><span class="line">    -- 通过linux命令实现数据库备份和恢复</span><br><span class="line"></span><br><span class="line">        -- 导出db_jingdong数据库到jd.sql文件中 (备份)</span><br><span class="line"></span><br><span class="line">            mysqldump -u root -p  db_jingdong&gt; jd.sql</span><br><span class="line"></span><br><span class="line">        -- 导入jd.sql文件 到 db_python04数据库中（恢复）</span><br><span class="line"></span><br><span class="line">            create database db_python04 charset=utf8;</span><br><span class="line">            mysql -u root -p db_python04  # 执行linux命令</span><br><span class="line"></span><br><span class="line">    -- 小结</span><br><span class="line">        mysqldump备份方式：逻辑备份，备份的是数据库的sql语句，该方式适合于中小数据库的备份。</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="programming" scheme="https://chyriso.github.io/categories/major/programming/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/categories/major/programming/mysql/"/>
    
    
    <category term="Database" scheme="https://chyriso.github.io/tags/Database/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/tags/mysql/"/>
    
    <category term="sql" scheme="https://chyriso.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>Mysql数据库的数据类型和约束</title>
    <link href="https://chyriso.github.io/2022/06/18/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E7%BA%A6%E6%9D%9F/"/>
    <id>https://chyriso.github.io/2022/06/18/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E7%BA%A6%E6%9D%9F/</id>
    <published>2022-06-18T08:33:33.000Z</published>
    <updated>2022-06-18T09:38:02.263Z</updated>
    
    <content type="html"><![CDATA[<p>数据库中的数据保存在数据表中，在表中为了更加准确的存储数据，保证数据的正确有效，可以在创建表的时候，为表添加一些强制性的验证，比如:数据类型和约束。</p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>数据类型是指在创建表的时候为表中字段指定数据类型，只有数据符合类型要求才能存储起来，使用数据类型的原则是，够用就行，尽量使用取值范围小的，而不用大的，这样可以更多的节省存储空间。</p><h3 id="常用数据类型如下"><a href="#常用数据类型如下" class="headerlink" title="常用数据类型如下:"></a>常用数据类型如下:</h3><p>整数：int，bit<br>小数：decimal<br>字符串：varchar,char<br>日期时间: date, time, datetime<br>枚举类型(enum)  </p><p>数据类型说明:</p><p>decimal表示浮点数，如 decimal(5, 2) 表示共存5位数，小数占 2 位<br>char表示固定长度的字符串，如char(3)，如果填充’ab’时会补一个空格为’ab ‘，3表示字符数<br>varchar表示可变长度的字符串，如varchar(3)，填充’ab’时就会存储’ab’，3表示字符数<br>对于图片、音频、视频等文件，不存储在数据库中，而是上传到某个服务器上，然后在表中存储这个文件的保存路径<br>字符串 text表示存储大文本，当字符大于 4000 时推荐使用, 比如技术博客  </p><h3 id="主要包括以下五大类："><a href="#主要包括以下五大类：" class="headerlink" title="主要包括以下五大类："></a>主要包括以下五大类：</h3><p>整数类型：BIT、BOOL、TINY INT、SMALL INT、MEDIUM INT、 INT、 BIG INT<br>浮点数类型：FLOAT、DOUBLE、DECIMAL<br>字符串类型：CHAR、VARCHAR、TINY TEXT、TEXT、MEDIUM TEXT、LONGTEXT、TINY BLOB、BLOB、MEDIUM BLOB、LONG BLOB<br>日期类型：Date、DateTime、TimeStamp、Time、Year<br>其他数据类型：BINARY、VARBINARY、ENUM、SET、Geometry、Point、MultiPoint、LineString、MultiLineString、Polygon、GeometryCollection等  </p><h4 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h4><table><thead><tr><th align="center">数据类型</th><th align="center">字节数</th><th align="center">无符号数的取值范围</th><th align="center">有符号数的取值范围</th></tr></thead><tbody><tr><td align="center">TINYINT</td><td align="center">1</td><td align="center">0~255</td><td align="center">-128~127</td></tr><tr><td align="center">SMALLINT</td><td align="center">2</td><td align="center">0~65535</td><td align="center">-32768~32767</td></tr><tr><td align="center">MEDIUMINT</td><td align="center">3</td><td align="center">0~16 777 215</td><td align="center">-8 388 608~8 388 607</td></tr><tr><td align="center">INT</td><td align="center">4</td><td align="center">0~4 294 967 295</td><td align="center">-2 147 483 648~2 147 483 647</td></tr><tr><td align="center">BIGINT</td><td align="center">8</td><td align="center">0~18 446 744 073 709 551 615</td><td align="center">-9 223 372 036 854 775 808~9 223 372 036 854 775 807</td></tr></tbody></table><p>若使用无符号数据类型，需要在数据类型的右边加上UNSIGNED关键字修饰。<br>当数值超过显示宽度的时候，不填充0，当数值未达到显示宽度时，在左边用0填充。</p><h4 id="浮点数类型"><a href="#浮点数类型" class="headerlink" title="浮点数类型"></a>浮点数类型</h4><table><thead><tr><th align="center">数据类型</th><th align="center">字节数</th><th align="center">负数的取值范围</th><th align="center">非负数的取值范围</th></tr></thead><tbody><tr><td align="center">FLOAT</td><td align="center">4</td><td align="center">-3. 402 823 466E+38~-1. 175 494 351E-38</td><td align="center">0和1.175 494 351E-38~3.402 823 466E+38</td></tr><tr><td align="center">DOUBLE</td><td align="center">8</td><td align="center">-1.797 693 134 862 315 7E+308~-2.225 073 858 507 201 4E-308</td><td align="center">0和2.225 073 858 507 201 4E-308~1.797 693 134 862 315 7E+308</td></tr></tbody></table><p>当浮点数类型使用UNSIGNED修饰时，取值范围将不包括负数。</p><h4 id="定点数类型"><a href="#定点数类型" class="headerlink" title="定点数类型"></a>定点数类型</h4><p>定点数类型（DECIMAL）通过DECIMAL（M,D）设置位数和精度；M表示数字总位数，最大值为65，默认为0；</p><p>D表示小数点后的位数，最大值为30，默认值为0。</p><h4 id="BIT类型"><a href="#BIT类型" class="headerlink" title="BIT类型"></a>BIT类型</h4><p>BIT（位）类型用于存储二进制数据，语法为BIT（M），M表示位数，范围为1~64。</p><p>BIT类型字段在数字插入时转换为二进制保存，但在利用SELECT查询时，会自动转换为对应的字符显示。</p><h4 id="时间和日期类型"><a href="#时间和日期类型" class="headerlink" title="时间和日期类型"></a>时间和日期类型</h4><table><thead><tr><th align="center">数据类型</th><th align="center">字节大小</th><th align="center">取值范围</th><th align="center">日期格式</th><th align="center">零值</th></tr></thead><tbody><tr><td align="center">YEAR</td><td align="center">1</td><td align="center">1901~2155</td><td align="center">YYYY</td><td align="center">0000</td></tr><tr><td align="center">DATE</td><td align="center">4</td><td align="center">1000-01-01~9999-12-31</td><td align="center">YYYY-MM-DD</td><td align="center">0000-00-00</td></tr><tr><td align="center">TIME</td><td align="center">3</td><td align="center">-838:59:59~838:59:59</td><td align="center">HH:MM:SS</td><td align="center">00:00:00</td></tr><tr><td align="center">DATETIME</td><td align="center">8</td><td align="center">1000-01-01 00:00:00~9999-12-31 23:59:59</td><td align="center">YYYY-MM-DD HH:MM:SS</td><td align="center">0000-00-00 00:00:00</td></tr><tr><td align="center">TIMESTAMP</td><td align="center">4</td><td align="center">1970-01-01 00:00:01~2038-01-19 03:14:07</td><td align="center">YYYY-MM-DD HH:MM:SS</td><td align="center">0000-00-00 00:00:00</td></tr><tr><td align="center">YEAR</td><td align="center">1</td><td align="center">1901~2155</td><td align="center">YYYY</td><td align="center">0000</td></tr></tbody></table><p><em>YEAR类型</em></p><p>YEAR用于表示年份<br>CREATE TABLE my_year(y year);   #设置y字段的数据类型为year<br>INSERT INTO my_year VALUES(2020);   #插入年份数据2020</p><p><em>DATE类型</em></p><p>DATE用于表示日期值，不包括时间部分。<br>CREATE TABLE my_date (d DATE);  #设置d字段的数据类型为DATE<br>INSERT INTO my_date VALUES(‘2020-01-21’);   #插入日期数据<br>INSERT INTO my_date VALUES(CURRENT_DATE);   #插入当前系统数据<br>INSERT INTO my_date VALUES(NOW());  #插入当前系统日期  </p><p><em>TIME 类型</em></p><p>TIME类型用于表示时间值，它的显示形式一般为HH:MM:SS.</p><p><em>DATETIAME类型</em></p><p>DATETIME类型用于表示时间和日期，它的显示时间为‘YYYY-MM-DD HH:MM:SS’。</p><p><em>TIMESTAMP类型</em></p><p>TIMESTAMP（时间戳）类型用于表示日期和时间，它的显示时间与DATETIME相同，但取值范围比DATETIME小。</p><blockquote><p>注意：<br> NOT NULL表示非空约束，该字段不允许保存空值<br> DEFAULT表示默认约束，当字段无任何输入时，自动设置某个值作为默认值。<br> ON UPDATE用于当一条记录中的其他字段被UPDATE语句修改时，自动更改该字段为某个值。</p></blockquote><h4 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">数据类型         类型说明           字节大小</span><br><span class="line">CHAR            固定长度字符串      0-255</span><br><span class="line">VARCHAR         可变长度字符串      0-255</span><br><span class="line">TEXT            大文本数据         0-65535</span><br><span class="line">ENUM            枚举类型</span><br><span class="line">SET             字符串对象</span><br><span class="line">BINARY          固定长度的二进制数据</span><br><span class="line">VARBINARY       可边长度的二进制数据</span><br><span class="line">BLOB            二进制大对象</span><br></pre></td></tr></table></figure><ul><li><p>CHAR和VARCHAR类型<br>  CHAR和VARCHAR类型都用来保存字符串类型<br>  CHAR(M);<br>  VARCHAR(M);  </p></li><li><p>TEXT类型<br>  TEXT用于存储大文本数据  </p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数据类型        存储范围        数据类型        存储范围</span><br><span class="line">TINYTEXT    0~2^8-1字节       MEDIUMTEXT      0~2^24-1字节</span><br><span class="line">TEXT        0~2^16-1字节      LONGTEXT        0~2^32-1字节</span><br></pre></td></tr></table></figure></li><li><p>ENUM类型<br>  ENUM类型又称为枚举类型。<br>  ENUM(‘值1’,’值2’,…)</p></li><li><p>SET类型<br>  SET类型用于保存字符串对象。<br>  SET(‘值1’,’值2’,’值n’);</p></li><li><p>BINARY和VARBINARY类型<br>  他们表示定义二进制数据。<br>  BINARY(M);<br>  VARBINARY(M);</p></li><li><p>BLOB类型<br>  BLOB类型用于保存数据量很大的二进制数据，如图片，PDF文档等。  </p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数据类型    存储范围        数据类型        存储范围</span><br><span class="line">TINYBLOB    0~2^8-1字节   MEDIUMBLOB      0~2^24-1字节</span><br><span class="line">BLOB        0~2^16-1字节  LONGBLOB        2^24-1字节</span><br></pre></td></tr></table></figure><p>  注：BLOB类型与TEXT类型很相似，但BLOB类型数据是根据二进制编码进行比较和排序，而TEXT类型数据是根据文本模式进行比较和排序。</p></li></ul><h2 id="数据约束"><a href="#数据约束" class="headerlink" title="数据约束"></a>数据约束</h2><p>约束是指数据在数据类型限定的基础上额外增加的要求.</p><h3 id="常见的约束"><a href="#常见的约束" class="headerlink" title="常见的约束"></a>常见的约束</h3><ul><li><p>主键 primary key: 物理上存储的顺序. MySQL 建议所有表的主键字段都叫 id, 类型为 int unsigned.</p></li><li><p>非空 not null: 此字段不允许填写空值. 惟一 unique: 此字段的值不允许重复.</p></li><li><p>默认 default: 当不填写字段对应的值会使用默认值，如果填写时以填写为准.</p></li><li><p>外键 foreign key: 对关系字段进行约束, 当为关系字段填写值时,会到关联的表中查询此值是否存在, 如果存在则填写成功, 如果不存在则填写失败并抛出异常.</p></li><li><p>UNSIGNED：无符号，值从0开始，无负数</p></li><li><p>ZEROFILL：零填充，当数据的显示长度不够的时候可以使用前补0的效果填充至指定长度,字段会自动添加UNSIGNED</p></li><li><p>NOT NULL：非空约束，表示该字段的值不能为空</p></li><li><p>DEFAULT：表示如果插入数据时没有给该字段赋值，那么就使用默认值</p></li><li><p>PRIMARY KEY：主键约束，表示唯一标识，不能为空，且一个表只能有一个主键。一般都是用来约束id</p></li><li><p>AUTO_INCREMENT：自增长，只能用于数值列，而且配合索引使用,默认起始值从1开始，每次增长1</p></li><li><p>UNIQUE KEY：唯一值，表示该字段下的值不能重复，null除外。比如身份证号是一人一号的，一般都会用这个进行约束</p></li><li><p>FOREIGN KEY：外键约束，目的是为了保证数据的完成性和唯一性，以及实现一对一或一对多关系</p></li></ul><h3 id="主要约束"><a href="#主要约束" class="headerlink" title="主要约束"></a>主要约束</h3><ul><li><p>默认约束</p><p>  字段名 数据类型 DEFAULT 默认值</p><p>  默认约束用于为数据表中的字段指定默认值。但BLOB类型与TEXT类型不支持默认约束。</p></li><li><p>非空约束</p><p>  字段名 数据类型 NOT NULL</p><p>  非空字段指字段的值不能为NULL。</p></li><li><p>唯一约束<br>  #列级约束<br>  字段名 数据类型 UNIQUE;</p><p>  #表级约束<br>  UNIQUE (字段名 1，字段名 2…);</p><p>  唯一约束用于保证数据表中字段的唯一性，即表中字段的值不能重复出现。<br>  列级约束定义在一个列上，只对该列起约束作用；<br>  表级约束是独立于列的定义，可以应用在一个表的多个列上。</p></li><li><p>主键约束</p><p>  #列级约束<br>  字段名 数据类型 PRIMARY KEY;</p><p>  #表级约束<br>  PRIMARY KEY(字段名 1,字段名2…);</p></li><li><p>自动增长</p><p>  字段名 数据类型 AUTO_INCREMENT</p></li><li><p>zerofill、unsigned</p><p>  用于数值类型（整数，浮点数，bit）的约束</p><p>  字段名[(M)] [UNSIGNED] [ZEROFILL]</p></li></ul><blockquote><p>注意：<br>    一个表中只能有一个自动增长字段，该字段类型是整数类型，且必须定义为键，如UNIQUE KEY,PRIMARY KEY。<br>    若为自动增长字段插入NULL,0,DEFAULT或在插入时省略该字段，则该字段就会使用自动增长值；若插入的是一个具体值，则不会使用自动增长值。<br>    自动增长值从1开始自增，每次加1.若插入的值大于自动增长的值，则下次插入的自动增长值会自动使用最大值加1，若插入的值小于自动增长值，则不会对自动增长值产生影响<br>    使用DELETE删除记录时，自动增长值不会减小或填补空缺。</p></blockquote><p>数据类型和约束保证了表中数据的准确性和完整性</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://cloud.tencent.com/developer/article/1688520">MySQL—数据类型与约束</a></p><p>[2] <a href="https://blog.csdn.net/yuzhiqiang_1993/article/details/81453569">MySQL数据类型详解</a></p><p>[3] <a href="https://www.cnblogs.com/-xlp/p/8617760.html">MYSQL中数据类型介绍</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;数据库中的数据保存在数据表中，在表中为了更加准确的存储数据，保证数据的正确有效，可以在创建表的时候，为表添加一些强制性的验证，比如:数据类型和约束。&lt;/p&gt;
&lt;h2 id=&quot;数据类型&quot;&gt;&lt;a href=&quot;#数据类型&quot; class=&quot;headerlink&quot; title=&quot;数据</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="programming" scheme="https://chyriso.github.io/categories/major/programming/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/categories/major/programming/mysql/"/>
    
    
    <category term="Database" scheme="https://chyriso.github.io/tags/Database/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>数据库概述</title>
    <link href="https://chyriso.github.io/2022/06/18/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/"/>
    <id>https://chyriso.github.io/2022/06/18/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/</id>
    <published>2022-06-18T07:21:14.000Z</published>
    <updated>2022-06-18T10:57:36.911Z</updated>
    
    <content type="html"><![CDATA[<p>学习数据库，需要弄清楚几个概念：数据库的分类、数据库与数据库管理系统的关系、结构化查询语言。最后介绍一个主流的关系型数据库管理系统 MySQL，这会是接下来主要学习的内容。</p><h2 id="DB：数据库（Database）"><a href="#DB：数据库（Database）" class="headerlink" title="DB：数据库（Database）"></a>DB：数据库（Database）</h2><p>按照一定的数据结构来组织、存储和管理数据的仓库。即存储数据的仓库，其本质是一个文件系统，数据按照特定的格式将存储起来，用户可以对数据库中的数据进行增加，修改，删除及查询操作。</p><p>每个数据库都有一个或多个不同的API用于创建、访问、管理、搜索和复制所保存的数据。我们也可以将数据存储在文件中，但是在文件中读写数据速度相对较慢。</p><ul><li>持久化存储</li><li>读写效率极高</li><li>保证数据的有效性</li><li>对程序支持性好，易扩展</li></ul><h3 id="RDB：关系型数据库（Relational-Database）"><a href="#RDB：关系型数据库（Relational-Database）" class="headerlink" title="RDB：关系型数据库（Relational Database）"></a>RDB：关系型数据库（Relational Database）</h3><p>建立在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据，通常由多张表组成，这些表之间存在一定的关系。</p><p>关系型数据库，是指采用了关系模型来组织数据的数据库。简单来说，关系模型指的就是二维表格模型，而一个关系型数据库就是由二维表及其之间的联系所组成的一个数据组织。</p><p>关系型数据库的最大特点就是事务的一致性：传统的关系型数据库读写操作都是事务的，具有ACID的特点，这个特性使得关系型数据库可以用于几乎所有对一致性有要求的系统中，如典型的银行系统。</p><ul><li><p>关系型数据库模型是把复杂的数据结构归结为简单的二元关系（即二维表格形式）</p></li><li><p>关系型数据库以行(row)和列(column)的形式存储数据，以便于用户理解。这一系列的行和列被称为表(table)，一组表组成了一个库(database)</p></li><li><p>表与表之间的数据记录有关系(relationship)。现实世界中的各种实体以及实体之间的各种联系均用关系模型来表示。关系型数据库，就是建立在关系模型基础上的数据库</p></li><li><p>SQL 就是关系型数据库的查询语言</p></li><li><p>简述<br>  记录(数据行)<br>  字段(数据列)<br>  数据表(工作表，多个行的集合)<br>  数据库(工作簿，多个数据表组成)</p><ul><li><p>优势：</p><ul><li>复杂查询 可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询</li><li>事务支持 使得对于安全性能很高的数据访问要求得以实现</li></ul></li><li><p>优点：</p><ul><li>容易理解：二维表结构是非常贴近逻辑世界的一个概念，关系模型相对网状、层次等其他模型来说更容易理解</li><li>使用方便：通用的SQL语言使得操作关系型数据库非常方便</li><li>易于维护：丰富的完整性(实体完整性、参照完整性和用户定义的完整性)大大减低了数据冗余和数据不一致的概率</li></ul></li><li><p>缺点：</p><ul><li>数据读写必须经过sql解析，大量数据、高并发下读写性能不足。对于传统关系型数据库来说，硬盘I&#x2F;O是一个很大的瓶颈。</li><li>具有固定的表结构，因此扩展困难。</li><li>多表的关联查询导致性能欠佳</li></ul></li><li><p>特点：</p><ul><li>数据以表格的形式出现</li><li>每行为各种记录名称</li><li>每列为记录名称所对应的数据域</li><li>许多的行和列组成一张表单</li><li>若干的表单组成database</li></ul></li></ul></li></ul><h3 id="NoSQL：非关系型数据库（NoSQL，Not-Only-SQL）"><a href="#NoSQL：非关系型数据库（NoSQL，Not-Only-SQL）" class="headerlink" title="NoSQL：非关系型数据库（NoSQL，Not Only SQL）"></a>NoSQL：非关系型数据库（NoSQL，Not Only SQL）</h3><p>NoSQL非关系型数据库，主要指那些非关系型的、分布式的，且一般不保证ACID的数据存储系统。NoSQL提出了另一种理念，以键值来存储，且结构不稳定，每一个元组都可以有不一样的字段。</p><p>这种就不会局限于固定的结构，可以减少一些时间和空间的开销。使用这种方式，为了获取用户的不同信息，不需要像关系型数据库中，需要进行多表查询。仅仅需要根据key来取出对应的value值即可。</p><ul><li><p>非关系型数据库，是传统关系型数据库的功能阉割版本，基于Key-Value对存储数据，不需要经过SQL层的解析，性能非常高</p></li><li><p>NoSQL 泛指非关系型数据库</p></li><li><p>键值型数据库通过Key-Value键值的方式来存储数据，其中Key和Value可以是简单的对象，也可以是复杂的对象。Key作为唯一的标识符，优点是查找速度快，明显优于关系型数据库，缺点是无法像关系型数据库一样使用条件过滤(比如 WHERE)，如果你不知道去哪里找数据，就要遍历所有的键，这就会消耗大量的计算</p></li><li><p>键值型数据库典型的使用场景是作为内存缓存。Redis是最流行的键值型数据库</p></li><li><p>特点：</p><ul><li>非结构化的存储。</li><li>基于多维关系模型。</li><li>具有特有的使用场景。</li></ul></li><li><p>优点：</p><ul><li>高并发，大数据下读写能力较强。（基于键值对的，可以想象成表中的主键和值的对应关系，而且不需要经过SQL层的解析，所以性能非常高）</li><li>基本支持分布式，易于扩展，可伸缩。（因为基于键值对，数据之间没有耦合性，所以非常容易水平扩展。）</li><li>简单，弱结构化存储。</li></ul></li><li><p>缺点:</p><ul><li>事务支持较弱。</li><li>通用性差。</li><li>无完整约束复杂业务场景支持较差</li></ul></li></ul><h2 id="DBMS：数据库管理系统（Database-Management-System）"><a href="#DBMS：数据库管理系统（Database-Management-System）" class="headerlink" title="DBMS：数据库管理系统（Database Management System）"></a>DBMS：数据库管理系统（Database Management System）</h2><p>是一种操纵和管理数据库的大型软件，用于建立、使用和维护数据库，对数据库进行统一管理和控制。用户通过数据库管理系统访问数据库中表内的数据。</p><h3 id="关系型数据库管理系统（RDBMS：Relational-Database-Management-System）："><a href="#关系型数据库管理系统（RDBMS：Relational-Database-Management-System）：" class="headerlink" title="关系型数据库管理系统（RDBMS：Relational Database Management System）："></a>关系型数据库管理系统（RDBMS：Relational Database Management System）：</h3><p>是一种操纵和管理关系型数据库的大型软件，用于建立、使用和维护关系型数据库，对关系型数据库进行统一管理和控制。用户通过关系型数据库管理系统访问关系型数据库中表内的数据。</p><p>关系型数据库通常由多张表组成，通过RDBMS来管理数据库。关系型数据库管理系统分为客户端和服务端，客户端通过SQL语句实现对数据的管理。</p><p>主要代表：SQL Server，Oracle,Mysql,PostgreSQL。</p><pre><code>- 常见的数据库管理系统    - MYSQL ：开源免费的数据库，小型的数据库.已经被Oracle收购了.MySQL6.x版本也开始收费。    - Oracle ：收费的大型数据库，Oracle公司的产品。Oracle收购SUN公司，收购MYSQL。    - DB2 ：IBM公司的数据库产品,收费的。常应用在银行系统中.    - SQLServer：MicroSoft 公司收费的中型的数据库。C#、.net等语言常使用。    - SyBase ：已经淡出历史舞台。提供了一个非常专业数据建模的工具PowerDesigner。    - SQLite : 嵌入式的小型数据库，应用在手机端。    - Java相关的数据库：MYSQL，Oracle．</code></pre><h3 id="非关系型数据库管理系统（NRDBMS：Not-Relational-Database-Management-System）："><a href="#非关系型数据库管理系统（NRDBMS：Not-Relational-Database-Management-System）：" class="headerlink" title="非关系型数据库管理系统（NRDBMS：Not Relational Database Management System）："></a>非关系型数据库管理系统（NRDBMS：Not Relational Database Management System）：</h3><p>是一种操纵和管理非关系型数据库的大型软件，用于建立、使用和维护非关系型数据库，对非关系型数据库进行统一管理和控制。用户通过非关系型数据库管理系统访问非关系型数据库中的键值数据。</p><p>主要代表：MongoDB，Redis、CouchDB。</p><h2 id="SQL：结构化查询语言（Structured-Query-Language）"><a href="#SQL：结构化查询语言（Structured-Query-Language）" class="headerlink" title="SQL：结构化查询语言（Structured Query Language）"></a>SQL：结构化查询语言（Structured Query Language）</h2><p>专门用来与数据库通信的结构化查询语言，是一种用来操作RDBMS的数据库语言。</p><p>SQL语言通常分为五类：</p><ul><li>DDL(数据定义语言)：create、alter、drop等；</li><li>DQL(数据查询语言)：select等；</li><li>DML(数据操纵语言)：insert、delete 、update等；</li><li>TCL(事务控制语言)：commit、rollback等；</li><li>DCL(数据控制语言)：grant、revoke等。</li></ul><h3 id="DDL-数据定义语言"><a href="#DDL-数据定义语言" class="headerlink" title="DDL(数据定义语言)"></a>DDL(数据定义语言)</h3><p>数据定义语言（Data Definition Language）简称DDL。是 SQL 语言集中负责数据结构定义与数据库对象定义的语言。</p><p>DDL用来创建数据库中的各种对象，创建、删除、修改表的结构，比如表、视图、索引、同义词、聚簇等。其主要功能是定义数据库对象，核心指令为create、drop、alter。</p><p>和DML相比，DML是修改数据库表中的数据，而 DDL 是修改数据中表的结构。</p><h3 id="DQL-数据查询语言"><a href="#DQL-数据查询语言" class="headerlink" title="DQL(数据查询语言)"></a>DQL(数据查询语言)</h3><p>数据查询语言（Data Query Language）简称DQL。是SQL语言中，负责进行数据查询而不会对数据本身进行修改的语句，这是最基本的SQL语句。</p><p>DQL的核心指令为select。通常与关键字from、where、group by、having、order by等一起使用，组成查询语句。</p><h3 id="DML-数据操纵语言"><a href="#DML-数据操纵语言" class="headerlink" title="DML(数据操纵语言)"></a>DML(数据操纵语言)</h3><p>数据操纵语言（Data Manipulation Language）简称DML。过它可以实现对数据库的基本操作，对数据库其中的对象和数据运行访问工作的语言。</p><p>DML的主要功能是访问数据，因此其语法都是以读写数据库为主。</p><p>DML的核心指令为insert、update、delete。</p><h3 id="TCL-事务控制语言"><a href="#TCL-事务控制语言" class="headerlink" title="TCL(事务控制语言)"></a>TCL(事务控制语言)</h3><p>事务控制语言（Transaction Control Language）简称TCL。用于管理数据库中的事务。这些用于管理由 DML 语句所做的更改。它还允许将语句分组为逻辑事务。</p><p>TCL经常被用于快速原型开发、脚本编程、GUI和测试等方面。</p><p>TCL的核心指令为commit、rollback。</p><h3 id="DCL-数据控制语言"><a href="#DCL-数据控制语言" class="headerlink" title="DCL(数据控制语言)"></a>DCL(数据控制语言)</h3><p>数据控制语言 （Data Control Language）简称DCL。是一种可对数据访问权进行控制的指令，它可以控制特定用户账户对数据表、查看表、预存程序、用户自定义函数等数据库对象的控制权。</p><p>DCL用来授予或回收访问数据库的某种特权，并控制数据库操纵事务发生的时间及效果，对数据库实行监视等。</p><p>DCL的核心指令为 grant、revoke。</p><p>查看数据库排名：<a href="https://db-engines.com/en/ranking">https://db-engines.com/en/ranking</a></p><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，后来被Sun公司收购，Sun公司被Oracle公司收购，目前属于Oracle公司。</p><p>MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p><ul><li>MySQL是开源的，目前隶属于 Oracle 旗下产品。</li><li>MySQL支持大型的数据库。可以处理拥有上千万条记录的大型数据库。</li><li>MySQL使用标准的 SQL 数据语言形式。</li><li>MySQL可以运行于多个系统上，并且支持多种语言。这些编程语言包括 C、C++、Python、Java、Perl、PHP、Eiffel、Ruby 和 Tcl 等。</li><li>MySQL支持大型数据库，支持 5000 万条记录的数据仓库，32 位系统表文件最大可支持 4GB，64 位系统支持最大的表文件为8TB。</li><li>MySQL是可以定制的，采用了 GPL 协议，你可以修改源码来开发自己的MySQL系统。</li></ul><p>提示： sql语句不区分大小写，每条sql语句后面加分号 “;”</p><h3 id="MySQL存储引擎MyISAM与InnoDB区别"><a href="#MySQL存储引擎MyISAM与InnoDB区别" class="headerlink" title="MySQL存储引擎MyISAM与InnoDB区别"></a>MySQL存储引擎MyISAM与InnoDB区别</h3><p>参考知乎：<a href="https://zhuanlan.zhihu.com/p/416555190">MySQL存储引擎MyISAM与InnoDB区别？</a></p><p>MyISAM存储引擎的特点是：表级锁、不支持事务和全文索引，适合一些CMS内容管理系统作为后台数据库使用，但是使用大并发、重负荷生产系统上，表锁结构的特性就显得力不从心；</p><p>InnoDB存储引擎的特点是：行级锁、事务安全（ACID兼容）、支持外键、不支持FULLTEXT类型的索引(5.6.4以后版本开始支持FULLTEXT类型的索引)。InnoDB存储引擎提供了具有提交、回滚和崩溃恢复能力的事务安全存储引擎。InnoDB是为处理巨大量时拥有最大性能而设计的。它的CPU效率可能是任何其他基于磁盘的关系数据库引擎所不能匹敌的。</p><blockquote><p>– 注意：<br>InnoDB表的行锁也不是绝对的，假如在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如update table set num&#x3D;1 where name like “a%”。</p></blockquote><p>两种类型最主要的差别就是InnoDB支持事务处理与外键和行级锁。而MyISAM不支持。所以MyISAM往往就容易被人认为只适合在小项目中使用。</p><blockquote><p>– Mysql的行锁和表锁（锁是计算机协调多个进程或纯线程并发访问某一资源的机制）<br>– 表级锁： 每次操作锁住整张表。开销小，加锁快；不会出现死锁；锁定粒度大，发生锁冲突的概率最高，并发度最低；<br>– 行级锁： 每次操作锁住一行数据。开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最低，并发度也最高；  </p><p>– 事务是访问并更新数据库中各种数据项的一个程序执行单元。事务可由一条非常简单的SQL语句组成，也可以由一组复杂的SQL语句组成。在事务操作中，这些语句要么都执行，要么都不执行。</p></blockquote><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://blog.csdn.net/Bruce_Up/article/details/82749285">数据库简介、及常用数据库介绍</a></p><p>[2] <a href="https://zhuanlan.zhihu.com/p/78619241">关系型数据库 VS 非关系型数据库</a></p><p>[3] <a href="https://www.cnblogs.com/jmsjh/p/7762259.html">数据库概述</a></p><p>[4] <a href="https://blog.csdn.net/weixin_47392089/article/details/124792376">MySQL基础篇</a></p><p>[5] <a href="https://www.bilibili.com/video/BV1uJ411Y7uH?p=117&spm_id_from=pageDriver">python高级编程</a></p><p>[6] <a href="https://www.cnblogs.com/lfblogs/p/9955687.html">RDBMS与数据库之间的关系</a></p><p>[7] <a href="https://blog.csdn.net/JokerLJG/article/details/122875881">SQL语言的分类</a></p><p>[8] <a href="https://blog.csdn.net/qfzhaohan/article/details/121772040">SQL语句五种分类</a></p><p>[9] <a href="https://zhuanlan.zhihu.com/p/342769771">数据库概述</a></p><p>[10] <a href="https://zhuanlan.zhihu.com/p/416555190">MySQL存储引擎MyISAM与InnoDB区别？</a></p><p>[11] <a href="https://blog.csdn.net/helloxiaozhe/article/details/88601028">MySQL两种存储引擎: MyISAM和InnoDB 的区别和优缺点</a></p><p>[12] <a href="https://zhuanlan.zhihu.com/p/61437720">MySQL存储引擎——MyISAM与InnoDB区别</a></p><p>[13] <a href="https://blog.csdn.net/wang_luwei/article/details/119619105">MySQL事务【详解-最新的总结】</a></p><p>[14] <a href="https://www.jianshu.com/p/081a3e208e32">MySQL事务</a></p><p>[15] <a href="https://zhuanlan.zhihu.com/p/97599869">MySQL中的事务</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;学习数据库，需要弄清楚几个概念：数据库的分类、数据库与数据库管理系统的关系、结构化查询语言。最后介绍一个主流的关系型数据库管理系统 MySQL，这会是接下来主要学习的内容。&lt;/p&gt;
&lt;h2 id=&quot;DB：数据库（Database）&quot;&gt;&lt;a href=&quot;#DB：数据库（Dat</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="programming" scheme="https://chyriso.github.io/categories/major/programming/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/categories/major/programming/mysql/"/>
    
    
    <category term="Database" scheme="https://chyriso.github.io/tags/Database/"/>
    
    <category term="mysql" scheme="https://chyriso.github.io/tags/mysql/"/>
    
    <category term="sql" scheme="https://chyriso.github.io/tags/sql/"/>
    
    <category term="NoSQL" scheme="https://chyriso.github.io/tags/NoSQL/"/>
    
    <category term="DBMS" scheme="https://chyriso.github.io/tags/DBMS/"/>
    
    <category term="RDBMS" scheme="https://chyriso.github.io/tags/RDBMS/"/>
    
  </entry>
  
  <entry>
    <title>李斯列传</title>
    <link href="https://chyriso.github.io/2022/06/17/%E6%9D%8E%E6%96%AF%E5%88%97%E4%BC%A0/"/>
    <id>https://chyriso.github.io/2022/06/17/%E6%9D%8E%E6%96%AF%E5%88%97%E4%BC%A0/</id>
    <published>2022-06-17T14:12:14.000Z</published>
    <updated>2022-09-26T08:48:35.243Z</updated>
    
    <content type="html"><![CDATA[<p>史记·七十列传</p><h2 id="李斯列传"><a href="#李斯列传" class="headerlink" title="李斯列传"></a>李斯列传</h2><p>　　李斯者，楚上蔡人也。年少时，为郡小吏，见吏舍厕中鼠食不絜，近人犬，数惊恐之。斯入仓，观仓中鼠，食积粟，居大庑之下，不见人犬之忧。於是李斯乃叹曰：“人之贤不肖譬如鼠矣，在所自处耳！”</p><p>　　乃从荀卿学帝王之术。学已成，度楚王不足事，而六国皆弱，无可为建功者，欲西入秦。辞於荀卿曰：“斯闻得时无怠，今万乘方争时，游者主事。今秦王欲吞天下，称帝而治，此布衣驰骛之时而游说者之秋也。处卑贱之位而计不为者，此禽鹿视肉，人面而能彊行者耳。故诟莫大於卑贱，而悲莫甚於穷困。久处卑贱之位，困苦之地，非世而恶利，自讬於无为，此非士之情也。故斯将西说秦王矣。”</p><p>　　至秦，会庄襄王卒，李斯乃求为秦相文信侯吕不韦舍人；不韦贤之，任以为郎。李斯因以得说，说秦王曰：“胥人者，去其几也。成大功者，在因瑕衅而遂忍之。昔者秦穆公之霸，终不东并六国者，何也？诸侯尚众，周德未衰，故五伯迭兴，更尊周室。自秦孝公以来，周室卑微，诸侯相兼，关东为六国，秦之乘胜役诸侯，盖六世矣。今诸侯服秦，譬若郡县。夫以秦之彊，大王之贤，由灶上骚除，足以灭诸侯，成帝业，为天下一统，此万世之一时也。今怠而不急就，诸侯复彊，相聚约从，虽有黄帝之贤，不能并也。”秦王乃拜斯为长史，听其计，阴遣谋士赍持金玉以游说诸侯。诸侯名士可下以财者，厚遗结之；不肯者，利剑刺之。离其君臣之计，秦王乃使其良将随其後。秦王拜斯为客卿。</p><p>　　会韩人郑国来间秦，以作注溉渠，已而觉。秦宗室大臣皆言秦王曰：“诸侯人来事秦者，大抵为其主游间於秦耳，请一切逐客。”李斯议亦在逐中。斯乃上书曰：</p><p>　　臣闻吏议逐客，窃以为过矣。昔缪公求士，西取由余於戎，东得百里奚於宛，迎蹇叔於宋，来丕豹、公孙支於晋。此五子者，不产於秦，而缪公用之，并国二十，遂霸西戎。孝公用商鞅之法，移风易俗，民以殷盛，国以富彊，百姓乐用，诸侯亲服，获楚、魏之师，举地千里，至今治彊。惠王用张仪之计，拔三川之地，西并巴、蜀，北收上郡，南取汉中，包九夷，制鄢、郢，东据成皋之险，割膏腴之壤，遂散六国之从，使之西面事秦，功施到今。昭王得范睢，废穰侯，逐华阳，彊公室，杜私门，蚕食诸侯，使秦成帝业。此四君者，皆以客之功。由此观之，客何负於秦哉！向使四君卻客而不内，疏士而不用，是使国无富利之实而秦无彊大之名也。</p><p>　　今陛下致昆山之玉，有随、和之宝，垂明月之珠，服太阿之剑，乘纤离之马，建翠凤之旗，树灵鼍之鼓。此数宝者，秦不生一焉，而陛下说之，何也？必秦国之所生然後可，则是夜光之璧不饰朝廷，犀象之器不为玩好，郑、卫之女不充後宫，而骏良駃騠不实外厩，江南金锡不为用，西蜀丹青不为采。所以饰後宫充下陈娱心意说耳目者，必出於秦然後可，则是宛珠之簪，傅玑之珥，阿缟之衣，锦绣之饰不进於前，而随俗雅化佳冶窈窕赵女不立於侧也。夫击甕叩缶弹筝搏髀，而歌呼呜呜快耳者，真秦之声也；郑、卫、桑间、昭、虞、武、象者，异国之乐也。今弃击甕叩缶而就郑卫，退弹筝而取昭虞，若是者何也？快意当前，適观而已矣。今取人则不然。不问可否，不论曲直，非秦者去，为客者逐。然则是所重者在乎色乐珠玉，而所轻者在乎人民也。此非所以跨海内制诸侯之术也。</p><p>　　臣闻地广者粟多，国大者人众，兵彊则士勇。是以太山不让土壤，故能成其大；河海不择细流，故能就其深；王者不卻众庶，故能明其德。是以地无四方，民无异国，四时充美，鬼神降福，此五帝、三王之所以无敌也。今乃弃黔首以资敌国，卻宾客以业诸侯，使天下之士退而不敢西向，裹足不入秦，此所谓“藉寇兵而赍盗粮”者也。</p><p>　　夫物不产於秦，可宝者多；士不产於秦，而原忠者众。今逐客以资敌国，损民以益雠，内自虚而外树怨於诸侯，求国无危，不可得也。</p><p>　　秦王乃除逐客之令，复李斯官，卒用其计谋。官至廷尉。二十馀年，竟并天下，尊主为皇帝，以斯为丞相。夷郡县城，销其兵刃，示不复用。使秦无尺土之封，不立子弟为王，功臣为诸侯者，使後无战攻之患。</p><p>　　始皇三十四年，置酒咸阳宫，博士仆射周青臣等颂始皇威德。齐人淳于越进谏曰：“臣闻之，殷周之王千馀岁，封子弟功臣自为支辅。今陛下有海内，而子弟为匹夫，卒有田常、六卿之患，臣无辅弼，何以相救哉？事不师古而能长久者，非所闻也。今青臣等又面谀以重陛下过，非忠臣也。”始皇下其议丞相。丞相谬其说，绌其辞，乃上书曰：“古者天下散乱，莫能相一，是以诸侯并作，语皆道古以害今，饰虚言以乱实，人善其所私学，以非上所建立。今陛下并有天下，别白黑而定一尊；而私学乃相与非法教之制，闻令下，即各以其私学议之，入则心非，出则巷议，非主以为名，异趣以为高，率群下以造谤。如此不禁，则主势降乎上，党与成乎下。禁之便。臣请诸有文学诗书百家语者，蠲除去之。令到满三十日弗去，黥为城旦。所不去者，医药卜筮种树之书。若有欲学者，以吏为师。”始皇可其议，收去诗书百家之语以愚百姓，使天下无以古非今。明法度，定律令，皆以始皇起。同文书。治离宫别馆，周遍天下。明年，又巡狩，外攘四夷，斯皆有力焉。</p><p>　　斯长男由为三川守，诸男皆尚秦公主，女悉嫁秦诸公子。三川守李由告归咸阳，李斯置酒於家，百官长皆前为寿，门廷车骑以千数。李斯喟然而叹曰：“嗟乎！吾闻之荀卿曰‘物禁大盛’。夫斯乃上蔡布衣，闾巷之黔首，上不知其驽下，遂擢至此。当今人臣之位无居臣上者，可谓富贵极矣。物极则衰，吾未知所税驾也！”</p><p>　　始皇三十七年十月，行出游会稽，并海上，北抵琅邪。丞相斯、中车府令赵高兼行符玺令事，皆从。始皇有二十馀子，长子扶苏以数直谏上，上使监兵上郡，蒙恬为将。少子胡亥爱，请从，上许之。馀子莫从。</p><p>　　其年七月，始皇帝至沙丘，病甚，令赵高为书赐公子扶苏曰：“以兵属蒙恬，与丧会咸阳而葬。”书已封，未授使者，始皇崩。书及玺皆在赵高所，独子胡亥、丞相李斯、赵高及幸宦者五六人知始皇崩，馀群臣皆莫知也。李斯以为上在外崩，无真太子，故祕之。置始皇居辒辌车中，百官奏事上食如故，宦者辄从辒辌车中可诸奏事。</p><p>　　赵高因留所赐扶苏玺书，而谓公子胡亥曰：“上崩，无诏封王诸子而独赐长子书。长子至，即立为皇帝，而子无尺寸之地，为之柰何？”胡亥曰：“固也。吾闻之，明君知臣，明父知子。父捐命，不封诸子，何可言者！”赵高曰：“不然。方今天下之权，存亡在子与高及丞相耳，原子图之。且夫臣人与见臣於人，制人与见制於人，岂可同日道哉！”胡亥曰：“废兄而立弟，是不义也；不奉父诏而畏死，是不孝也；能薄而材譾，彊因人之功，是不能也：三者逆德，天下不服，身殆倾危，社稷不血食。”高曰：“臣闻汤、武杀其主，天下称义焉，不为不忠。卫君杀其父，而卫国载其德，孔子著之，不为不孝。夫大行不小谨，盛德不辞让，乡曲各有宜而百官不同功。故顾小而忘大，後必有害；狐疑犹豫，後必有悔。断而敢行，鬼神避之，後有成功。原子遂之！”胡亥喟然叹曰：“今大行未发，丧礼未终，岂宜以此事干丞相哉！”赵高曰：“时乎时乎，间不及谋！赢粮跃马，唯恐後时！”</p><p>　　胡亥既然高之言，高曰：“不与丞相谋，恐事不能成，臣请为子与丞相谋之。”高乃谓丞相斯曰：“上崩，赐长子书，与丧会咸阳而立为嗣。书未行，今上崩，未有知者也。所赐长子书及符玺皆在胡亥所，定太子在君侯与高之口耳。事将何如？”斯曰：“安得亡国之言！此非人臣所当议也！”高曰：“君侯自料能孰与蒙恬？功高孰与蒙恬？谋远不失孰与蒙恬？无怨於天下孰与蒙恬？长子旧而信之孰与蒙恬？”斯曰：“此五者皆不及蒙恬，而君责之何深也？”高曰：“高固内官之厮役也，幸得以刀笔之文进入秦宫，管事二十馀年，未尝见秦免罢丞相功臣有封及二世者也，卒皆以诛亡。皇帝二十馀子，皆君之所知。长子刚毅而武勇，信人而奋士，即位必用蒙恬为丞相，君侯终不怀通侯之印归於乡里，明矣。高受诏教习胡亥，使学以法事数年矣，未尝见过失。慈仁笃厚，轻财重士，辩於心而诎於口，尽礼敬士，秦之诸子未有及此者，可以为嗣。君计而定之。”斯曰：“君其反位！斯奉主之诏，听天之命，何虑之可定也？”高曰：“安可危也，危可安也。安危不定，何以贵圣？”斯曰：“斯，上蔡闾巷布衣也，上幸擢为丞相，封为通侯，子孙皆至尊位重禄者，故将以存亡安危属臣也。岂可负哉！夫忠臣不避死而庶几，孝子不勤劳而见危，人臣各守其职而已矣。君其勿复言，将令斯得罪。”高曰：“盖闻圣人迁徙无常，就变而从时，见末而知本，观指而睹归。物固有之，安得常法哉！方今天下之权命悬於胡亥，高能得志焉。且夫从外制中谓之惑，从下制上谓之贼。故秋霜降者草花落，水摇动者万物作，此必然之效也。君何见之晚？”斯曰：“吾闻晋易太子，三世不安；齐桓兄弟争位，身死为戮；纣杀亲戚，不听谏者，国为丘墟，遂危社稷：三者逆天，宗庙不血食。斯其犹人哉，安足为谋！”高曰：“上下合同，可以长久；中外若一，事无表里。君听臣之计，即长有封侯，世世称孤，必有乔松之寿，孔、墨之智。今释此而不从，祸及子孙，足以为寒心。善者因祸为福，君何处焉？”斯乃仰天而叹，垂泪太息曰：“嗟乎！独遭乱世，既以不能死，安讬命哉！”於是斯乃听高。高乃报胡亥曰：“臣请奉太子之明命以报丞相，丞相斯敢不奉令！”</p><p>　　於是乃相与谋，诈为受始皇诏丞相，立子胡亥为太子。更为书赐长子扶苏曰：“朕巡天下，祷祠名山诸神以延寿命。今扶苏与将军蒙恬将师数十万以屯边，十有馀年矣，不能进而前，士卒多秏，无尺寸之功，乃反数上书直言诽谤我所为，以不得罢归为太子，日夜怨望。扶苏为人子不孝，其赐剑以自裁！将军恬与扶苏居外，不匡正，宜知其谋。为人臣不忠，其赐死，以兵属裨将王离。”封其书以皇帝玺，遣胡亥客奉书赐扶苏於上郡。</p><p>　　使者至，发书，扶苏泣，入内舍，欲自杀。蒙恬止扶苏曰：“陛下居外，未立太子，使臣将三十万众守边，公子为监，此天下重任也。今一使者来，即自杀，安知其非诈？请复请，复请而後死，未暮也。”使者数趣之。扶苏为人仁，谓蒙恬曰：“父而赐子死，尚安复请！”即自杀。蒙恬不肯死，使者即以属吏，系於阳周。</p><p>　　使者还报，胡亥、斯、高大喜。至咸阳，发丧，太子立为二世皇帝。以赵高为郎中令，常侍中用事。</p><p>　　二世燕居，乃召高与谋事，谓曰：“夫人生居世间也，譬犹骋六骥过决隙也。吾既已临天下矣，欲悉耳目之所好，穷心志之所乐，以安宗庙而乐万姓，长有天下，终吾年寿，其道可乎？”高曰：“此贤主之所能行也，而昬乱主之所禁也。臣请言之，不敢避斧钺之诛，原陛下少留意焉。夫沙丘之谋，诸公子及大臣皆疑焉，而诸公子尽帝兄，大臣又先帝之所置也。今陛下初立，此其属意怏怏皆不服，恐为变。且蒙恬已死，蒙毅将兵居外，臣战战栗栗，唯恐不终。且陛下安得为此乐乎？”二世曰：“为之柰何？”赵高曰：“严法而刻刑，令有罪者相坐诛，至收族，灭大臣而远骨肉；贫者富之，贱者贵之。尽除去先帝之故臣，更置陛下之所亲信者近之。此则阴德归陛下，害除而奸谋塞，群臣莫不被润泽，蒙厚德，陛下则高枕肆志宠乐矣。计莫出於此。”二世然高之言，乃更为法律。於是群臣诸公子有罪，辄下高，令鞠治之。杀大臣蒙毅等，公子十二人僇死咸阳市，十公主矺死於杜，财物入於县官，相连坐者不可胜数。</p><p>　　公子高欲奔，恐收族，乃上书曰：“先帝无恙时，臣入则赐食，出则乘舆。御府之衣，臣得赐之；中厩之宝马，臣得赐之。臣当从死而不能，为人子不孝，为人臣不忠。不忠者无名以立於世，臣请从死，原葬郦山之足。唯上幸哀怜之。”书上，胡亥大说，召赵高而示之，曰：“此可谓急乎？”赵高曰：“人臣当忧死而不暇，何变之得谋！”胡亥可其书，赐钱十万以葬。</p><p>　　法令诛罚日益刻深，群臣人人自危，欲畔者众。又作阿房之宫，治直、驰道，赋敛愈重，戍徭无已。於是楚戍卒陈胜、吴广等乃作乱，起於山东，杰俊相立，自置为侯王，叛秦，兵至鸿门而卻。李斯数欲请间谏，二世不许。而二世责问李斯曰：“吾有私议而有所闻於韩子也，曰‘尧之有天下也，堂高三尺，采椽不斫，茅茨不翦，虽逆旅之宿不勤於此矣。冬日鹿裘，夏日葛衣，粢粝之食，藜藿之羹，饭土匭，啜土鉶，虽监门之养不觳於此矣。禹凿龙门，通大夏，疏九河，曲九防，决渟水致之海，而股无胈，胫无毛，手足胼胝，面目黎黑，遂以死于外，葬於会稽，臣虏之劳不烈於此矣’。然则夫所贵於有天下者，岂欲苦形劳神，身处逆旅之宿，口食监门之养，手持臣虏之作哉？此不肖人之所勉也，非贤者之所务也。彼贤人之有天下也，专用天下適己而已矣，此所贵於有天下也。夫所谓贤人者，必能安天下而治万民，今身且不能利，将恶能治天下哉！故吾原赐志广欲，长享天下而无害，为之柰何？”李斯子由为三川守，群盗吴广等西略地，过去弗能禁。章邯以破逐广等兵，使者覆案三川相属，诮让斯居三公位，如何令盗如此。李斯恐惧，重爵禄，不知所出，乃阿二世意，欲求容，以书对曰：</p><p>　　夫贤主者，必且能全道而行督责之术者也。督责之，则臣不敢不竭能以徇其主矣。此臣主之分定，上下之义明，则天下贤不肖莫敢不尽力竭任以徇其君矣。是故主独制於天下而无所制也。能穷乐之极矣，贤明之主也，可不察焉！</p><p>　　故申子曰“有天下而不恣睢，命之曰以天下为桎梏”者，无他焉，不能督责，而顾以其身劳於天下之民，若尧、禹然，故谓之“桎梏”也。夫不能修申、韩之明术，行督责之道，专以天下自適也，而徒务苦形劳神，以身徇百姓，则是黔首之役，非畜天下者也，何足贵哉！夫以人徇己，则己贵而人贱；以己徇人，则己贱而人贵。故徇人者贱，而人所徇者贵，自古及今，未有不然者也。凡古之所为尊贤者，为其贵也；而所为恶不肖者，为其贱也。而尧、禹以身徇天下者也，因随而尊之，则亦失所为尊贤之心矣，夫可谓大缪矣。谓之为“桎梏”，不亦宜乎？不能督责之过也。</p><p>　　故韩子曰：“慈母有败子而严家无格虏”者，何也？则能罚之加焉必也。故商君之法，刑弃灰於道者。夫弃灰，薄罪也，而被刑，重罚也。彼唯明主为能深督轻罪。夫罪轻且督深，而况有重罪乎？故民不敢犯也。是故韩子曰“布帛寻常，庸人不释，铄金百溢，盗跖不搏”者，非庸人之心重，寻常之利深，而盗跖之欲浅也；又不以盗跖之行，为轻百镒之重也。搏必随手刑，则盗跖不搏百镒；而罚不必行也，则庸人不释寻常。是故城高五丈，而楼季不轻犯也；泰山之高百仞，而跛牧其上。夫楼季也而难五丈之限，岂跛也而易百仞之高哉？峭堑之势异也。明主圣王之所以能久处尊位，长执重势，而独擅天下之利者，非有异道也，能独断而审督责，必深罚，故天下不敢犯也。今不务所以不犯，而事慈母之所以败子也，则亦不察於圣人之论矣。夫不能行圣人之术，则舍为天下役何事哉？可不哀邪！</p><p>　　且夫俭节仁义之人立於朝，则荒肆之乐辍矣；谏说论理之臣间於侧，则流漫之志诎矣；烈士死节之行显於世，则淫康之虞废矣。故明主能外此三者，而独操主术以制听从之臣，而修其明法，故身尊而势重也。凡贤主者，必将能拂世磨俗，而废其所恶，立其所欲，故生则有尊重之势，死则有贤明之谥也。是以明君独断，故权不在臣也。然後能灭仁义之涂，掩驰说之口，困烈士之行，塞聪揜明，内独视听，故外不可倾以仁义烈士之行，而内不可夺以谏说忿争之辩。故能荦然独行恣睢之心而莫之敢逆。若此然後可谓能明申、韩之术，而脩商君之法。法脩术明而天下乱者，未之闻也。故曰“王道约而易操”也。唯明主为能行之。若此则谓督责之诚，则臣无邪，臣无邪则天下安，天下安则主严尊，主严尊则督责必，督责必则所求得，所求得则国家富，国家富则君乐丰。故督责之术设，则所欲无不得矣。群臣百姓救过不给，何变之敢图？若此则帝道备，而可谓能明君臣之术矣。虽申、韩复生，不能加也。</p><p>　　书奏，二世悦。於是行督责益严，税民深者为明吏。二世曰：“若此则可谓能督责矣。”刑者相半於道，而死人日成积於市。杀人众者为忠臣。二世曰：“若此则可谓能督责矣。”</p><p>　　初，赵高为郎中令，所杀及报私怨众多，恐大臣入朝奏事毁恶之，乃说二世曰：“天子所以贵者，但以闻声，群臣莫得见其面，故号曰‘朕’。且陛下富於春秋，未必尽通诸事，今坐朝廷，谴举有不当者，则见短於大臣，非所以示神明於天下也。且陛下深拱禁中，与臣及侍中习法者待事，事来有以揆之。如此则大臣不敢奏疑事，天下称圣主矣。”二世用其计，乃不坐朝廷见大臣，居禁中。赵高常侍中用事，事皆决於赵高。</p><p>　　高闻李斯以为言，乃见丞相曰：“关东群盗多，今上急益发繇治阿房宫，聚狗马无用之物。臣欲谏，为位贱。此真君侯之事，君何不谏？”李斯曰：“固也，吾欲言之久矣。今时上不坐朝廷，上居深宫，吾有所言者，不可传也，欲见无间。”赵高谓曰：“君诚能谏，请为君候上间语君。”於是赵高待二世方燕乐，妇女居前，使人告丞相：“上方间，可奏事。”丞相至宫门上谒，如此者三。二世怒曰：“吾常多间日，丞相不来。吾方燕私，丞相辄来请事。丞相岂少我哉？且固我哉？”赵高因曰：“如此殆矣！夫沙丘之谋，丞相与焉。今陛下已立为帝，而丞相贵不益，此其意亦望裂地而王矣。且陛下不问臣，臣不敢言。丞相长男李由为三川守，楚盗陈胜等皆丞相傍县之子，以故楚盗公行，过三川，城守不肯击。高闻其文书相往来，未得其审，故未敢以闻。且丞相居外，权重於陛下。”二世以为然。欲案丞相，恐其不审，乃使人案验三川守与盗通状。李斯闻之。</p><p>　　是时二世在甘泉，方作觳抵优俳之观。李斯不得见，因上书言赵高之短曰：“臣闻之，臣疑其君，无不危国；妾疑其夫，无不危家。今有大臣於陛下擅利擅害，与陛下无异，此甚不便。昔者司城子罕相宋，身行刑罚，以威行之，期年遂劫其君。田常为简公臣，爵列无敌於国，私家之富与公家均，布惠施德，下得百姓，上得群臣，阴取齐国，杀宰予於庭，即弑简公於朝，遂有齐国。此天下所明知也。今高有邪佚之志，危反之行，如子罕相宋也；私家之富，若田氏之於齐也。兼行田常、子罕之逆道而劫陛下之威信，其志若韩为韩安相也。陛下不图，臣恐其为变也。”二世曰：“何哉？夫高，故宦人也，然不为安肆志，不以危易心，絜行脩善，自使至此，以忠得进，以信守位，朕实贤之，而君疑之，何也？且朕少失先人，无所识知，不习治民，而君又老，恐与天下绝矣。朕非属赵君，当谁任哉？且赵君为人精廉彊力，下知人情，上能適朕，君其勿疑。”李斯曰：“不然。夫高，故贱人也，无识於理，贪欲无厌，求利不止，列势次主，求欲无穷，臣故曰殆。”二世已前信赵高，恐李斯杀之，乃私告赵高。高曰：“丞相所患者独高，高已死，丞相即欲为田常所为。”於是二世曰：“其以李斯属郎中令！”</p><p>　　赵高案治李斯。李斯拘执束缚，居囹圄中，仰天而叹曰：“嗟乎，悲夫！不道之君，何可为计哉！昔者桀杀关龙逢，纣杀王子比干，吴王夫差杀伍子胥。此三臣者，岂不忠哉，然而不免於死，身死而所忠者非也。今吾智不及三子，而二世之无道过於桀、纣、夫差，吾以忠死，宜矣。且二世之治岂不乱哉！日者夷其兄弟而自立也，杀忠臣而贵贱人，作为阿房之宫，赋敛天下。吾非不谏也，而不吾听也。凡古圣王，饮食有节，车器有数，宫室有度，出令造事，加费而无益於民利者禁，故能长久治安。今行逆於昆弟，不顾其咎；侵杀忠臣，不思其殃；大为宫室，厚赋天下，不爱其费：三者已行，天下不听。今反者已有天下之半矣，而心尚未寤也，而以赵高为佐，吾必见寇至咸阳，麋鹿游於朝也。”</p><p>　　於是二世乃使高案丞相狱，治罪，责斯与子由谋反状，皆收捕宗族宾客。赵高治斯，榜掠千馀，不胜痛，自诬服。斯所以不死者，自负其辩，有功，实无反心，幸得上书自陈，幸二世之寤而赦之。李斯乃从狱中上书曰：“臣为丞相治民，三十馀年矣。逮秦地之陕隘。先王之时秦地不过千里，兵数十万。臣尽薄材，谨奉法令，阴行谋臣，资之金玉，使游说诸侯，阴脩甲兵，饰政教，官斗士，尊功臣，盛其爵禄，故终以胁韩弱魏，破燕、赵，夷齐、楚，卒兼六国，虏其王，立秦为天子。罪一矣。地不广，又北逐胡、貉，南定百越，以见秦之彊。罪二矣。尊大臣，盛其爵位，以固其亲。罪三矣。立社稷，脩宗庙，以明主之贤。罪四矣。更剋画，平斗斛度量文章，布之天下，以树秦之名。罪五矣。治驰道，兴游观，以见主之得意。罪六矣。缓刑罚，薄赋敛，以遂主得众之心，万民戴主，死而不忘。罪七矣。若斯之为臣者，罪足以死固久矣。上幸尽其能力，乃得至今，原陛下察之！”书上，赵高使吏弃去不奏，曰：“囚安得上书！”</p><p>　　赵高使其客十馀辈诈为御史、谒者、侍中，更往覆讯斯。斯更以其实对，辄使人复榜之。後二世使人验斯，斯以为如前，终不敢更言，辞服。奏当上，二世喜曰：“微赵君，几为丞相所卖。”及二世所使案三川之守至，则项梁已击杀之。使者来，会丞相下吏，赵高皆妄为反辞。</p><p>　　二世二年七月，具斯五刑，论腰斩咸阳市。斯出狱，与其中子俱执，顾谓其中子曰：“吾欲与若复牵黄犬俱出上蔡东门逐狡兔，岂可得乎！”遂父子相哭，而夷三族。</p><p>　　李斯已死，二世拜赵高为中丞相，事无大小辄决於高。高自知权重，乃献鹿，谓之马。二世问左右：“此乃鹿也？”左右皆曰“马也”。二世惊，自以为惑，乃召太卜，令卦之，太卜曰：“陛下春秋郊祀，奉宗庙鬼神，斋戒不明，故至于此。可依盛德而明斋戒。”於是乃入上林斋戒。日游弋猎，有行人入上林中，二世自射杀之。赵高教其女婿咸阳令阎乐劾不知何人贼杀人移上林。高乃谏二世曰：“天子无故贼杀不辜人，此上帝之禁也，鬼神不享，天且降殃，当远避宫以禳之。”二世乃出居望夷之宫。</p><p>　　留三日，赵高诈诏卫士，令士皆素服持兵内乡，入告二世曰：“山东群盗兵大至！”二世上观而见之，恐惧，高既因劫令自杀。引玺而佩之，左右百官莫从；上殿，殿欲坏者三。高自知天弗与，群臣弗许，乃召始皇弟，授之玺。</p><p>　　子婴既位，患之，乃称疾不听事，与宦者韩谈及其子谋杀高。高上谒，请病，因召入，令韩谈刺杀之，夷其三族。</p><p>　　子婴立三月，沛公兵从武关入，至咸阳，群臣百官皆畔，不適。子婴与妻子自系其颈以组，降轵道旁。沛公因以属吏。项王至而斩之。遂以亡天下。</p><p>　　太史公曰：李斯以闾阎历诸侯，入事秦，因以瑕衅，以辅始皇，卒成帝业，斯为三公，可谓尊用矣。斯知六之归，不务明政以补主上之缺，持爵禄之重，阿顺苟合，严威酷刑，听高邪说，废適立庶。诸侯已畔，斯乃欲谏争，不亦末乎！人皆以斯极忠而被五刑死，察其本，乃与俗议之异。不然，斯之功且与周、召列矣。</p><p>　　鼠在所居，人固择地。斯效智力，功立名遂。置酒咸阳，人臣极位。一夫诳惑，变易神器。国丧身诛，本同末异。</p><h2 id="【译文】"><a href="#【译文】" class="headerlink" title="【译文】"></a>【译文】</h2><p>　　李斯是楚国上蔡人。他年轻的时候，曾在郡里当小吏，看到办公处附近厕所里的老鼠在吃脏东西，每逢有人或狗走来时，就受惊逃跑。后来李斯又走进粮仓，看到粮仓中的老鼠，吃的是屯积的粟米，住在大屋子之下，更不用担心人或狗惊扰。于是李斯就慨然叹息道：“一个人有出息还是没出息，就如同老鼠一样，是由自己所处的环境决定的。”</p><p>　　于是李斯就跟荀子学习帝王治理天下的学问。学业完成之后，李斯估量楚王是不值得侍奉的，而六国国势都已衰弱，没有为它们建功立业的希望，就想西行到秦国去。在临行之前，向荀子辞行说：“我听说一个人若遇到机会，千万不可松懈错过。如今各诸侯国都争取时机，游说之士掌握实权。现在秦王想吞并各国，称帝治理天下，这正是平民出身的政治活动家和游说之士奔走四方、施展抱负的好时机。地位卑贱，而不想着去求取功名富贵，就如同禽兽一般，只等看到现成的肉才想去吃，白白长了一副人的面孔勉强直立行走。所以最大的耻辱莫过于卑贱，最大悲哀莫过于贫穷。长期处于卑贱的地位和贫困的环境之中，却还要非难社会、厌恶功名利禄，标谤自己与世无争，这不是士子的本愿。所以我就要到西方去游说秦王了。”</p><p>　　到秦国之后，正赶上秦庄襄王去世，李斯就请求充当秦相国文信侯吕不韦的舍人；吕不韦很赏识他，任命他为郎官。这样就使得李斯有游说的机会，他对秦王说：“平庸的人往往失去时机，而成大功业的人就在于他能利用机会并能下狠心。从前秦穆公虽称霸天下，但最终没有东进吞并山东六国，这是什么原因呢？原因在于诸侯的人数还多，周朝的德望也没有衰落，因此五霸交替兴起，相继推尊周朝。自从秦孝公以来，周朝卑弱衰微，诸侯之间互相兼并，函谷关以东地区化为六国，秦国乘胜奴役诸侯已经六代。现如今诸侯服从秦国就如同郡县服从朝廷一样。以秦国的强大，大王的贤明，就象扫除灶上的灰尘一样，足以扫平诸侯，成就帝业，使天下统一，这是万世难逢的一个最好时机。倘若现在懈怠而不抓紧此事的话，等到诸侯再强盛起来，又订立合纵的盟约，虽然有黄帝一样的贤明，也不能吞并它们了。”秦始皇就任命李斯为长史，听从了他的计谋，暗中派遣谋士带着金玉珍宝去各国游说。对各国著名人物能收买的，就多送礼物加以收买；不能收买的，就用利剑把他们杀掉。这些都是离间诸侯国君臣关系的计策，接着，秦王就派良将随后攻打。秦王任命李斯为客卿。</p><p>　　恰在此时韩国人郑国以修筑渠道为名，来到秦国做间谍，不久被发觉。秦国的王族和大臣们都对秦王说：“从各诸侯国来奉事秦王的人，大都是为他们的国君游说，以离间秦国而已，请求大王把客卿一概驱逐。”李斯也在计划好的要驱逐的客卿之列。于是李斯就上书说：<br>　　听说官员们议论要驱逐客卿，我私下认为这是错误的。从前秦穆公招揽贤才，从西戎找到由余，从东边楚国的苑地得到了百里奚，从宋国迎来了蹇（ｊｉǎｎ，减）叔，从晋国招来了丕豹、公孙友。这五个人都不生在秦国，而秦穆公重用他们，吞并了二十多个国家，也就得以在西戎称霸。秦孝公采用商鞅的新法，移风易俗，人民因此殷实兴盛，国家因此富足强大，百姓们愿意为国家效力，其它国家也诚心归顺，击败了楚国、魏国的军队，功取了千里土地，至今政治安定，国家强盛。秦惠王用张仪的计策，功取了三川地区，向西又吞并了巴、蜀，向北占领了上郡，向南攻占了汉中，囊括九夷，控制鄢、郢，在东面占据了险要的成皋，割取了肥沃的土地，并进一步瓦解了六国的合纵联盟，使他们面向西方，奉事秦国，功业一直延续到今天。秦昭王得范睢（ｓｕī，尿），废黜穰侯，驱逐华阳君，使公室强大，杜绝了私门权贵的势力，像蚕吃桑叶一般，逐渐吞并诸侯的土地，终于使秦国奠定了统一天下大业的基础。这四位君主，都是依靠了别国客卿的力量。由此看来，客卿有哪一点对不起秦国呢？假使这四位君主拒绝客卿而不接受他们，疏远士人而不重用，这就使秦国既无富足之实，又无强大之名。</p><p>　　现在皇上您罗致昆山的美玉，得到随侯之珠、和氏之璧，挂着明月珠，佩着太阿剑，驾着纤离马，竖着翠凤旗，摆着灵鼍鼓。以上这些宝物，并没有一样是秦国出产的，但陛下您非常喜爱它们，这是为什么呢？若是一定要秦国所产然后才使用的话，那么夜光之璧就不能用来装饰朝廷，犀角象牙制品就不能为您所赏玩，郑国、卫国的美女也不能列于您的后宫之中，（ｊｕé ｔí，决提）良马也不能填满您的马棚。江南的金锡也不该用，西蜀的丹青也不应用来当颜料。您用来装饰后宫、充当姬妾、赏心乐意、怡目悦耳的，一定要出自秦国然后才用的话，那么，用宛地珍珠装饰的簪子，玑珠镶嵌的耳坠，东阿白绢缝制的衣服、刺绣华美的装饰品，就不能进献在您的面前，那时髦而又高雅，漂亮而又文静的赵国女子不能侍立在您的身边。而那些敲打瓦坛瓦罐、弹着秦筝、拍着大腿、呜呜叫喊以满足欣赏要求的，这才是正宗的秦国音乐。象《郑》、《卫》、《桑间》、《昭》、《虞》、《武》、《象》这些乐曲，则是其他国家的音乐。现在您抛弃敲打瓦坛瓦罐这一套秦国音乐而听《郑》、《卫》之声，不去听弹筝而欣赏《昭》、《虞》之曲，这是什么原因呢？说穿了，只不过是图眼前快乐，以满足耳目观赏需求而已。而现在您用人却不是这样，不问此人能用不能用，也不问是非曲直，只要不是秦国人一律辞退，只要是客卿一律驱逐。这样看来，陛下所看重的是美女、音乐、珍珠、宝玉，所轻视的是人才了。这并不是统一天下、制服诸侯的方法。</p><p>　　我听说过土地广阔所产粮食就丰富，国家广大人口就众多，军队强盛士兵就勇敢。所以泰山不排斥泥土，才能堆积得那样高大；河海不挑剔细小的溪流，才能变得如此深广；而成就王业的人不抛弃广大民众，才能显出他的盛德。所以地无论东南西北，民众不分这国那国，一年四季五谷丰登，鬼神赐予福泽，这就是五帝三王无敌于天下的原因所在。而现在陛下您抛弃了百姓来帮助敌国，排斥宾客而使他们为其他诸侯国建立功业，使天下有才之士后退而不敢西行，停住脚步而不敢进入秦国，这正是人们所说的“借武器给敌人，送粮食给盗贼”啊！</p><p>　　非秦国出产的物品，值得珍视的很多；非秦国出生的士人，愿意效忠的也不少。现在您驱逐客卿来资助敌国，损害百姓以帮助仇人，在内部削弱自己而在外面又和诸侯结下怨恨，这样下去，要使国家没有危险，是不可能的。</p><p>　　于是，秦王就废除了逐客令，恢复了李斯的官职，终于采用了他的计谋，他的官位也升到廷尉之职。二十多年，终于统一了天下，尊称国王为“皇帝”。皇帝又任命李斯为丞相。并拆平了各国郡县的城墙，销毁了各地的武器，表示不再使用。使秦国没有一寸分封的土地，也不立皇帝的儿子、兄弟为王，更不把功臣封为诸侯，以便使国家从此之后再也没有战争的祸患。</p><p>　　秦始皇三十四年（前213），在咸阳宫设宴招待群臣，博士仆射周青臣等人称颂秦始皇的武威盛德。齐人淳于越劝谏道：“我听说殷商和周朝统治达一千多年，分封子弟及功臣做为膀臂辅翼。而现在陛下您虽统一天下，但子弟却还是平民百姓，若一旦出现了田常、六卿夺权篡位的祸患，在朝中又没有强有力的辅佐之臣，靠谁来相救呢？办事不学习古代经验而长期统治的朝代，我还没有听说过。现在周青臣等人又当面阿谀奉承以加重您的错误，不是忠臣。”始皇把这种议论交给李斯处理，李斯认为这种论点是荒谬的，因此废弃不用，就上书给皇帝说：“古时候天下分散败乱，彼此之间互不服从，所以才诸侯并起，一般舆论都称道古代以否定当代，装点一些虚夸不实的文辞来扰乱社会的实际，人们都认为自己的一派学问最好，以否定皇帝的政策法令。现在陛下统一了天下，分辨了黑白是非，使海内共同尊崇皇帝一人；而诸子百家各个学派却在一起任意批评朝廷的法令制度，听说朝廷令下，立刻就以自己学派的观点来议论它，回家便心中不满，出门则在街头巷尾纷纷议论，以批评君主来博得名声，认为和朝廷不一样便是本领高，并带领下层群众来制造诽谤。这样下去而不加以禁止的话，上面君主的权力威望就要下降，下面私人的帮派也要形成。因此，还是以禁止为好。我请求把人们收藏的《》、《书》和诸子百家的著作，都一概扫除干净。命令下达三十天之后，若还有人不服从，判处黥刑并罚做筑城苦役。不在清除之列的，是医药、占卜、种植等类书籍。若有想学习法令的，以官吏为老师。”秦始皇批准了他的建议，没收了《诗经》、《尚书》和诸子百家的著作，以便使人民愚昧无知，使天下人无法用古代之事来批评当前朝廷。修明法制，制定律令，都从秦始皇开始。统一文字，在全国各地修建离宫别馆。第二年，始皇又四出巡视，平定了四方少数民族，这些措施，李斯都出了不少力。</p><p>　　李斯的长子李由担任三川郡守，儿子们娶的是秦国的公主，女儿们嫁的都是秦国的皇族子弟。三川郡守李由请假回咸阳时，李斯在家中设下酒宴，文武百官都前去给李斯敬酒祝贺。门前的车马数以千计。李斯慨然长叹道：“唉呀！我听荀卿说过‘事情不要搞得过了头’。我李斯原是上蔡的平民，街巷里的百姓，皇帝不了解我才能低下，才把我提拔到这样高的地位。现如今做臣子的没有人比我职位更高，可以说是富贵荣华到了极点。然而事物发展的极点就要开始衰落，我还不知道归宿在何方啊！”</p><p>　　秦始皇三十七年（前210）十月，他巡行出游到会稽山，沿海北上，到达琅邪山。丞相李斯和中车府令兼符玺令赵高都随同前往。秦始皇有二十多个儿子，长子扶苏因多次直言劝谏皇帝，始皇派他到上郡监督军队，蒙恬任将军。小儿子胡亥很受宠爱，要求随行，始皇答应了。其他的儿子都没跟着去。</p><p>　　这一年七月，秦始皇达到沙丘，病的非常严重，命令赵高写好诏书给公子扶苏说：“把军队交给蒙恬，赶快到咸阳参加葬礼，然后安葬。”书信都已封好，但还没交给使者，秦始皇就去世了。书信和印玺都在赵高手里，只有小儿子胡亥，丞相李斯和赵高以及五六个亲信宦官知道始皇去世，其余群臣都不知道。李斯认为皇帝在外面去世，又没正式确立太子，所以保守秘密，把始皇的尸体安放在一辆既能保温又能通风凉爽的车子中，百官奏事及进献饮食还像往常一样，宦官就假托皇帝从车中批准百官上奏的事。</p><p>　　赵高因此扣留了始皇赐给扶苏的诏书，而对公子胡亥说：“皇帝去世了，没有诏书封诸子为王而只赐给长子扶苏一封诏书。长子到后，就登位作皇帝，而你却连尺寸的封地也没有，这怎么办呢？”胡亥说：“本来就是这样。我听说过，圣明的君主最了解臣子，圣明的父亲最了解儿子。父亲临终既未下命令分封诸子，那还有什么可说的呢？”赵高说：“并非如此。当今天下的大权，无论谁的生死存亡，都在你、我和李斯手里掌握着啊！希望你好好考虑考虑。更何况驾驭群臣和向人称臣，统治别人和被人统治，难道可以同日而语吗！”胡亥说：“废除兄长而立弟弟，这是不义；不服从父亲的诏命而惧怕死亡，这是不孝；自己才能浅薄，依靠别人的帮助而勉强登，这是无能：这三件事都是大逆不道的，天下人也不服从，我自身遭受祸殃，国家还会灭亡。”赵高说：“我听说过商汤、周武杀死他们的君主，天下人都称赞他们行为符合道义，不能算是不忠。卫君杀死他的父亲，而卫国人民称颂他的功德，孔子记载了这件事，不能算是不孝。更何况办大事不能拘于小节，行大德也用不着再三谦让，乡间的习俗各有所宜，百官的工作方式也各不一样。所以顾忌小事而忘了大事，日后必生祸害；关键时刻犹豫不决，将来一定要后悔。果断而大胆地去做，连鬼神都要回避，将来一定会成功。希望你按我说的去做。”胡亥长叹一声说道：“现在皇帝去世还未发丧，丧礼也未结束，怎么好用这件事来求丞相呢？”赵高说：“时光啊时光，短暂得来不及谋划！我就像携带干粮赶着快马赶路一样，唯恐耽误了时机！”</p><p>　　胡亥同意了赵高的话以后，赵高说：“不和丞相商议，恐怕事情还不能成功，我希望能替你与丞相商议。”赵高就对丞相李斯说道：“始皇去世，赐给长子扶苏诏书，命他到咸阳参加丧礼，并立为继承人。诏书未送，皇帝去世，还没人知道此事。皇帝赐给长子的诏书和符玺都在胡亥手里，立谁为太子只在于你我的一句话而已。你看这事该怎么办？”李斯说：“你怎么能说出这种亡国的话呢！这不是做为人臣所应当议论的事！”赵高说：“您自己估计一下，和蒙恬相比，谁有本事？谁的功劳更高？谁更谋略深远而不失误？天下百姓更拥戴谁？与长子扶苏的关系谁更好？”李斯说：“在这五个方面我都不如蒙恬，但您为什么这样苛求于我呢？”赵高说：“我本来就是一个宦官的奴仆，有幸能凭熟悉狱法文书进入秦宫，管事二十多年，还未曾见过被秦王罢免的丞相功臣有封爵而又传给下一代的，结果都是以被杀告终。皇帝有二十多个儿子，这些都是您所知道的。长子扶苏刚毅而且勇武，信任人而又善于激励士人，即位之后一定要用蒙恬担任丞相，很显然，您最终也是不能怀揣通侯之印退职还乡了。我受皇帝之命教育胡亥，让他学法律已经有好几年了，还没见过他有什么错误。他慈悲仁爱，诚实厚道，轻视钱财，尊重士人，心里聪明但不善言辞，竭尽礼节尊重贤士，在秦始皇的儿子中，没人能赶得上他，可以立为继承人。您考虑一下再决定。”李斯说：“您还是该干什么就干什么去吧！我李斯只执行皇帝的遗诏，自己的命运听从上天的安排，有什么可考虑决定的呢？”赵高说：“看来平安却可能是危险的，危险又可能是平安的。在安危面前不早做决定，又怎么能算使圣明的人呢？”李斯说：“我李斯本是上蔡街巷里的平民百姓，承蒙皇帝提拔，让我担任丞相，封为通侯，子孙都得到尊贵的地位和优厚的待遇，所以皇帝才把国家安危存亡的重任交给了我，我又怎么能辜负了他的重托呢？忠臣不因怕死而苛且从事，孝子不因过分操劳而损害健康，做臣子的各守各的职分而已。请您不要再说了，不要让我李斯也跟着犯罪。”赵高说：“我听说圣人并不循规蹈矩，而是适应变化，顺从潮流，看到苗头就能预知根本，看到动向就能预知归宿。而事物本来就是如此，哪里有什么一成不变的道理呢！现如今天下的权力和命运都掌握在胡亥手里，我赵高能猜出他的心志。更何况从外部来制服内部就是逆乱，从下面来制服上面就是反叛。所以秋霜一降花草随之凋落，冰消雪化就万物更生，这是自然界必然的结果。您怎么连这些都没看到呢？”李斯说：“我听说晋代换太子，三代不安宁；齐桓公兄弟争夺王位，哥哥被杀死；商纣杀死亲戚，又不听从臣下劝谏，都城夷为废墟，随着危及社稷；这三件事都违背天意，所以才落得宗庙没人祭祀。我李斯还是人啊，怎么能参与这些阴谋呢！”赵高说：“上下齐心协力，事业可以长久；内外配合如一，就不会有什么差错。您听从我的计策，就会长保封侯，并永世相传，一定有仙人王子乔、赤松子那样的长寿，孔子、墨子那样的智慧。现在放弃这个机会而不听从我的意见，一定会祸及子孙，足以令人心寒。善于为人处世，相机而动的人是能够转祸为福的，您想怎么办呢？”李斯仰天长叹，挥泪叹息道：“唉呀！偏偏遭逢乱世，既然已经不能以死尽忠了，将向何处寄托我的命运呢！”于是李斯就依从了赵高。赵高便回报胡亥说：“我是奉太子您的命令去通知丞相李斯的，他怎么敢不服从命令呢！”</p><p>　　于是他们就一同商议，伪造了秦始皇给丞相李斯的诏书，立胡亥为太子。又伪造了一份赐给长子扶苏的诏书说：“我巡视天下，祈祷祭祀各地名山的神灵以求长寿。现在扶苏和将军蒙恬带领几十万军队驻守边疆，已经十几年了，不能向前进军，而士兵伤亡很多，没有立下半点功劳，反而多次上书直言诽谤我的所做所为，因不能解职回京当太子，日夜怨恨不满。扶苏做为人子而不孝顺，赐剑自杀！将军蒙恬和扶苏一同在外，不纠正他的错误，也应知道他的谋划。做为人臣而不尽忠，一同赐命自杀，把军队交给副将王离。”用皇帝的玉玺把诏书封好，让胡亥的门客捧着诏书到上郡交给扶苏。</p><p>　　使者到达之后，打开诏书，扶苏就哭泣起来，进入内室想自杀。蒙恬阻止扶苏说：“皇上在外，没有立下太子，派我带领三十万大军守卫边疆，公子担任监军，这是天下的重任啊。现在只有一个使者来，您就立刻自杀，怎能知道其中没有虚假呢？希望您再请示一下，有了回答之后再死也不晚。”使者连连催促。扶苏为人仁爱，对蒙恬说：“父亲命儿子死去，还要请示什么！”立刻自杀而死。蒙恬不肯自杀，使者立刻把他交付法吏，关押在阳周。</p><p>　　使者回来汇报，胡亥、李斯、赵高都非常高兴。到咸阳后发布丧事，太子胡亥立为二世皇帝。任命赵高担任郎中令，常在宫中服侍皇帝，掌握大权。</p><p>　　秦二世在宫中闲居无事，就把赵高叫来一同商议，对赵高说：“人活在世上，就如同驾驭着六匹骏马从缝隙前飞过一样短暂。我既然已经统治天下了，想全部满足耳目方面的一切欲望，享受尽我所能想到的一切乐趣，使国家安宁，百姓欢欣，永保江山，以享天年，这种想法能行得通吗？”赵高说：“这对贤明君主来说是能够做到的，而对昏乱君主来说是应禁忌的。我冒昧地说一句不怕杀头的话，请您稍加注意一点。对于沙丘的密谋策划，各位公子和大臣都有怀疑，而这些公子都是您的兄长，这些大臣都是先帝所安置。现在陛下您刚刚登皇位，这些人都心中怨恨不服，唯怕他们要闹事。更何且蒙恬虽已死去，蒙毅还在外面带兵，我之所以提心吊胆，只是害怕会有不好的结果。陛下您又怎么能为此而行乐呢？”二世说：“这可怎么办呢？”赵高说：“实行严峻的法律和残酷的刑罚，把犯法的和受的牵连的人统统杀死，直至灭族，杀死当朝大臣而疏远您的骨肉兄弟，让原来贫穷的人富有起来，让原来卑贱的人高贵起来。全部铲除先帝的旧臣，重新任命您信任的人并让他们在您的身边。这样就使他们从心底对您感恩戴德，根除了祸害而杜绝了奸谋，群臣上下没有人不得到您的恩泽，承受您的厚德，陛下您就可以高枕无忧，纵情享受了。没有比这更好的主意了。”二世认为赵高的话是对的，就重新修订法律。于是群臣和公子们有罪，就交付赵高，命他审讯法办。杀死了大臣蒙毅等人，十个公子在咸阳街头斩首示众，十二个公主也在杜县被分裂肢体处死，财物没收归皇帝所有，连带一同治罪的不计其数。</p><p>　　公子高想外出逃命，怕被满门抄斩，就上书说：“先帝活着的时候，我进宫就给吃的东西，出宫就让乘车。皇帝内府中的衣服，先帝赐给我；宫中马棚里的宝马，先帝也赐给我。我本该与先帝一起死去而没做到，这是我做人子的不孝，做人臣的不忠。而不忠的人没有理由活在世上，请允许我随先帝死去，希望能把我埋在骊山脚下。只求皇上哀怜答应我。”此书上奏以后，胡亥非常高兴，叫来赵高并把此书指示给他看，说：“这可以说是窘急无奈了吧？”赵高说：“在大臣们整天担心自己死亡还来不及的时候，怎么能图谋造反呢！”胡亥答应了公子高的请求，赐给他十万钱予以安葬。</p><p>　　当时的法令刑罚一天比一天残酷，群臣上下人人自危，想反叛的人很多。二世又建造阿房宫，修筑直道、驰道，赋税越来越重，兵役劳役没完没了。于是从楚地征来戍边的士卒陈胜、吴广等人就起来造反，起兵于崤山以东，英雄豪杰蜂拥而起，自立为侯王，反叛秦朝，他们的军队一直攻到鸿门才退去。李斯多次想找机会进谏，但二世不允许。二世反倒责备李斯说：“我有个看法，是从韩非子那里听来的，他说‘尧统治天下，殿堂只不过三尺高，柞木椽子直接使用而不加砍削，茅草做屋顶而不加修剪，即使是旅店中住宿的条件也不会比这更艰苦的了。冬天穿鹿皮袄，夏天穿麻布衣，粗米作饭，野菜作汤，用土罐吃饭，用土钵喝水，即使是看门人的生活也不会比这更清寒的了。夏禹凿开龙门，开通大夏水道，又疏通多条河流，曲折地筑起多道堤防，决积水引导入海，大腿上没了白肉，小腿上没了汗毛，手掌脚底都结满了厚茧，面孔漆黑，最终还累死在外，埋葬在会稽山上，即使是奴隶的劳苦也不会比这更厉害了’。然而把统治天下看得无尚尊贵的人，其目的难道就是想操心费力，住旅店一样的宿舍，吃看门人吃的食物，干奴隶干的活计吗？这些事都是才能低下的人才努力去干的，并非贤明的人所从事的。那些贤明的人统治天下的时候，只是把天下的一切都拿来满足自己的欲望而已，这正是把统治天下看得无尚尊贵的原因所在。人们所说的贤明之人，一定能安定天下、治理万民，倘若连给自己捞好处都不会，又怎么能治理天下呢！所以我才想姿心广欲，永远享有天下而没有祸害。这该怎么办呢？”李斯的儿子李由任三川郡守，群起造反的吴广等人向西攻占地盘，任意往来，李由不能阻止。章邯在击败并驱逐了吴广等人的军队之后，派到三川去调查的使者一个接着一个，并责备李斯身居三公之位，为何让盗贼猖狂到这种地步。李斯很是害怕，又把爵位俸禄看得很重，不知如何是好，就曲意阿顺二世的心意，想求得宽容，便上书回答二世说：<br>　　贤明的君主，必将是能够全面掌握为君之道，又对下行使督责的统治术的君主。对下严加督责，则臣子们不敢不竭尽全力为君主效命。这样，君主和臣子的职分一经确定，上下关系的准则也明确了，那么天下不论是有才德的还是没有才德的，都不敢不竭尽全力为君主效命了。因此君主才能专制天下而不受任何约束，能享尽达到极致的乐趣。贤明的君主啊，又怎能看不清这一点呢！</p><p>　　所以申不害先生说：“占有天下要是还不懂得纵情姿欲，这就叫把天下当成自己的镣铐”这样的话，没有别的意思，只是讲不督责臣下，而自己反辛辛苦苦为天下百姓操劳，像尧和禹那样，所以称之为“镣铐”。不能学习申不害、韩非的高明法术，推行督责措施，一心以天下使自己舒服快乐，而只是白白地操心费力，拼命为百姓干事，那就是百姓的奴仆，并不是统治天下的帝王，这有什么值得尊贵的呢！让别人为自己献身，就自己尊贵而别人卑贱；让自己为别人献身，就自己卑贱而别人尊贵。所以献身的人卑贱，接受献身的人尊贵，从古到今，没有不是这样的。自古以来之所以尊重贤人，是因为受尊敬的人自己尊贵；之所以讨厌不肖的人，是因为不肖的人自己卑贱。而尧、禹是为天下献身的人，因袭世俗的评价而予以尊重，这也就失去了所以尊贤的用心了，这可说是绝大的错误。说尧、禹把天下当作自己的“镣铐”，不也是很合适的吗？这是不能督责的过错。</p><p>　　所以韩非先生说“慈爱的母亲会养出败家的儿子，而严厉的主人家中没有强悍的奴仆”，是什么原因呢？这是由于能严加惩罚的必然结果。所以商鞅的新法规定，在道路上撒灰的人就要判刑。撒灰于道是轻罪，而加之以刑是重罚。只有贤明的君主才能严厉地督责轻罪。轻罪尚且严厉督责，何况犯有重罪呢？所以百姓不敢犯法。因此韩非先生又说：“对几尺绸布，一般人见到就会顺手拿走，百镒美好的黄金，盗跖不会夺取”，并不因为常人贪心严重，几尺绸布价值极高，盗跖利欲淡泊；也不是因为盗跖行为高尚，轻视百镒黄金的重利。原因是一旦夺取，随手就要受刑，所以盗跖不敢夺取白镒黄金；若是不坚决施行刑罚的话，那么一般人也就不会放弃几尺绸布。因此五丈高的城墙，楼季不敢轻易冒犯；泰山高达百仞，而跛脚的牧羊人却敢在上面放牧。难道楼季把攀越五丈高的城墙看得很难，而跛脚的牧羊人登上百仞高的泰山看得很容易吗？这是因为陡峭和平缓，两者形势不同。圣明的君主之所以能久居尊位，长掌大权，独自垄断天下利益，其原因并不在于他们有什么特殊的办法，而是在于他们能够独揽大权，精于督责，对犯法的人一定严加惩处，所以天下人不敢违犯。现在不制订防止犯罪的措施，去仿效慈母养成败家子的作法，那就太不了解前代圣哲的论说了。不能实行圣人治理天下的方法，除去给天下当奴仆还能干什么呢？这不是太令人悲伤的事吗！</p><p>　　更何况节俭仁义的人在朝中任职，那荒诞放肆的乐趣就得中止；规劝陈说，高谈道理的臣子在身边干预，放肆无忌的念头就要收敛；烈士死节的行为受到世人的推崇，纵情享受的娱乐就要放弃。所以圣明的君主能排斥这三种人，而独掌统治大权以驾驭言听计从的臣子，建立严明的法制，所以自身尊贵而权势威重。所有的贤明君主，都能拂逆世风、扭转民俗，废弃他所厌恶的，树立他所喜欢的，因此在他活着的时候才有尊贵的威势，在他死后才有贤明的谥号。正因为这样，贤明的君主才集权专制，使权力不落入臣下手中，然后才能斩断仁义之路，堵住游说之口，困厄烈士的死节行为，闭目塞听，任凭自己独断专行，这样在外就不致被仁义节烈之士的行为所动摇，在内也不会被劝谏争论所迷惑。因此才能卓荦独行逞其为所欲为的心志，而没有人敢反抗。像这样，然后才可以说是了解了申不害、韩非的统治术，学会了商鞅的法制。法制和统治术都学好而明了了，天下还会大乱，这样的事我还没听说过。所以，有人说：“帝王的统治术是简约易行的。”只有贤明君主才能这么做。像这样，才可以说是真正实行了督责，臣下才能没有离异之心，天下才能安定，天下安定才能有君主的尊严，君主有了尊严才能使督责严格执行，督责严格执行后君主的欲望才能得到满足，满足之后国家才能富强，国家富强了君主才能享受得更多。所以督责之术一确立，君主就任何欲望都能满足了。群臣百姓想补救自己的过失都来不及，哪里还敢图谋造反？像这样，就可以说是掌握了帝王的统治术，也可以说了解了驾驭群臣的方法。即使申不害、韩非复生，也不能超过了。</p><p>　　这封答书上奏之后，二世看了非常高兴。于是更加严厉地实行督责，向百姓收税越多越是贤明的官吏。二世说：“像这样才可称得上善于督责了。”路上的行人，有一半是犯人，在街市上每天都堆积着刚杀死的人的尸体，而且杀人越多的越是忠臣。二世说：“像这样才可称的上实行督责了。”</p><p>　　起初，赵高在担任郎中令时，杀死的人和为了报私仇而陷害的人非常多，唯恐大臣们在入朝奏事时向二世揭露他，就劝说二世道：“天子之所以尊贵，就在于大臣只能听到他的声音，而不能看到他的面容，所以才自称为‘朕’。况且陛下还很年轻，未必什么事情都懂，现在坐在朝廷上，若惩罚和奖励有不妥当的地方，就会把自己的短处暴露给大臣，这也就不能向天下人显示您的圣明了。陛下不妨深居宫中，和我及熟悉法律的侍中在一起，等待大臣把公事呈奏上来，等公文一旦呈上，我们就可以研究决定。这样，大臣们就不敢把疑难的事情报上来，天下的人也就称您为圣明之主了。”二世听从了赵高的主意，就不再坐在朝廷上接见大臣，深居在宫禁之中。赵高总在皇帝身边侍奉办事，一切公务都由赵高决定。</p><p>　　赵高听说李斯对此有不满的言论，就找到李斯说：“函谷关以东地区盗贼很多，而现在皇上却加紧遣发劳役修建阿房宫，搜集狗马等没用的玩物。我想劝谏，但我的地位卑贱。可实在是您丞相的事，为什么不劝谏呢？”李斯说“确实这样，我早就想说话了。可是现在皇帝不临朝听政，常居深宫之中，我虽然有话想说，又不便让别人传达，想见皇帝却又没有机会。”赵高对他说：“您若真能劝谏的话，请允许我替你打听，只要皇上一有空闲，我立刻通知你。”于是赵高趁二世在闲居娱乐，美女在前的时候，派人告丞相说：“皇上正有空闲，可以进宫奏事。”丞相李斯就到宫门求见，接连三次都是这样。二世非常生气地说：“我平时空闲的日子很多，丞相都不来。每当我在寝室休息的时候，丞相就来请示奏事。丞相是瞧不起我呢？还是以为我鄙陋？”赵高又乘机说：“您这样说话可太危险了！沙丘的密谋，丞相是参与了的。现在陛下您已即位皇帝，而丞相的地位却没有提高，显然他的意思是想割地封王呀！如果皇帝您不问我，我不敢说。丞相的大儿子李由担任三川郡守，楚地强盗陈胜等人都是丞相故乡邻县的人，因此他们才敢公开横行，经过三川时，李由只是守城而不出击。我曾听说他们之间有书信来往，但还没有调查清楚，所以没敢向陛下报告。更何况丞相在外，权力比陛下还大。”二世认为赵高的话没错，想法办丞相，但但又担心情况不实，就派人去调查三川郡守与盗贼勾结的具体情况。李斯知道了这个消息。</p><p>　　当时二世正在甘泉宫观看摔跤和滑稽戏表演。李斯不能进见，就上书揭发赵高的短处说：“我听说，臣子比同君主，没有不危害国家的；妾比同丈夫，没有不危害家庭的。现在有的大臣擅自掌握赏罚大权，和您没有什么不同，这是非常不妥当的。从前司城子罕当宋国丞相，自己掌握刑罚大权，用威权行事，一年之后就劫持了宋国国君，篡夺了王位。田常当齐简公的臣子，爵位高到全国无人与他相匹敌，自家的财富和公家的一样多，他行恩施惠，下得百姓的爱戴，上得群臣的拥护，暗中窃取了齐国的权力，在厅堂里杀死了宰予，又在朝廷上杀死齐简公，这样，就完全控制了齐国。这是天下人明明知道的。现在赵高有邪辟过分的心志和险诈叛逆的行为，就如同子罕当宋国丞相时的所作所为；私人占有的财富，也正像田常在齐国那样多。他一并使用田常、子罕的叛逆方式而又窃取了陛下您的威信，他志向就如同韩玘当韩安的宰相时一样。陛下你不早打算，我担心他迟早会发动叛乱啊。”二世说：“这是什么话？赵高原本是个宦官，但他不因处境安逸就为所欲为，也不因处境危险就改变忠心，他品行廉洁，一心向善，靠自己的努力才得到今天的地位，因忠心耿耿才被提拔，因讲信义才保住禄位，我确实认为他是贤才，而你怀疑他，这是什么原因呢？再加上我年纪轻轻就失去了父亲，没什么知识，不知如何管理百姓，而你年纪又大了，我担心与天下人隔绝了。我如果不把国事托付给赵高，还应当用谁呢？况且赵先生为人精明廉洁，竭尽其力，下能了解民情，上能顺适我的心意，请你不要怀疑。”李斯说：“并非如此。赵高从前是卑贱的人，并不懂道理，贪得无厌，求利不止，地位权势仅次于陛下，但他追求地位和权势的欲望没有止境，所以我说是很危险的。”二世早上已相信了赵高，担心李斯杀掉他，就暗中把这些话告诉了赵高。赵高说：“丞相所忧虑的只有我赵高，我死之后，丞相就可以干田常所干的那些事了。”于是二世说：“就把李斯交给你这郎中令查办吧！”</p><p>　　赵高查办李斯。李斯被捕后并套上刑具，关在监狱中，仰天长叹道：“唉呀！可悲啊！无道的昏君，怎么能为他出谋划策呢！从前夏桀杀死关龙逢，商纣杀死王子比干，吴王夫差杀死伍子胥。这三个大臣，难道不忠吗！然而免不了一死，他们虽然尽忠而死，只可 惜忠非其人。现在我的智慧赶不上这三个人，而二世的暴虐无道超过了桀、纣、夫差，我因尽忠而死，也是应该的呀。况且二世治国不是胡搞么！不久前杀死了自己的兄弟而自立为皇帝，又杀害忠良，重用低贱的人，修建阿房宫，对天下百姓横征暴敛。并不是我不劝谏，而是他不听我的呀。凡是古代圣明的帝王饮食都有一定的节制，车马器物有一定的数量，宫殿都有一定的限度，颁布命令和办事情，增加费用而不利于百姓的一律禁止，所以才能长治久安。现在二世对自己的兄弟，施以违反常情常理的残暴手段，不考虑会有什么灾祸，迫害、杀戮忠臣，也不考虑会有什么灾殃；大力修筑宫殿，加重对天下百姓的税收，不吝惜钱财：这三件措施实行之后，天下百姓不服从。现在造反的人已占天下人的一半了，但二世心中还未觉悟，居然任用赵高为辅佐，我一定会看到盗贼攻进咸阳，使朝廷变为麋鹿嬉游的地方。”</p><p>　　于是二世就派赵高审理丞相一案，对他加以惩处，查问李斯和儿子李由谋反的情状，将其宾客和家族全部逮捕。赵高惩治李斯，拷打他一千多下，李斯不能忍受痛苦的折磨，冤屈地招供了。李斯之所以不自杀而死，是他自负能言善辩，又对秦国有大功，确实没有反叛之心，希望能够上书为自己辩护，希望二世能觉悟过来并赦免他。李斯于是在监狱中上书说：“我担任丞相治理百姓，已经三十多年了。我来秦国赶上领土还很狭小。先王的时候，秦国的土地不过千里，士兵不过几十万。我用尽了自己微薄的才能，小心谨慎地执行法令，暗中派遣谋臣，资助他们金银珠宝，让他们到各国游说，暗中准备武装，整顿政治和教化，任用英勇善战的人为官，提高功臣的社会地位，给他们很高的爵位和俸禄，所以终于威胁韩国，削弱魏国，击败了燕国，赵国，削平了齐国、楚国，最后兼并六国，俘获了他们的国王，拥立秦王为天子。这是我的第一条罪状。秦国的疆域并不是不广阔，还要在北方驱逐胡人，貉人，在南方平定百越，以显示秦国的强大。这是我的第二条罪状。尊重大臣，提高他们的爵位，用以巩固他们同秦王的亲密关系。这是我的第三条罪状。建立社稷，修建宗庙，以显示主上的贤明。这是我的第四条罪状。更改尺度衡器上所刻的标志，统一度量衡和文字，颁布天下，以树立秦朝的威名。这是我的第五条罪状。修筑驰道，兴建游观之所，以显示主上志满意得。这是我的第六条罪状。减轻刑罚，减少税收，以满足主上赢得民众的心愿，使万民百姓都拥戴皇帝，至死都不忘记皇帝的恩德。这是我的第七条罪状。像我李斯这样作臣子的，所犯罪状足以处死，本来已经很久了，皇帝希望我竭尽所能，才得以活到今天，希望陛下明察。”奏书呈上之后，赵高让狱吏丢在一边而不上报，说：“囚犯怎能上书！”</p><p>　　赵高派他的门客十多人假扮成御史、谒者、侍中，轮流往复审问李斯。李斯改为以实对答时，赵高就让人再拷打他。后来二世派人去验证李斯的口供，李斯以为还和以前一样，终不敢再改口供，在供词上承认了自己的罪状。赵高把判决书呈给皇帝，二世皇帝很高兴地说：“没有赵君，我几乎被丞相出卖了。”等二世派的使者到达三川调查李由时，项粱已经将他杀死。使者返回时，正当李斯已被交付狱吏看押，赵高就编造了一整套李由谋反的罪状。</p><p>　　二世二年（前208）七月，李斯被判处五刑，判在咸阳街市上腰斩。李斯出狱时，跟他的次子一同被押解，他回头对次子说：“我想和你再牵着黄狗一同出上蔡东门去打猎追逐狡兔，又怎能办得到呢！”于是父子二人相对痛哭，三族的人都被处死了。</p><p>　　李斯死后，二世任命赵高任中丞相，无论大事小事都由赵高决定。赵高自知权力过重，就献上鹿，称它为马。二世问左右侍从说：“这是鹿吧？”左右都说：“是马”。二世惊慌起来，以为自己迷惑，就把太卜召来，叫他算上一卦。太卜说：“陛下春秋两季到郊外祭祀，供奉宗庙鬼神，斋戒时不虔诚，所以才到这种地步。可依照圣明君主的样子再虞诚地斋戒一次。”于是，二世就到上林苑中去斋戒。整天在上林苑中游玩射猎，一次有个行人走进上林苑中，二世亲手把他射死。赵高就让他的女婿咸阳令阎乐出面弹劾，说是不知谁杀死了人，把尸体搬进上林苑中。赵高就劝谏二世说“天子无缘无故杀死没有罪的人，这是上帝所不允许的，鬼神也不会接受您的祭祀，上天将会降下灾祸，应该远远地离去皇宫以祈祷消灾。”二世就离开皇宫到望夷宫去居住。</p><p>　　二世在望夷宫里住了三天，赵高就假托二世的命运，让卫士们都穿着白色的衣服，手持兵器面向宫内，自己进宫告诉二世说：“山东各路强盗大批大批地来了！”二世上楼台观看，看到卫士拿着兵器朝向宫内，非常害怕，赵高立刻逼迫二世让他自杀。然后取过玉玺把它带在自己身上，身边的文武百官无一人跟从；他登上大殿时，大殿有好几次都像要坍塌似的。赵高自知上天不给予他皇帝之位，群臣也不会答应，就把秦始皇弟弟的弟弟叫来，把玉玺交给了他。</p><p>　　子婴即位之后，担心赵高再作乱，就假称有病而不上朝处理政务，与宦官韩谈和他的儿子商量如何杀死赵高。赵高前来求见，询问病情，子婴就把他召进皇宫，命令韩谈刺杀了他，诛灭了他的三族。</p><p>　　子婴即位三个月，刘邦的军队就从武关打了进来，到达咸阳，文武百官都起义叛秦，不抵抗沛公。子婴和妻子儿女都用丝带系在自己脖子上，到轵道亭旁去投降。刘邦把他们交给部下官吏看押。项羽到达咸阳后把他们杀死，秦就这样失去了天下。</p><p>　　太史公说：李斯以一个里巷平民的身份，游历诸侯，入关奉事秦国，抓住机会，辅佐秦始皇，终于完成统一大业。李斯位居三公之职，可以称得上是很受重用了。李斯知道儒家《六经》的要旨，却不致力于政治清明，用以弥补皇帝的过失，而是凭仗他显贵的地位，阿谀奉承，随意附合，推行酷刑峻法，听信赵高的邪说，废掉嫡子扶苏而立庶子胡亥。等到各地已经群起反叛，李斯这才想直言劝谏，这不是太愚蠢了吗！人们都认为李斯忠心耿耿，反受五刑而死，但我仔细考察事情的真相，就和世俗的看法有所不同。否则的话，李斯的功绩真的要和周公，召公相提并论了。</p><h2 id="赏析"><a href="#赏析" class="headerlink" title="赏析"></a>赏析</h2><p>《李斯列传》是《史记》中的名篇之一，有很高的史学价值和文学价值。</p><p>《李斯列传》的社会政治背景是极其广阔的，实际上几乎涉及了整个秦王朝的兴亡…</p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>如何看待李斯之死？</p><p>李斯者，楚上蔡人也。年少时，为郡小吏，见吏舍厕中鼠食不絜，近人犬，数惊恐之。斯入仓，观仓中鼠，食积粟，居大庑之下，不见人犬之忧。於是李斯乃叹曰：“人之贤不肖譬如鼠矣，在所自处耳！”</p><p>如何看待李斯平台论？</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.vsucai.cn/shiji/">史记</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;史记·七十列传&lt;/p&gt;
&lt;h2 id=&quot;李斯列传&quot;&gt;&lt;a href=&quot;#李斯列传&quot; class=&quot;headerlink&quot; title=&quot;李斯列传&quot;&gt;&lt;/a&gt;李斯列传&lt;/h2&gt;&lt;p&gt;　　李斯者，楚上蔡人也。年少时，为郡小吏，见吏舍厕中鼠食不絜，近人犬，数惊恐之。斯入仓，观仓中</summary>
      
    
    
    
    <category term="hobby" scheme="https://chyriso.github.io/categories/hobby/"/>
    
    <category term="国学" scheme="https://chyriso.github.io/categories/hobby/%E5%9B%BD%E5%AD%A6/"/>
    
    <category term="史记" scheme="https://chyriso.github.io/categories/hobby/%E5%9B%BD%E5%AD%A6/%E5%8F%B2%E8%AE%B0/"/>
    
    
    <category term="国学" scheme="https://chyriso.github.io/tags/%E5%9B%BD%E5%AD%A6/"/>
    
    <category term="史记" scheme="https://chyriso.github.io/tags/%E5%8F%B2%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>野田黄雀行</title>
    <link href="https://chyriso.github.io/2022/06/17/%E9%87%8E%E7%94%B0%E9%BB%84%E9%9B%80%E8%A1%8C/"/>
    <id>https://chyriso.github.io/2022/06/17/%E9%87%8E%E7%94%B0%E9%BB%84%E9%9B%80%E8%A1%8C/</id>
    <published>2022-06-17T13:42:13.000Z</published>
    <updated>2022-06-17T13:50:14.943Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>此诗选自《曹植集》卷六。史载，建安二十四年（219年），曹操借故杀了曹植亲信杨修，次年曹丕继位，又杀了曹植知友丁氏兄弟。曹植身处动辄得咎的逆境，无力救助友人，深感愤忿，内心十分痛苦，只能写诗寄意。</p></blockquote><h2 id="野田黄雀行"><a href="#野田黄雀行" class="headerlink" title="野田黄雀行"></a>野田黄雀行</h2><p>两汉 | 曹植</p><p>高树多悲风，海水扬其波。<br>利剑不在掌，结友何须多？<br>不见篱间雀，见鹞自投罗。<br>罗家得雀喜，少年见雀悲。<br>拔剑捎罗网，黄雀得飞飞。<br>飞飞摩苍天，来下谢少年。  </p><h2 id="译文及注释"><a href="#译文及注释" class="headerlink" title="译文及注释"></a>译文及注释</h2><h3 id="译文"><a href="#译文" class="headerlink" title="译文"></a>译文</h3><p>高高的树木不幸时常受到狂风的吹袭，平静的海面被吹得不住地波浪迭起。<br>宝剑虽利却不在我的手掌之中，无援助之力而结交很多朋友又有何必？<br>你没有看见篱笆上面那可怜的黄雀，为躲避凶狠的鹞却又撞进了网里。<br>张设罗网的人见到黄雀是多么欢喜，少年见到挣扎的黄雀不由心生怜惜。<br>拔出利剑对着罗网用力挑去，黄雀才得以飞离那受难之地。<br>振展双翅直飞上苍茫的高空，获救的黄雀又飞来向少年表示谢意。  </p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>野田黄雀行：《乐府诗集》收于《相和歌·瑟调曲》，是曹植后期的作品。<br>悲风：凄厉的寒风。<br>扬其波：掀起波浪。此二句比喻环境凶险。<br>利剑：锋利的剑。这里比喻权势。<br>结友：交朋友。何须：何必，何用。<br>鹞（yào）：一种非常凶狠的鸟类，鹰的一种，似鹰而小。罗：捕鸟用的网。<br>罗家：设罗网捕雀的人。<br>捎：挥击；削破；除去。<br>飞飞：自由飞行貌。<br>摩：接近、迫近。“摩苍天”是形容黄雀飞得很高。  </p><h2 id="赏析"><a href="#赏析" class="headerlink" title="赏析"></a>赏析</h2><p>　　全诗可分两段。前四句为一段。“高树多悲风，海水扬其波”两句以比兴发端，出语惊人。《易》曰：“挠万物者莫疾乎风。”（《说卦》）谚曰：“树大招风。”则高树之风，其摧折破坏之力可想而知。“风”前又着一“悲”字，更加强了这自然景观所具的主观感情色彩。大海无边，波涛山立，风吹浪涌，楫摧樯倾，它和首句所描绘的恶劣的自然环境，实际是现实政治气侯的象征，曲折地反映了宦海的险恶风涛和政治上的挫折所引起的作者内心的悲愤与忧惧。正是在这样一种政治环境里，在这样一种心情支配下，作者痛定思痛，在百转千回之后，满怀悲愤喊出了“利剑不在掌，结友何须多”这一自身痛苦经历所得出的结论。没有权势便不必交友，这真是石破天惊之论！无论从传统的观念，无论从一般人的生活实际，都不能得出这样的结论来。儒家一向强调“有朋自远方来，不亦乐乎！”（《论语·学而》）强调“四海之内皆兄弟”（《论语·颜渊》）。从《诗经·伐木》的“嘤其鸣矣，求其友声”到今天民间流传的“在家靠父母，出门靠朋友”，都是强调朋友越多越好。然而，正是由于它的不合常情常理，反而有了更加强烈的震撼力量，更加深刻地反映了作者内心的悲愤。从曹集中《赠徐干》“亲交义在敦”、《赠丁仪》“亲交义不薄”、《送应氏》“念我平生亲”、《箜篌引》“亲友从我游”等等诗句来看，作者是一个喜交游、重友情的人。这样一个风流倜傥的翩翩佳公子，如今却大声呼喊出与自己本性完全格格不入的话来，不但用以自警，而且用以告诫世人，则其内心的悲苦激烈、创巨痛深，正是不言可知。</p><p>　　　　“不见篱间雀”以下为全诗第二段。无权无势就不必交友，这当然不是作者内心的真实思想，而是在特殊情况下所发出的悲愤至极的牢骚。这个观点既无法被读者接受，作者也无法引经据典加以论证。因此他采用寓言手法，用“不见”二字引出了持剑少年救雀的故事。这个故事从表面看，是从反面来论证“利剑不在掌，结友何须多”这一不易为人接受的观点，而实际上却是紧承上段，进一步抒写自己内心的悲愤情绪。</p><p>　　黄雀是温驯的小鸟，加上“篱间”二字，更可见其并无冲天之志，不过在篱间嬉戏度日而已。然而就是这样一只于人于物都无所害的小鸟，竟也不能见容于世人，设下罗网，放出鹞鹰，必欲驱捕逐得而后快。为罗驱雀的鹞鹰何其凶恶，见鹞投罗的黄雀何其可怜，见雀而喜的罗家何其卑劣。作者虽无一字褒贬，而感情已深融于叙事之中。作者对掌权者的痛恨，对无辜被害的弱小者的同情，均不难于词句外得之。</p><p>　　作者又进而想象有一手仗利剑的少年，抉开罗网，放走黄雀。黄雀死里逃生，直飞云霄，却又从天空俯冲而下，绕少年盘旋飞鸣，感谢其救命之恩。显然，“拔剑捎罗网”的英俊少年实际是作者想象之中自我形象的化身；黄雀“飞飞摩苍天”所表现的轻快、愉悦，实际是作者在想象中解救了朋友急难之后所感到的轻快和愉悦。诚然，这只是作者的幻想而已。在现实中无能为力，只好在幻想的虚境中求得心灵的解脱，其情亦可悲矣。然而，在这虚幻的想象中，也潜藏着作者对布罗网者的愤怒和反抗。</p><p>　　曹植诗歌的特点，钟嵘《诗品》的“骨气奇高，辞采华茂”八个字最为确评，也最常为人引用。但就这首《野田黄雀行》而言，“骨气”（思想内容）确实是高的，而辞采却说不上“华茂”。从总体上看，这首诗更具有汉乐府民歌的质朴风味。首先，拔剑捎网、黄雀谢恩这一情节，就明显受汉乐府民歌中许多带寓言色彩的作品的影响。西汉《铙歌》十八曲中《艾如张》一曲有“山出黄雀亦有罗，雀已高飞奈雀何”之句，对此篇构思的启发，更是显然。其次，此诗的词句也多质朴无华。“罗家得雀喜，少年见雀悲”这种句式完全是纯粹的口语，“黄雀得飞飞，飞飞摩苍天”二句中的叠字及顶真修辞手法也都是乐府民歌中常见的。这些朴实的词句和诗歌所要表现的内容正相适应，如果有意雕琢，其感人的力量也许倒反而会减退了。于此可见曹植这个才高八斗的作家向民歌学习所取得的成就。</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://so.gushiwen.cn/mingju/juv_c2206094738d.aspx">野田黄雀行</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;此诗选自《曹植集》卷六。史载，建安二十四年（219年），曹操借故杀了曹植亲信杨修，次年曹丕继位，又杀了曹植知友丁氏兄弟。曹植身处动辄得咎的逆境，无力救助友人，深感愤忿，内心十分痛苦，只能写诗寄意。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=</summary>
      
    
    
    
    <category term="hobby" scheme="https://chyriso.github.io/categories/hobby/"/>
    
    <category term="国学" scheme="https://chyriso.github.io/categories/hobby/%E5%9B%BD%E5%AD%A6/"/>
    
    <category term="诗歌" scheme="https://chyriso.github.io/categories/hobby/%E5%9B%BD%E5%AD%A6/%E8%AF%97%E6%AD%8C/"/>
    
    
    <category term="国学" scheme="https://chyriso.github.io/tags/%E5%9B%BD%E5%AD%A6/"/>
    
    <category term="诗歌" scheme="https://chyriso.github.io/tags/%E8%AF%97%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title>洛神赋</title>
    <link href="https://chyriso.github.io/2022/06/17/%E6%B4%9B%E7%A5%9E%E8%B5%8B/"/>
    <id>https://chyriso.github.io/2022/06/17/%E6%B4%9B%E7%A5%9E%E8%B5%8B/</id>
    <published>2022-06-17T12:00:52.000Z</published>
    <updated>2022-06-17T12:25:16.242Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>《洛神赋》是三国时期魏国著名文学家曹植写的浪漫主义名篇。虚构自己在洛水边与洛神相遇的情节，全篇想象丰富，描写细腻，词采流丽。其原名《感甄赋》，曹植用“其形也，翩若惊鸿，婉若游龙，荣曜秋菊，华茂春松。髣髴兮若轻云之蔽月，飘飖兮若流风之回雪。”来形容洛神。</p></blockquote><h2 id="洛神赋"><a href="#洛神赋" class="headerlink" title="洛神赋"></a>洛神赋</h2><p>朝代：三国 | 作者：曹植</p><p>黄初三年，余朝京师，还济洛川。古人有言，斯水之神，名曰宓（fú）妃。感宋玉对楚王神女之事，遂作斯赋，其词曰：</p><p>余从京域，言归东藩，背伊阙，越轘(huán)辕，经通谷，陵景山。日既西倾，车殆马烦。尔乃税驾乎蘅皋(hénggāo)，秣（mò）驷乎芝田，容与乎阳林，流眄(miǎn)乎洛川。于是精移神骇，忽焉思散。俯则未察，仰以殊观。睹一丽人，于岩之畔。乃援御者而告之曰：“尔有觌(dí)于彼者乎？彼何人斯，若此之艳也！”御者对曰：“臣闻河洛之神，名曰宓妃。然则君王所见，无乃是乎？其状若何，臣愿闻之。”</p><p>余告之曰：其形也，翩若惊鸿，婉若游龙，荣曜（yào）秋菊，华茂春松。髣髴（fǎngfú）兮若轻云之蔽月，飘飖（yáo)兮若流风之回雪。远而望之，皎若太阳升朝霞。迫而察之，灼若芙蕖(qú)出渌(lù)波。秾（nóng）纤得衷，修短合度。肩若削成，腰如约素。延颈秀项，皓质呈露，芳泽无加，铅华弗御。云髻峨峨，修眉联娟，丹唇外朗，皓齿内鲜。明眸善睐，靥(yè)辅承权，瓌(guī)姿艳逸，仪静体闲。柔情绰态，媚于语言。奇服旷世，骨象应图。披罗衣之璀粲兮，珥(ěr)瑶碧之华琚(jū)。戴金翠之首饰，缀明珠以耀躯。践远游之文履，曳雾绡(xiāo)之轻裾(jū)。微幽兰之芳蔼(ǎi)兮，步踟(chí)蹰(chú)于山隅(yú)。于是忽焉纵体，以遨以嬉。左倚采旄(máo)，右荫桂旗。攘皓腕于神浒兮，采湍(tuān)濑之玄芝。</p><p>余情悦其淑美兮，心振荡而不怡。无良媒以接欢兮，托微波而通辞。愿诚素之先达兮，解玉佩以要之。嗟佳人之信修，羌习礼而明诗。抗琼珶(dì)以和予兮，指潜渊而为期。执眷眷之款实兮，惧斯灵之我欺。感交甫之弃言兮，怅犹豫而狐疑。收和颜而静志兮，申礼防以自持。</p><p>于是洛灵感焉，徙倚彷徨。神光离合，乍阴乍阳。竦(sǒng)轻躯以鹤立，若将飞而未翔。践椒涂之郁烈，步蘅薄而流芳。超长吟以永慕兮，声哀厉而弥长。尔乃众灵杂遝(tà)，命俦(chóu)啸侣。或戏清流，或翔神渚。或采明珠，或拾翠羽。从南湘之二妃，携汉滨之游女。叹匏(páo)瓜之无匹兮，咏牵牛之独处。扬轻袿(guī)之猗靡(yīmí)兮，翳(yì)修袖以延伫。体迅飞凫，飘忽若神。凌波微步，罗袜生尘。动无常则，若危若安。进止难期，若往若还。转眄(miǎn)流精，光润玉颜。含辞未吐，气若幽兰。华容婀娜，令我忘餐。</p><p>于是屏翳收风，川后静波。冯夷鸣鼓，女娲清歌。腾文鱼以警乘，鸣玉鸾以偕逝。六龙俨其齐首，载云车之容裔。鲸鲵(ní)踊而夹毂(gǔ)，水禽翔而为卫。于是越北沚(zhǐ)，过南冈，纡素领，回清阳，动朱唇以徐言，陈交接之大纲。恨人神之道殊兮，怨盛年之莫当。抗罗袂以掩涕兮，泪流襟之浪浪。悼良会之永绝兮，哀一逝而异乡。无微情以效爱兮，献江南之明珰(dāng)。虽潜处于太阴，长寄心于君王。忽不悟其所舍，怅神宵而蔽光。</p><p>于是背下陵高，足往神留。遗情想像，顾望怀愁。冀灵体之复形，御轻舟而上溯。浮长川而忘返，思绵绵而增慕。夜耿耿而不寐，沾繁霜而至曙。命仆夫而就驾，吾将归乎东路。揽騑(fēi)辔(pèi)以抗策，怅盘桓而不能去。</p><h2 id="翻译-x2F-译文"><a href="#翻译-x2F-译文" class="headerlink" title="翻译&#x2F;译文"></a>翻译&#x2F;译文</h2><p>黄初三年，我来到京都朝觐，归渡洛水。古人曾说此水之神名叫宓妃。因有感于宋玉对楚王所说的神女之事，于是作了这篇赋。赋文云：</p><p>我从京都洛阳出发，向东回归封地鄄城，背着伊阙，越过轘辕，途经通谷，登上景山。这时日已西下，车困马乏。于是就在长满杜蘅草的岸边卸了车，在生着芝草的地里喂马。自己则漫步于阳林，纵目眺望水波浩渺的洛川。于是不觉精神恍惚，思绪飘散。低头时还没有看见什么，一抬头，却发现了异常的景象，只见一个绝妙佳人，立于山岩之旁。我不禁拉着身边的车夫对他说：“你看见那个人了吗？那是什么人，竟如此艳丽！”车夫回答说：“臣听说河洛之神的名字叫宓妃，然而现在君王所看见的，莫非就是她！她的形状怎样，臣倒很想听听。”</p><p>我告诉他说：“她的形影，翩然若惊飞的鸿雁，婉约若游动的蛟龙。容光焕发如秋日下的菊花，体态丰茂如春风中的青松。她时隐时现像轻云笼月，浮动飘忽似风吹落雪。远而望之，明洁如朝霞中升起的旭日；近而视之，鲜丽如绿波间绽开的新荷。她体态适中，高矮合度，肩窄如削，腰细如束，秀美的颈项露出白皙的皮肤。既不施脂，也不敷粉，发髻高耸如云，长眉弯曲细长，红唇鲜润，牙齿洁白，一双善于顾盼的闪亮的眼睛，两个面颧下甜甜的酒窝。她姿态优雅妩媚，举止温文娴静，情态柔美和顺，语辞得体可人。洛神服饰奇艳绝世，风骨体貌与图上画的一样。她身披明丽的罗衣，带着精美的佩玉。头戴金银翡翠首饰，缀以周身闪亮的明珠。她脚着饰有花纹的远游鞋，拖着薄雾般的裙裾，隐隐散发出幽兰的清香，在山边徘徊倘佯。忽然又飘然轻举，且行且戏，左面倚着彩旄，右面有桂旗庇荫，在河滩上伸出素手，采撷水流边的黑色芝草。”</p><p>我钟情于她的淑美，不觉心旌摇曳而不安。因为没有合适的媒人去说情，只能借助微波来传递话语。但愿自己真诚的心意能先于别人陈达，我解下玉佩向她发出邀请。可叹佳人实在美好，既明礼义又善言辞，她举着琼玉向我作出回答，并指着深深的水流以为期待。我怀着眷眷之诚，又恐受这位神女的欺骗。因有感于郑交甫曾遇神女背弃诺言之事，心中不觉惆怅、犹豫和迟疑，于是敛容定神，以礼义自持。</p><p>这时洛神深受感动，低回徘徊，神光时离时合，忽明忽暗。她象鹤立般地耸起轻盈的躯体，如将飞而未翔；又踏着充满花椒浓香的小道，走过杜蘅草丛而使芳气流动。忽又怅然长吟以表示深沈的思慕，声音哀惋而悠长。于是众神纷至杂沓，呼朋引类，有的戏嬉于清澈的水流，有的飞翔于神异的小渚，有的在采集明珠，有的在俯拾翠鸟的羽毛。洛神身旁跟着娥皇、女英南湘二妃，她手挽汉水之神，为瓠瓜星的无偶而叹息，为牵牛星的独处而哀咏。时而扬起随风飘动的上衣，用长袖蔽光远眺，久久伫立；时而又身体轻捷如飞凫，飘忽游移无定。她在水波上行走，罗袜溅起的水沫如同尘埃。她动止没有规律，象危急又象安闲；进退难以预知，象离开又象回返。她双目流转光亮，容颜焕发泽润，话未出口，却已气香如兰。她的体貌婀娜多姿，令我看了茶饭不思。</p><p>在这时风神屏翳收敛了晚风，水神川后止息了波涛，冯夷击响了神鼓，女娲发出清泠的歌声。飞腾的文鱼警卫着洛神的车乘，众神随着叮当作响的玉鸾一齐离去。六龙齐头并进，驾着云车从容前行。鲸鲵腾跃在车驾两旁，水禽绕翔护卫。车乘走过北面的沙洲，越过南面的山冈，洛神转动白洁的脖颈，回过清秀的眉目，朱唇微启，缓缓地陈诉着往来交接的纲要。只怨恨人神有别，彼此虽然都处在盛年而无法如愿以偿。说着不禁举起罗袖掩面而泣，止不住泪水涟涟沾湿了衣襟，哀念欢乐的相会就此永绝，如今一别身处两地，不曾以细微的柔情来表达爱慕之心，只能赠以明珰作为永久的纪念。自己虽然深处太阴，却时时怀念着君王。洛神说毕忽然不知去处，我为众灵一时消失隐去光彩而深感惆怅。</p><p>于是我舍低登高，脚步虽移，心神却仍留在原地。余情绻缱，不时想象着相会的情景和洛神的容貌；回首顾盼，更是愁绪萦怀。满心希望洛神能再次出现，就不顾一切地驾着轻舟逆流而上。行舟于悠长的洛水以至忘了回归，思恋之情却绵绵不断，越来越强，以至整夜心绪难平无法入睡，身上沾满了浓霜直至天明。我不得已命仆夫备马就车，踏上向东回返的道路，但当手执马缰，举鞭欲策之时，却又怅然若失，徘徊依恋，无法离去。</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>〔1〕黄初：魏文帝曹丕年号，公元220—226年。</p><p>〔2〕京师：京城，指魏都洛阳。按曹植黄初三年朝京师事不见史载，《文选》李善注以为系四年之误。朝京师，即到京都洛阳朝见魏文帝。</p><p>〔3〕济：渡。</p><p>〔4〕洛川：即洛水，源出陕西，东南入河南，经洛阳。</p><p>〔5〕斯水：指洛川。</p><p>〔6〕宓妃：相传为宓羲氏之女，溺死于洛水为神。《离骚》：“我令丰隆乘云兮，求宓妃之所在。”</p><p>〔7〕“感宋玉”句：宋玉有《高唐》、《神女》二赋，皆言与楚襄王对答梦遇巫山神女事。</p><p>〔8〕京域：京都（指洛阳）地区。</p><p>〔9〕言：发语词。</p><p>〔10〕东藩：指在洛阳东北的曹植封地鄄城。藩，古代天子封建诸侯，如藩篱之卫皇室，因称诸侯国为藩国。《魏志》本传：“（黄初）三年，立为鄄城王。”鄄城（即今山东鄄城县）在洛阳东北，故称东藩。</p><p>〔11〕伊阙：山名，即阙塞山、龙门山。《水经注·伊水注》：“昔大禹疏以通水，两山相对，望之若阙，伊水历其间北流，故谓之伊阙矣。”山在洛阳南，曹植东北行，故曰背。</p><p>〔12〕轘辕：山名，在今河南偃师县东南。《元和郡县志》：“道路险阻，凡十二曲，将去复还，故曰轘辕。”</p><p>〔13〕通谷：山谷名。华延《洛阳记》：“城南五十里有大谷，旧名通谷。”</p><p>〔14〕陵：登。</p><p>〔15〕景山：山名，在今河南偃师县南。</p><p>〔16〕殆：通“怠”，懈怠。《商君书·农战》：“农者殆则土地荒。”</p><p>〔17〕烦：疲乏。</p><p>〔18〕尔乃：承接连词，犹言“于是就”。</p><p>〔19〕税驾：犹停车。税，舍、置。驾，车乘总称。</p><p>〔20〕蘅皋：生着杜蘅（香草）的河岸。皋，河边高地。</p><p>〔21〕秣驷：喂马。驷，一车四马，此泛指驾车之马。</p><p>〔22〕芝田：《十洲记》：“钟山在北海，仙家数千万，耕田种芝草。”一说为地名，即河南巩县西南的芝田镇。</p><p>〔23〕容与：悠然安闲貌。</p><p>〔24〕阳林：地名，一作“杨林”，因多生杨树而名。</p><p>〔25〕流盼：目光流转顾盼。盼一作“眄”，旁视。</p><p>〔26〕精移神骇：谓神情恍惚。移，变。骇，散。</p><p>〔27〕忽焉：急速貌。</p><p>〔28〕以：而。</p><p>〔29〕殊观：所见殊异。</p><p>〔30〕援：以手牵引。</p><p>〔31〕御者：车夫。</p><p>〔32〕觌（dí敌）：看见。</p><p>〔33〕无乃：犹言莫非。</p><p>〔34〕翩：鸟疾飞貌，此引申为飘忽摇曳。</p><p>〔35〕惊鸿：惊飞的鸿雁。</p><p>〔36〕婉：蜿蜒曲折。此句本宋玉《神女赋》：“婉若游龙乘云翔。”</p><p>〔37〕荣：丰盛。华：华美。二句形容洛神容光焕发，肌体丰盈。</p><p>〔38〕飘飖：动荡不定。</p><p>〔39〕回：旋转。</p><p>〔40〕皎：洁白光亮。</p><p>〔41〕迫：靠近。</p><p>〔42〕灼：鲜明灿烂。</p><p>〔43〕芙蓉：一作“芙蕖”，荷花。</p><p>〔44〕渌（lù路）：水清貌。</p><p>〔45〕秾：花木繁盛。此指人体丰腴。</p><p>〔46〕纤：细小。此指人体苗条。</p><p>〔47〕修：长。度：标准。此句即宋玉《登徒子好色赋》所谓“增之一分则太长，减之一分则太短”之意。</p><p>〔48〕素：白细丝织品。句本宋玉《登徒子好色赋》。</p><p>〔49〕延、秀：均指长。</p><p>〔50〕项：后颈。</p><p>〔51〕皓：洁白。句本司马相如《美人赋》。</p><p>〔52〕铅华：粉。古代烧铅成粉，故称铅华。</p><p>〔53〕弗御：不施。御，进。</p><p>〔54〕云髻：发髻如云。</p><p>〔55〕峨峨：高耸貌。</p><p>〔56〕连娟：又作“联娟”，微曲貌。</p><p>〔57〕朗：明润。</p><p>〔58〕鲜：光洁。</p><p>〔59〕眸：目瞳子。</p><p>〔60〕睐：顾盼。</p><p>〔61〕靥（yè谒）辅：一作“辅靥”，即今所谓酒窝。权：颧骨。《淮南子·说林》：“靥辅在颊则好。”</p><p>〔62〕瓌：同瑰，奇妙。宋玉《神女赋》：“瓌姿玮态。”</p><p>〔63〕艳逸：艳丽飘逸。</p><p>〔64〕仪：仪态。</p><p>〔65〕闲：娴雅。宋玉《神女赋》：“志解泰而体闲。”</p><p>〔66〕绰：宽缓。</p><p>〔67〕奇服：奇丽的服饰。屈原《九章·涉江》：“余幼好此奇服兮，年既老而不衰。”</p><p>〔68〕旷世：犹言举世无匹。旷，空。</p><p>〔69〕骨像：骨格形貌。</p><p>〔70〕应图：指与画中人相当。</p><p>〔71〕璀灿：鲜明貌。一说为衣动声。</p><p>〔72〕珥：珠玉耳饰。此用作动词，作佩戴解。</p><p>〔73〕瑶碧：美玉。</p><p>〔74〕华琚：刻有花纹的佩玉。</p><p>〔75〕翠：翡翠。</p><p>〔76〕首饰：指钗簪一类饰物。</p><p>〔77〕践：穿，着。</p><p>〔78〕远游：鞋名。繁钦《定情诗》：“何以消滞忧，足下双远游。”</p><p>〔79〕文履：饰有花纹图案的鞋。刘桢《鲁都赋》：“纤纤丝履，灿烂鲜新；表以文组，缀以朱蠙。”疑即咏此。</p><p>〔80〕曳：拖。</p><p>〔81〕雾绡：轻薄如雾的轻纱。</p><p>〔82〕绡：生丝。</p><p>〔83〕裾：裙边。</p><p>〔84〕微：隐。</p><p>〔85〕芳蔼：芳香浓郁。</p><p>〔86〕踟蹰：徘徊。</p><p>〔87〕隅：角。</p><p>〔88〕纵体：轻举貌。</p><p>〔89〕遨：游。</p><p>〔90〕采旄：采旗。旄，旗竿上旄牛尾饰物。</p><p>〔91〕桂旗：以桂木为竿之旗。屈原《九歌·山鬼》：“辛夷车兮结桂旗。”</p><p>〔92〕攘：此指揎袖伸出。</p><p>〔93〕神浒：为神所游之水边地。浒，水边泽畔。</p><p>〔94〕湍濑：石上急流。</p><p>〔95〕玄芝：黑芝草。《抱朴子·仙药》：“芝生于海隅名山及岛屿之涯……黑者如泽漆。”</p><p>〔96〕振荡：形容心动荡不安。</p><p>〔97〕怡：悦。</p><p>〔98〕微波：一说指目光，亦通。</p><p>〔99〕诚素：真诚的情意。素，同愫。</p><p>〔100〕要（yāo）：同“邀”，约请。</p><p>〔101〕信修：确实美好。张衡《思玄赋》：“伊中情之信修兮，慕古人之贞节。”</p><p>〔102〕羌：发语词。</p><p>〔103〕习礼：懂得礼法。</p><p>〔104〕明诗：善于言辞。</p><p>〔105〕抗：举起。</p><p>〔106〕琼珶：美玉。</p><p>〔107〕和：应答。</p><p>〔108〕潜渊：深渊，指洛神所居之地。</p><p>〔109〕期：会。</p><p>〔110〕眷眷：通“睠睠”，依恋貌。</p><p>〔111〕款实：诚实。</p><p>〔112〕斯灵：此神，指宓妃。</p><p>〔113〕我欺：即欺我。</p><p>〔114〕交甫：郑交甫。《神仙传》：“切仙一出，游于江滨，逢郑交甫。交甫不知何人也，目而挑之，女遂解佩与之。交甫行数步，空怀无佩，女亦不见。”</p><p>〔115〕弃言：背弃信言。</p><p>〔116〕狐疑：疑虑不定。相传狐性多疑，渡水时且听且过，因称狐疑。</p><p>〔117〕收和颜：收敛笑容。</p><p>〔118〕静志：镇定情志。</p><p>〔119〕申：施展。</p><p>〔120〕礼防：《礼记·坊记》：“夫礼坊民所淫，……故男女无媒不交，无币不相见，恐男女无别也。”坊与“防”通。防，障。</p><p>〔121〕自持：自我约束。</p><p>〔122〕徙倚：犹低回。</p><p>〔123〕神光：围绕于神四周的光芒。</p><p>〔124〕乍阴乍阳：忽暗忽明。此承上句而言，离则阴，合则阳。</p><p>〔125〕竦（sǒng）：耸。</p><p>〔126〕鹤立：形容身躯轻盈飘举，如鹤之立。</p><p>〔127〕椒途：涂有椒泥的道路。椒，花椒，有浓香。</p><p>〔128〕蘅薄：杜蘅丛生地。</p><p>〔129〕超：惆怅。</p><p>〔130〕永慕：长久思慕。</p><p>〔131〕厉：疾。</p><p>〔132〕弥：久。</p><p>〔133〕杂沓：众多貌。</p><p>〔134〕命俦啸侣：犹呼朋唤友。俦，伙伴、同类。</p><p>〔135〕渚：水中高地。</p><p>〔136〕翠羽：翠鸟的羽毛。古人多用以为饰。</p><p>〔137〕南湘之二妃：指娥皇和女英。据刘向《列女传》载，尧以长女娥皇和次女女英嫁舜，后舜南巡，死于苍梧。二妃往寻，死江湘间，为湘水之神。</p><p>〔138〕汉滨之游女：汉水之神。《诗·周南·汉广》：“汉有游女，不可求思。”薛君《韩诗章句》：“游女，汉神也。”</p><p>〔139〕瓠瓜：星名，又名天鸡，在河鼓星东。</p><p>〔140〕无匹：无偶。阮瑀《止欲赋》：“伤匏瓜之无偶，悲织女之独勤。”</p><p>〔141〕牵牛：星名，又名天鼓，与织女星各处河鼓之旁。相传每年七月七日乃得一会。</p><p>〔142〕袿：今作褂。刘熙《释名》：“妇人上服曰袿。其下垂者，上广下狭如刀圭也。”</p><p>〔143〕猗靡：随风飘动貌。</p><p>〔144〕翳：遮蔽。</p><p>〔145〕延伫：久立。</p><p>〔146〕凫：野鸭。</p><p>〔147〕陵：踏。</p><p>〔148〕尘：指细微四散的水沫。</p><p>〔149〕难期：难料。</p><p>〔150〕盼：《文选》作“眄”，斜视。</p><p>〔151〕流精：形容目光流转而有光彩。</p><p>〔152〕幽兰：形容气息香馨如兰。</p><p>〔153〕婀娜：轻盈柔美貌。</p><p>〔154〕屏翳：传说中的众神之一，司职说法不一，或以为是云师（《吕氏春秋》），或以为是雷师（韦昭），或以为是雨师（《山海经》、王逸等）。而曹植认为是风神，其《诘洛文》云“河伯典泽，屏翳司风”。</p><p>〔155〕川后：旧说即河伯，似有误，俟考。</p><p>〔156〕冯夷：河伯名。《青令传》：“河伯，华阴潼乡人也，姓冯名夷。”又《楚辞》王逸注引《抱朴子·释鬼》：“冯夷以八月上庚日渡河溺死，天帝署为河伯。”</p><p>〔157〕女娲：传说中的女神，《世本》谓其始作笙簧，故此曰“女娲清歌”。</p><p>〔158〕文鱼：《山海经·西山经》：“秦器之山，濩水出焉，……是多鳐鱼，状如鲤鱼，鱼身而鸟翼，苍文而白首，赤喙，常行西海，游于东海，以夜飞。”</p><p>〔159〕惊（警）：当从《文选》作“警”。《文选》李善注：“警，戒也。文鱼有翅能飞，故使警乘。”</p><p>〔160〕玉銮：鸾鸟形玉制车铃，动则发声。</p><p>〔161〕偕逝：俱往。</p><p>〔162〕六龙：相传神出游多驾六龙。</p><p>〔163〕俨：矜持庄重貌。</p><p>〔164〕齐首：谓六龙齐头并进。</p><p>〔165〕云车：相传神以云为车。《博物志》：“汉武帝好道，七月七日夜漏七刻，西王母乘紫云车来。”</p><p>〔166〕容裔：舒缓安详貌。</p><p>〔167〕鲸鲵（ní泥）：即鲸鱼。水栖哺乳动物，雄曰鲸，雌曰鲵。</p><p>〔168〕毂（gú谷）：车轮中用以贯轴的圆木。此指车。</p><p>〔169〕为卫：作为护卫。</p><p>〔170〕沚：水中小块陆地。</p><p>〔171〕纡：回。</p><p>〔172〕素领：白皙的颈项。</p><p>〔173〕清扬：形容女性清秀的眉目。扬一作“阳”。《诗·郑风·野有蔓草》：“有美一人，清阳婉兮。”</p><p>〔174〕交接：结交往来。</p><p>〔175〕莫当：无匹，无偶。《汉书·司马相如传》颜师古注：“当，对偶也。”</p><p>〔176〕抗：举。</p><p>〔177〕袂：袖。曹植《叙愁赋》：“扬罗袖而掩涕”，与此句同意。</p><p>〔178〕浪浪：水流不断貌。</p><p>〔179〕效爱：致爱慕之意。</p><p>〔180〕明珰：以明月珠作的耳珰。《古诗为焦仲卿妻作》：“耳著明月珰。”</p><p>〔181〕太阴：众神所居之处，与上文“潜渊”义近。</p><p>〔182〕不悟：不知。</p><p>〔183〕舍：止。</p><p>〔184〕宵：通“消”，消失。一作“霄”。</p><p>〔185〕蔽光：隐去光彩。</p><p>〔186〕背下：离开低地。</p><p>〔187〕陵高：登上高处。</p><p>〔188〕灵体：指洛神。</p><p>〔189〕上溯：逆流而上。</p><p>〔190〕绵绵：连续不断貌。</p><p>〔191〕耿耿：心绪不安貌。</p><p>〔192〕东路：回归东藩之路。</p><p>〔193〕騑(fēi)：车旁之马。古代驾车称辕外之马为騑或骖，此泛指驾车之马。</p><p>〔194〕辔：马缰绳。</p><p>〔195〕抗策：犹举鞭。</p><p>〔196〕盘桓：徘徊不前。</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="http://www.gushicimingju.com/gushi/fu/526.html">洛神赋</a></p><p>[2] <a href="https://so.gushiwen.cn/shiwenv_0559b0b0f385.aspx">洛神赋</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;《洛神赋》是三国时期魏国著名文学家曹植写的浪漫主义名篇。虚构自己在洛水边与洛神相遇的情节，全篇想象丰富，描写细腻，词采流丽。其原名《感甄赋》，曹植用“其形也，翩若惊鸿，婉若游龙，荣曜秋菊，华茂春松。髣髴兮若轻云之蔽月，飘飖兮若流风之回雪。”来形容洛</summary>
      
    
    
    
    <category term="hobby" scheme="https://chyriso.github.io/categories/hobby/"/>
    
    <category term="国学" scheme="https://chyriso.github.io/categories/hobby/%E5%9B%BD%E5%AD%A6/"/>
    
    <category term="诗歌" scheme="https://chyriso.github.io/categories/hobby/%E5%9B%BD%E5%AD%A6/%E8%AF%97%E6%AD%8C/"/>
    
    
    <category term="国学" scheme="https://chyriso.github.io/tags/%E5%9B%BD%E5%AD%A6/"/>
    
    <category term="诗歌" scheme="https://chyriso.github.io/tags/%E8%AF%97%E6%AD%8C/"/>
    
    <category term="洛神赋" scheme="https://chyriso.github.io/tags/%E6%B4%9B%E7%A5%9E%E8%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>道德经</title>
    <link href="https://chyriso.github.io/2022/06/16/%E9%81%93%E5%BE%B7%E7%BB%8F/"/>
    <id>https://chyriso.github.io/2022/06/16/%E9%81%93%E5%BE%B7%E7%BB%8F/</id>
    <published>2022-06-16T08:06:13.000Z</published>
    <updated>2022-06-17T12:14:09.162Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>帛书版并不叫《道德经》而是叫《老子五千言》，也不分“道经”和“德经”，还有就是在前后顺序上帛书版的内容是“德经”在前“道经”在后。帛书版《老子》甲乙两本的传抄年代也略有不同，甲本应该在西汉初年刘邦登基以后，乙本在汉文帝登基之后。</p><p>《道德经》有许多版本，多为后人传抄失误或经儒家阉割，现在已经无法确定原文为何[非证实]</p><p>《道德经》的出土版本比较权威的有两个，一为1973年马王堆汉墓帛书版，二为1993年郭店楚国墓竹简版。这两个版本《道德经》，郭店本早于马王堆本，但属于精要选讲，研读考究的价值并不大。这一点，学术界已经形成共识。原汁原味接近原版《道德经》，首推马王堆汉墓帛书版。这个怎么讲？首先，马王堆汉墓主人利苍早年跟随刘邦打天下，生活在秦始皇焚书坑儒后，大批古籍虽说被焚毁，可依旧能够妥善保管。</p><p>其次，利苍毕竟是贵族，利用帛书摘抄《道德经》，因帛书极其珍贵就要求不允许出现差错。这也就是为何帛书版《道德经》，为何接近原版的深层次原因。最后，《道德经》在西汉立国之初是国家决策层的理论专著。既然作为国家层面的理论专著，《道德经》的版本问题不可能不会被篡改，毕竟在封建王朝时期文化是服从于统治者意志的。</p></blockquote><p>1973年，自长沙马王堆汉墓出土。全文共计九九八十一章。</p><h2 id="道经"><a href="#道经" class="headerlink" title="道经"></a>道经</h2><p>（1）第一章<br>道可道也 非恒道也 名可名也 非恒名也<br>无 名天地之始也 有 名万物之母也<br>故 恒无 欲以观其眇也 恒有 欲以观其所徼也<br>两者同出 异名同谓 玄之又玄 众妙之门</p><p>（2）第二章<br>天下皆知美之为美 恶已 皆知善之为善 斯不善矣<br>有无之相生也 难易之相成也 长短之相形也 高下相盈也 音声之相和也，先后之相随 恒也<br>是以圣人居无为之事 行不言之教 万物作而弗始也 为而弗恃也 成功而弗居也夫唯弗居 是以弗去</p><p>（3）第三章<br>不上贤 使民不争 不贵难得之货 使民不为盗 不见可欲 使民不乱<br>是以圣人之治也 虚其心 实其腹 弱其志 强其骨 恒使民无知无欲也<br>使夫知不敢 弗为而已 则无不治矣</p><p>（4）第四章<br>道冲 而用之有弗盈也 渊兮 似万物之宗<br>挫其锐 解其纷 和其光 同其尘 湛兮 似或存 吾不知其谁之子 象帝之先</p><p>（5）第五章<br>天地不仁 以万物为刍狗<br>圣人不仁 以百姓为刍狗<br>天地之间 其犹橐龠[tuó yuè]乎 虚而不屈 动而愈出 多闻数穷 不如守于中</p><p>（6）第六章<br>谷神不死 是谓玄牝<br>玄牝之门 是谓天地之根 绵绵呵 其若存 用之不堇 [ jǐn“仅”]</p><p>（7）第七章<br>天长 地久<br>天地之所以能长且久者 以其不自生也 故能长生<br>是以圣人后其身而身先 外其身而身存 不以其无私邪 故能成其私</p><p>（8）第八章<br>上善 若水<br>水善 利万物而有静 居众人之所恶 故几于道矣<br>居善地 心善渊 予善天 言善信 正善治 事善能 动善时 夫唯不争 故无尤</p><p>（9）第九章<br>持而盈之 不如其已 揣而锐之 不可长葆也 金玉盈室 莫之能守也 富贵而骄 自遗咎也 功遂身退 天之道也</p><p>（10）第十章<br>戴营魄抱一 能毋离乎<br>槫气致柔 能婴儿乎<br>修除玄监 能无疵乎<br>爱民活国 能毋以知乎<br>天门启阖 能为雌乎<br>明白四达 能毋以知乎<br>生之 畜之 生而弗有 长而弗宰 是谓玄德</p><p>（11）第十一章<br>卅[sà三十]辐同一毂 当其无 有车之用也<br>埏埴而为器 当其无 埴器之用也<br>凿户牖 当其无 有室之用也<br>故 有之以为利 无之以为用</p><p>（12）第十二章<br>五色使人之目盲 五音使人之耳聋 五味使人之口爽 驰骋畋[tián]猎使人心发狂 难得之货使人之行方<br>是以圣人之治也 为腹而不为目 故去彼而取此</p><p>（13）第十三章<br>宠辱若惊 贵大患若身<br>何谓宠辱若惊 宠之为下也 得之若惊 失之若惊 是谓宠辱若惊<br>何谓贵大患若身 吾所以有大患者 为吾有身 及吾无身 有何患<br>故贵为身以为天下 若可托天下 爱己身以为天下 女何以寄天下</p><p>（14）第十四章<br>视之而弗见 名之曰微 听之而弗闻 名之曰希 捪[mín抚]之而弗得 名之曰夷 三者不可致诘 故混而为一<br>一者 其上不谬 其下不惚 寻寻呵 不可名也 复归于无物 是谓无状之状 无物之象 是谓沕[wù终]望 随而不见其后 迎而不见其首 执今之道 以御今之有 以知古始 是谓道纪</p><p>（15）第十五章<br>古之善为道者 微眇玄达 深不可志<br>夫唯不可志 故强为之容 曰 与呵 其若冬涉水 犹呵 其若畏四邻 俨呵 其若客 涣呵 其若冰泽 沌呵 其若朴 湷[zhuāng]呵 其若浊 旷呵 其若谷<br>浊而静之徐清 安以动之 徐生 保此道者不欲盈 夫唯不欲盈 故能蔽而不成</p><p>（16）第十六章<br>致虚 极也 守静 督也 万物旁作 吾以观其复也<br>天物芸芸 各复归于其根 曰静 静 是谓复命<br>复命 常也 知常 明也 不知常 妄 妄作 凶<br>知常 容 容乃公 公乃王 王乃天 天乃道 道乃久 殁身不殆</p><p>（17）第十七章<br>太上 下知有之 其次 亲誉之 其次 畏之 其下 侮之<br>信不足 案有不信 猷[yóu] 呵 其贵言也 功成事遂 而百姓皆谓我自然</p><p>（18）第十八章<br>故大道废 案有仁义 知慧出 案有大伪 六亲不和 案有孝慈 邦家昏乱 案有贞臣</p><p>（19）第十九章<br>绝圣弃知 民利百倍 绝仁弃义 民复孝慈 绝巧弃利 盗贼无有<br>此三言也 以为文未足 故令之有所属 见素抱朴 少思寡欲 绝学无忧</p><p>（20）第二十章<br>唯与诃[hē] 其相去几何 美与恶 其相去何若 人之所畏 亦不可以不畏人<br>望呵 其未央才 众人熙熙 若享于太牢 而春登台 我泊焉未佻佻[tiāo] 若婴儿之未咳<br>累呵 如无所归 众人皆有余 我独遗 我愚人之心也 惷惷(chun3)呵 鬻(yù卖)人察察 我独闵闵呵 忽呵 其若海 望呵 其若无所止 众人皆有以 我独顽以鄙 吾欲独异于人 而贵食母</p><p>（21）第二十一章<br>孔德之容 唯道是从<br>道之物 唯望唯惚 惚呵 望呵 中有象呵 望呵 惚呵 中有物呵 幽呵 冥呵 中有请呵<br>其请甚真 其中有信 自今及古 其名不去 以顺众父 吾何以知众父之然 以此</p><p>（22）第二十二章<br>炊[chuī]者不立 自视者不章 自见者不明 自伐者无功 自矜者不长 其在道也 曰 余食赘行 物或恶之 故有欲者弗居</p><p>（23）第二十三章<br>曲则全 枉则直 洼则盈 敝则新 少则得 多则惑<br>是以圣人执一以为天下式 不自视故章 不自现故明 不自伐故有功 弗矜故能长 夫唯不争 故莫能与之争 古之所谓曲则全者 几语才 诚全归之</p><p>（24）第二十四章<br>希言自然 飘风不冬朝 暴雨不终日 孰为此 天地而弗能久 而况于人乎<br>故从事于道者同于道 德者同于德 失者同于失<br>同于德者 道亦德之 同于失者 道亦失之</p><p>（25）第二十五章<br>有物混成 先天地生 萧呵 寥呵 独立而不改 可以为天地母 吾未知其名 字之曰道 强为之名曰大<br>大曰逝 逝曰远 远曰反<br>道大 天大 地大 王亦大<br>国中有四大 而王居其一焉<br>人法地 地法天 天法道 道法自然</p><p>（26）第二十六章<br>重为轻根 静为躁君 是以君子终日行不离其辎重 唯有环官 燕处则昭若 若何万乘之主而以身轻天下 轻则失本 躁则失君</p><p>（27）第二十七章<br>善行者无辙迹 善言者无瑕谪 善数者不以筹策 善闭者无关楗[jiàn]而不可启也 善结者无绳约而不可解也 是以圣人恒善救人 而无弃人 物无弃财 是谓袭明<br>故 善人 善人之师 不善人 善人之资也<br>不贵其师 不爱其资 虽知乎大迷 是谓眇[miào]要</p><p>（28）第二十八章<br>知其雄 守其雌 为天下溪<br>为天下溪 恒德不离 恒德不离 复归于婴儿<br>知其荣 守其辱 为天下谷<br>为天下谷 恒德乃足 恒德乃足 复归于朴<br>知其白 守其黑 为天下式<br>为天下式 恒德不忒 恒德不忒 复归于无极<br>朴散则为器 圣人用之则为官长 夫大制无割</p><p>（29）第二十九章<br>将欲取天下而为之 吾见其弗得已<br>夫天下 神器也 非可为者也<br>为者败之 执者失之<br>物或行或随 或嘘或吹 或强或羸 或陪或隳 是以圣人去甚 去太 去奢</p><p>（30）第三十章<br>以道佐人主 不以兵强于天下 其事好还<br>师之所居 楚棘生之 善者果而已矣 不以取强焉<br>果而勿娇 果而勿矜 果而勿伐 果而不得已 居是 谓果而不强<br>物壮则老 谓之不道 不道蚤已</p><p>（31）第三十一章<br>夫兵者 不祥之器也 物或恶之 故有欲者弗居<br>君子居则贵左 用兵则贵右 故兵者 非君子之器也<br>兵者 不祥之器也 不得已而用之<br>铦[xiān锋利]袭为上 勿美也 若美之 是乐杀人也<br>夫乐杀人 不可以得志于天下矣 是以吉事上左 丧事上右 是以偏将军居左 上将军居右 言以丧礼居之也 杀人众 以悲哀泣之 战胜 以丧礼处之</p><p>（32）第三十二章<br>道恒无名 朴虽小 而天下弗敢臣 侯王若能守之 万物将自宾 天地相合 以俞甘露 民莫之令 而自均焉<br>始制有名 名亦既有 夫亦将知止 知止所以不殆<br>俾[bǐ]道之在天下也 猷[yóu]小谷之于江海也</p><p>（33）第三十三章<br>知人者 知也 自知者 明也 胜人者 有力也 自胜者 强也 知足者 富也 强行者 有志也 不失其所者 久也 死而不忘者 寿也</p><p>（34）第三十四章<br>道泛兮 其可左右也 成功遂事而弗名有也<br>万物归焉而弗为主 则恒无欲也 可名于小<br>万物归焉而弗为主 可名于大<br>是以圣人之能成大也 以其不为大也 故能成大</p><p>（35）第三十五章<br>执大象 天下往 往而不害 安平泰 乐与饵 过格止 故道之出言 曰 淡呵 其无味也 视之 不足见也 听之 不足闻也 用之 不可既也</p><p>（36）第三十六章<br>将欲拾之 必古张之 将欲弱之 必古强之 将欲去之 必古兴之 将欲夺之 必古与之 是谓微明<br>柔弱胜刚强 鱼不脱于渊 邦利器不可以示人</p><p>（37）第三十七章<br>道恒无名 侯王若能守之 万物将自化<br>化而欲作 吾将阗[tián]之以无名之朴 夫将不欲 不欲以静 天地将自正</p><h2 id="德经"><a href="#德经" class="headerlink" title="德经"></a>德经</h2><p>（38）第三十八章<br>上德不德 是以有德 下德不失德 是以无德<br>上德无为 而无以为也 下德为之 而有以为<br>上仁为之 而无以为也 上义为之 而有以为也<br>上礼为之 而莫之应也 则攘臂而扔之<br>故 失道而后德 失德而后仁 失仁而后义 失义而后礼<br>夫礼者 忠信之薄也 而乱之首也<br>前识者 道之华也 而愚之首也<br>是以大丈夫居其厚而不居其薄 居其实而不居其华 故去彼而取此</p><p>（39）第三十九章<br>昔之得一者 天得一以清 地得一以宁 神得一以灵 谷得一以盈 万物得一以生 侯得一以为天下正?<br>其致之也 谓天毋已清 将恐裂 谓地毋已宁 将恐废 谓神毋已灵 将恐歇 谓谷毋已盈 将恐竭 谓万物毋已生 将恐灭 谓侯王毋已贵以高 将恐蹶[ jué]<br>故 必贵而以贱为本 必高矣而以下为基 夫是以 侯王自谓 孤 寡 不谷 此其贱之本与 非也?<br>故致数与无与 是故不欲禄禄若玉 珞珞[luò]若石</p><p>（40）第四十章<br>上士闻道 堇[jǐn仅]能行之 中士闻道 若存若亡 下士闻道 大笑之<br>弗笑不足以为道 是以建言有之曰 明道如费 进道如退 夷道如类 上德如谷 大白如辱 广德如不足 建德如偷 质真如渝 大方无隅 大器免成 大音希声 天象无刑 道褒无名 夫唯道? 善始且善成</p><p>（41）第四十一章<br>反也者 道之动也 弱也者 道之用也 天下之物生于有 有生于无</p><p>（42）第四十二章<br>道生一 一生二 二生三 三生万物<br>万物负阴而抱阳 中气以为和 天下之所恶 唯孤 寡 不谷 而王公以自名也<br>物或损之而益 益之而损 故人之所教 亦议而教人<br>故强梁者不得死 我将以为学父</p><p>（43）第四十三章<br>天下之至柔 驰骋于天下之至坚 无有入于无间 吾是以知无为之有益也<br>不言之教 无为之益 天下希能及之矣</p><p>（44）第四十四章<br>名与身孰亲 身与货孰多 得与亡孰病<br>甚爱必大费 多藏必厚亡 故知足不辱 知止不殆 可以长久</p><p>（45）第四十五章<br>大成若缺 其用不弊 大盈若冲 其用不穷 大直如诎[qū言语迟钝] 大巧如拙[zhuō笨] 大辩如讷 躁胜寒 靓[liàng漂亮]胜炅[jiǒng明亮] 请静可以为天下正</p><p>（46）第四十六章<br>天下有道 却走马以粪 天下无道 戎马生于郊<br>罪莫大于可欲 祸莫大于不知足 咎莫憯[cǎn惨]于欲得 故知足之足 恒足矣</p><p>（47）第四十七章<br>不出于户 以知天下 不窥于牖 以知天道 其出也弥远 其知也弥少<br>是以圣人不行而知 不见而明 弗为而成</p><p>（48）第四十八章<br>为学者日益 为道者日损 损之有损 以至于无为 无为而无不为<br>将欲取天下也 恒无事 及其有事也 又不足以取天下矣</p><p>（49）第四十九章<br>圣人恒无心 以百姓之心为心 善者善之 不善者亦善之 德善也 信者信之 不信者亦信之 德信也<br>圣人之在天下 詥[hé]焉 为天下浑心 百姓皆属耳目焉 圣人皆孩之</p><p>（50）第五十章<br>出生 入死 生之徒[tú]十有三 死之徒十有三 而人之生 动皆之死地之十有三 夫何故也 以其生生之厚也<br>盖闻善执生者 陵行不遇兕虎 入军不被甲兵 兕无所揣其角 虎无所措其蚤 兵无所容其刃 夫何故也 以其无死地焉</p><p>（51）第五十一章<br>道生之 而德畜之 物刑之 而器成之 是以万物尊道而贵德<br>道之尊 德之贵也 夫莫之爵而恒自然也<br>道生之 畜[xù]之 长之 育之 亭之 毒之 养之 覆之 生而弗有也 为而弗恃也 长而弗宰也 此之谓玄德</p><p>（52）第五十二章<br>天下有始 以为天下母 既得其母 以知其子 既知其子 复守其母 没身不殆<br>塞其兑 闭其门 终身不堇 启其兑 济其事 终身不棘<br>见常曰明 守柔曰强 用其光 复归其明 毋遗身殃 是谓袭常</p><p>（53）第五十三章<br>使我介然有知也 行于大道 唯施是畏<br>大道甚夷 民甚好解<br>朝甚除 田甚芜 仓甚虚 服文采 带利剑 厌食而财货有余 是谓盗夸 盗夸 非道也</p><p>（54）第五十四章<br>善建者不拔 善抱者不脱 子孙以祭祀不绝<br>修之身 其德乃真 修之家 其德有余 修之乡 其德乃长 修之国 其德乃夆[féng] 修之于天下 其德乃博<br>以身观身 以家观家 以乡观乡 以邦观邦 以天下观天下 吾何以知天下然兹 以此</p><p>（55）第五十五章<br>含德之厚者 比于赤子 蜂虿[chài]虺 [huǐ]蛇弗蜇[zhē] 攫[jué]鸟猛兽弗搏 骨弱筋柔而握固 未知牝牡[pìn mǔ]之会而脧[juān]怒? 精之至也 终日号而不耰[yōu] 和之至也<br>知和曰常 知常曰明 益生曰祥 心使气曰强 物壮则老 谓之不道 不道早亡</p><p>（56）第五十六章<br>知者弗言 言者弗知<br>塞其兑 闭其门 和其光 同其尘 挫其锐 解其纷 是谓玄同<br>故 不可得而亲 不可得而疏 不可得而利 亦不可得而害 不可得而贵 亦不可得而贱 故为天下贵</p><p>（57）第五十七章<br>以正治邦 以奇用兵 以无事取天下<br>吾何以知其然哉<br>夫天下多忌讳 而民弥贫 人多利器 而国家滋昏 民多伎能 而奇物滋起 法物滋彰 盗贼多有<br>是以圣人之言曰 我无为也 而民自化 我好静 而民自正 我无事 而民自富 我欲无欲 而民自朴</p><p>（58）第五十八章<br>其政闵闵 其民屯屯[tún] 其正察察 其邦缺缺<br>祸 福之所倚 福 祸之所伏 孰知其极<br>其无正也 正复为奇 善复为妖 人之悉也 其日固久矣 是以方而不割 兼而不刺 直而不绁? 光而不眺[tiào]</p><p>（59）第五十九章<br>治人 事天 莫若啬<br>夫唯啬 是以蚤服 蚤服是谓重积德 重积德则无不克 无不克则莫知其极 莫知其极 可以有国 有国之母 可以长久 是谓深根固氐[dǐ根本] 长生久视之道也</p><p>（60）第六十章<br>治大国若烹小鲜<br>以道莅天下 其鬼不神 非其鬼不神也 其神不伤人也 非其神不伤人也 圣人亦弗伤也 夫两不相伤 故德交归焉</p><p>（61）第六十一章<br>大邦者 下流也 天下之牝 天下之交也<br>牝恒以静胜牡 为其静也 故大邦以下小邦 则取小国 小邦以下大邦 则取于大邦<br>故 或下以取 或下而取 故 大邦者不过欲兼畜人 小邦者不过欲入事人 夫皆得其欲 则大者宜为下</p><p>（62）第六十二章<br>道者 万物之注也 善人之宝也 不善人之所保也<br>美言可以市 尊行可以贺人<br>人之不善 何弃之有 故立天子 置三卿 虽有拱之璧以先驷马 不若坐进此道<br>古之所以贵此道者何也 不谓求以得 有罪以免与 故为天下贵</p><p>（63）第六十三章<br>为无为 事无事 味无味 大小 多少 报怨以德<br>图难乎其易也 为大乎其细也 天下之难作于易 天下之大作于细 是以圣人终不为大 故能成其大<br>夫轻诺必寡信 多易必多难 是以圣人猷[yóu]难之 故终于无难</p><p>（64）第六十四章<br>其安也 易持也 其未兆也 易谋也 其脆易判 其微易散<br>为之于其未有 治之于其未乱 合抱之木 作于毫末 九成之台 起于蔂[léi]土 百仞之高 始于足下 为之者败之 执者失之<br>是以圣人无为也 故无败也 无执也 故无失也<br>民之从事也 恒于几成而败之 慎终若始 则无败事矣 是以圣人欲不欲 而不贵难得之货 学不学 而复众人之所过 能辅万物之自然而弗敢为</p><p>（65）第六十五章<br>故曰 为道者非以明民也 将以愚之也<br>民之难治也 以其知也 故以知知邦 邦之贼也 以不知知邦 邦之德也 恒知此两者亦稽式也?<br>恒知稽式 此谓玄德 玄德深矣 远矣 与物反矣 乃至大顺</p><p>（66）第六十六章<br>江海之所以能为百谷王者 以其善下之也 故能为百谷王<br>是以圣人之欲上民也 必以其言下之 其欲先民也 必以其身后之<br>故居前而民弗害也 居上而民弗重也 天下乐推而弗厌也 非以其无诤与 故天下莫能与争</p><p>（67）第六十七章<br>小邦 寡民 使有什佰人之器而毋用 使民重死而远徙 有车舟无所乘之 有甲兵无所陈之 使民复结绳而用之 甘其食 美其服 乐其俗 安其居 邻邦相望 鸡犬之声相闻 民至老死不相往来</p><p>（68）第六十八章<br>信言不美 美言不信 知者不博 博者不知 善者不多 多者不善<br>圣人无积 既以为人 己愈有 既以予人 己愈多<br>故 天之道 利而不害 人之道 为而弗争</p><p>（69）第六十九章<br>天下皆谓我大 大而不宵 夫唯不宵 故能大 若宵 久矣其细也夫<br>我恒有三宝 持而保之 一曰慈 二曰俭 三曰不敢为天下先<br>慈 故能勇 俭 故能广 不敢为天下先 故能成事长 今舍其慈 且勇 舍其俭 且广 舍其后 且先 则必死矣 夫慈 以战则胜 以守则固 天将健之 如以慈垣【 yuán】之</p><p>（70）第七十章<br>善为士者不武 善战者不怒 善胜敌者弗与 善用人者为之下 是谓不诤之德 是谓用人 是谓肥天 古之极也</p><p>（71）第七十一章<br>用兵有言曰 吾不敢为主而为客 吾不进寸而退尺 是谓行无行 攘无臂 执无兵 乃无敌矣<br>祸莫大于无敌 无敌近亡吾葆矣 故乘兵相若 则哀者胜矣</p><p>（72）第七十二章<br>吾言甚易知也 甚易行也 而人莫之能知也 而莫之能行也<br>言有君 事有宗 其唯无知也 是以不我知 知者希 则我贵矣 是以圣人被褐而怀玉</p><p>（73）第七十三章<br>知不知 尚矣 不知不知 病矣 是以圣人之不病 以其病病也 是以不病</p><p>（74）第七十四章<br>民之不畏畏 则大畏将至矣<br>毋闸其所居 毋猒【 yàn 】其所生<br>夫唯弗猒 是以不厌 是以圣人自知而不自见也 自爱而不自贵也 故去彼取此</p><p>（75）第七十五章<br>勇于敢者则杀 勇于不敢者则活 此两者 或利或害 天之所恶 孰知其故<br>天之道 不战而善胜 不言而善应 不召而自来 单而善谋 天网恢恢 疏而不失</p><p>（76）第七十六章<br>若民恒且不畏死 奈何以死惧之<br>若民恒且畏死 而为畸[[jī]]者吾将得而杀之 夫孰敢矣<br>若民恒且必畏死 则恒有司杀者<br>夫代司杀者杀 是代大匠斫【zhuó】也 夫代大匠斫者 稀有不伤其手矣</p><p>（77）第七十七章<br>民之饥也 以其上食税之多也 是以饥<br>百姓之不治也 以其上之有以为也 是以不治<br>民之轻死也 以其求生之厚也 是以轻死<br>夫唯无以生为者 是贤贵生</p><p>（78）第七十八章<br>人之生也柔弱 其死也月亘【gèn 亘】坚强 万物草木之生也柔脆 其死也枯槁<br>故曰 坚强者 死之徒也 柔弱微细者 生之徒也<br>是以兵强则不胜 木强则恒 强大居下 柔弱细微居上</p><p>（79）第七十九章<br>天之道 犹张弓者也 高者印之 下者举之 有余者损之 不足者补之<br>故 天之道 损有余而益不足 人之道则不然 损不足而奉有余?<br>孰能有余而有以取奉于天者乎 唯又道者乎<br>是以圣人为而不恃 功成而不居也 若此 其不欲见贤也</p><p>（80）第八十章<br>天下莫柔弱于水 而攻坚强者莫之能先也 以其无以易之也<br>水之胜刚也 弱之胜强也 天下莫弗知也 而莫之能行也 故圣人言云曰 受邦之垢[[gòu]] 是谓社稷之主 受邦之不祥 是为天下之王 正言若反</p><p>（81）第八十一章<br>和大怨 必有余怨 焉可以为善 是以圣人右介 而不以责于人<br>故 有德司介 无德司彻 夫天道无亲 恒与善人</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://new.qq.com/omn/20210412/20210412A00NSI00.html">马王堆帛书版《道德经》</a></p><p>[2] <a href="https://zhuanlan.zhihu.com/p/411133263">《道德经》全文——马王堆出土帛书版</a></p><p>[3] <a href="https://user.guancha.cn/main/content?id=248876">帛书版《道德经》</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;帛书版并不叫《道德经》而是叫《老子五千言》，也不分“道经”和“德经”，还有就是在前后顺序上帛书版的内容是“德经”在前“道经”在后。帛书版《老子》甲乙两本的传抄年代也略有不同，甲本应该在西汉初年刘邦登基以后，乙本在汉文帝登基之后。&lt;/p&gt;
&lt;p&gt;《道</summary>
      
    
    
    
    <category term="hobby" scheme="https://chyriso.github.io/categories/hobby/"/>
    
    <category term="国学" scheme="https://chyriso.github.io/categories/hobby/%E5%9B%BD%E5%AD%A6/"/>
    
    <category term="道德经" scheme="https://chyriso.github.io/categories/hobby/%E5%9B%BD%E5%AD%A6/%E9%81%93%E5%BE%B7%E7%BB%8F/"/>
    
    
    <category term="国学" scheme="https://chyriso.github.io/tags/%E5%9B%BD%E5%AD%A6/"/>
    
    <category term="道德经" scheme="https://chyriso.github.io/tags/%E9%81%93%E5%BE%B7%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>hexo 性能优化</title>
    <link href="https://chyriso.github.io/2022/06/09/hexo-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>https://chyriso.github.io/2022/06/09/hexo-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</id>
    <published>2022-06-09T08:57:11.000Z</published>
    <updated>2022-06-10T04:57:57.082Z</updated>
    
    <content type="html"><![CDATA[<p>完成对 hexo 博客的美化以及部署工作之后，我发现主页的打开速度很慢，并且随着文章数量的增加，每次执行博客生成和部署命令时都需要等待一段时间。为此，需要对博客进行优化。</p><h2 id="vendors"><a href="#vendors" class="headerlink" title="vendors"></a>vendors</h2><p>参考<a href="https://theme-next.js.org/docs/advanced-settings/vendors">官方文档</a>，设置CDN。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vendors:</span><br><span class="line">  # The CDN provider of NexT internal scripts.</span><br><span class="line">  # Available values: local | jsdelivr | unpkg | cdnjs | custom</span><br><span class="line">  # Warning: If you are using the latest master branch of NexT, please set `internal: local`</span><br><span class="line">  internal: local</span><br><span class="line">  # The default CDN provider of third-party plugins.</span><br><span class="line">  # Available values: local | jsdelivr | unpkg | cdnjs | custom</span><br><span class="line">  # Dependencies for `plugins: local`: https://github.com/next-theme/plugins</span><br><span class="line">  plugins: cdnjs</span><br><span class="line">  # Custom CDN URL</span><br><span class="line">  # For example:</span><br><span class="line">  # custom_cdn_url: https://cdn.jsdelivr.net/npm/$&#123;npm_name&#125;@$&#123;version&#125;/$&#123;minified&#125;</span><br><span class="line">  # custom_cdn_url: https://cdnjs.cloudflare.com/ajax/libs/$&#123;cdnjs_name&#125;/$&#123;version&#125;/$&#123;cdnjs_file&#125;</span><br><span class="line">  custom_cdn_url:</span><br></pre></td></tr></table></figure><p>当默认CDN影响网站访问速度时，可以更换为其它 cdn，或者可以自定义 CDN。</p><h2 id="使用Hexo-neat插件对网页进行压缩"><a href="#使用Hexo-neat插件对网页进行压缩" class="headerlink" title="使用Hexo-neat插件对网页进行压缩"></a>使用Hexo-neat插件对网页进行压缩</h2><p>参考 GitHub <a href="https://github.com/rozbo/hexo-neat">官方文档</a>，安装Hexo-neat插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure><p>配置</p><p>在 <code>~/Hexo/_config.yml</code> 文件添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># hexo-neat</span><br><span class="line"># 博文压缩</span><br><span class="line">neat_enable: true</span><br><span class="line"># 压缩html</span><br><span class="line">neat_html:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line"># 压缩css  </span><br><span class="line">neat_css:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - &#x27;**/*.min.css&#x27;</span><br><span class="line"># 压缩js</span><br><span class="line">neat_js:</span><br><span class="line">  enable: true</span><br><span class="line">  mangle: true</span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - &#x27;**/*.min.js&#x27;</span><br><span class="line">    - &#x27;**/jquery.fancybox.pack.js&#x27;</span><br><span class="line">    - &#x27;**/index.js&#x27;</span><br></pre></td></tr></table></figure><h2 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h2><p>使用图片懒加载需要安装插件：<a href="https://github.com/Troy-Yang/hexo-lazyload-image">hexo-lazyload-image</a></p><p>在站点根目录执行下面的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-lazyload-image --save</span><br></pre></td></tr></table></figure><p>之后在站点配置文件下添加下面的代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 是否开启图片懒加载</span></span><br><span class="line">  <span class="attr">onlypost:</span> <span class="literal">false</span>  <span class="comment"># 是否只对文章的图片做懒加载</span></span><br><span class="line">  <span class="attr">loadingImg:</span> <span class="comment"># eg ./images/loading.gif</span></span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://theme-next.js.org/docs/advanced-settings/vendors">vendors 官方文档</a></p><p>[2] <a href="https://github.com/rozbo/hexo-neat">hexo-neat github</a></p><p>[3] <a href="https://github.com/Troy-Yang/hexo-lazyload-image">hexo-lazyload-image github</a></p><p>[4] <a href="https://shaogui.life/2022/01/05/Hexo%E5%8D%9A%E5%AE%A2%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96/">Hexo博客速度优化</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;完成对 hexo 博客的美化以及部署工作之后，我发现主页的打开速度很慢，并且随着文章数量的增加，每次执行博客生成和部署命令时都需要等待一段时间。为此，需要对博客进行优化。&lt;/p&gt;
&lt;h2 id=&quot;vendors&quot;&gt;&lt;a href=&quot;#vendors&quot; class=&quot;head</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="website" scheme="https://chyriso.github.io/categories/major/website/"/>
    
    <category term="hexo" scheme="https://chyriso.github.io/categories/major/website/hexo/"/>
    
    
    <category term="hexo" scheme="https://chyriso.github.io/tags/hexo/"/>
    
    <category term="CDN" scheme="https://chyriso.github.io/tags/CDN/"/>
    
    <category term="jsDelivr" scheme="https://chyriso.github.io/tags/jsDelivr/"/>
    
  </entry>
  
  <entry>
    <title>Git建立SSH连接</title>
    <link href="https://chyriso.github.io/2022/06/07/Git%E5%BB%BA%E7%AB%8BSSH%E8%BF%9E%E6%8E%A5/"/>
    <id>https://chyriso.github.io/2022/06/07/Git%E5%BB%BA%E7%AB%8BSSH%E8%BF%9E%E6%8E%A5/</id>
    <published>2022-06-07T09:16:39.000Z</published>
    <updated>2022-06-08T03:34:17.149Z</updated>
    
    <content type="html"><![CDATA[<p>Git是一款免费、开源的分布式版本控制系统，利用SSH可以与Github、Gitee这样的代码托管平台建立安全的连接，方便代码托管。</p><p>默认你已经正确安装了Git，并注册了Github和Gitee账号。</p><h2 id="设置用户名邮箱"><a href="#设置用户名邮箱" class="headerlink" title="设置用户名邮箱"></a>设置用户名邮箱</h2><p>打开Git Bash，分别输入下列命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.email &quot;your email&quot;</span><br></pre></td></tr></table></figure><p>下面这一行设置可以增强输出命令的可读性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global color.ui auto</span><br></pre></td></tr></table></figure><h2 id="生成公钥"><a href="#生成公钥" class="headerlink" title="生成公钥"></a>生成公钥</h2><p>打开Git Bash，执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your email&quot;</span><br></pre></td></tr></table></figure><p>回车之后，看到输出内容并执行下列操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key</span><br><span class="line">(/Users/your_user_directory/.ssh/id_rsa): (回车)</span><br><span class="line">Enter passphrase (empty for no passphrase): (回车)</span><br><span class="line">Enter same passphrase again: (回车)</span><br></pre></td></tr></table></figure><p>这样密钥文件就生成了，默认在用户目录下，如：C:\User\xxx.ssh\ 这个文件夹中。其中的 xxx 是你的windows用户名。</p><h2 id="为远程托管平台添加公钥"><a href="#为远程托管平台添加公钥" class="headerlink" title="为远程托管平台添加公钥"></a>为远程托管平台添加公钥</h2><p>在 <code>C:\user\xxx\.ssh\</code> 文件夹中找到 id_rsa.pub 这个文件，用文本编辑器打开，复制里面的所有内容。</p><h3 id="为-GitHub-添加公钥"><a href="#为-GitHub-添加公钥" class="headerlink" title="为 GitHub 添加公钥"></a>为 GitHub 添加公钥</h3><p>登陆github账号，点击头像展开，依次点击settings-&gt;SSH and GPG keys-&gt;New SSH key，在Title中取一个名字（任意），key中粘贴你刚刚复制的内容。然后点击Add SSH key即可。</p><h3 id="为-Gitee-添加公钥"><a href="#为-Gitee-添加公钥" class="headerlink" title="为 Gitee 添加公钥"></a>为 Gitee 添加公钥</h3><p>登陆 gitee 账号，点击头像展开，依次点击 设置-&gt;SSH公钥，在Title中取一个名字（任意），key中粘贴你刚刚复制的内容。然后点击确定即可。</p><h2 id="测试是否关联成功"><a href="#测试是否关联成功" class="headerlink" title="测试是否关联成功"></a>测试是否关联成功</h2><p>对 Github。打开Git Bash，执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现以下结果即为成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>对 Gitee。打开Git Bash，执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure><p>出现以下结果即为成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You&#x27;ve successfully authenticated, but Gitee does not provide shell access.</span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.liaoxuefeng.com/wiki/896043488029600/896954117292416">廖雪峰的官方网站</a></p><p>[2] <a href="https://zhuanlan.zhihu.com/p/108972475">将Git与Github进行SSH连接</a></p><p>[3] <a href="https://blog.csdn.net/m0_46267097/article/details/107468428">Gitee配置SSH公钥</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Git是一款免费、开源的分布式版本控制系统，利用SSH可以与Github、Gitee这样的代码托管平台建立安全的连接，方便代码托管。&lt;/p&gt;
&lt;p&gt;默认你已经正确安装了Git，并注册了Github和Gitee账号。&lt;/p&gt;
&lt;h2 id=&quot;设置用户名邮箱&quot;&gt;&lt;a href=</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="utils" scheme="https://chyriso.github.io/categories/major/utils/"/>
    
    <category term="Git" scheme="https://chyriso.github.io/categories/major/utils/Git/"/>
    
    
    <category term="git" scheme="https://chyriso.github.io/tags/git/"/>
    
    <category term="github" scheme="https://chyriso.github.io/tags/github/"/>
    
    <category term="gitee" scheme="https://chyriso.github.io/tags/gitee/"/>
    
  </entry>
  
  <entry>
    <title>hexo Next主题安装优化</title>
    <link href="https://chyriso.github.io/2022/06/05/hexo%20Next%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%BC%98%E5%8C%96/"/>
    <id>https://chyriso.github.io/2022/06/05/hexo%20Next%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%BC%98%E5%8C%96/</id>
    <published>2022-06-05T04:27:30.000Z</published>
    <updated>2022-06-09T08:33:11.470Z</updated>
    
    <content type="html"><![CDATA[<p>基于当前最新版本 hexo：v5.4.0 Next主题：NexT version 8.11.1</p><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>Hexo 的安装配置，可以参考<a href="https://hexo.io/zh-cn/docs/">官方文档</a>。Hexo 安装完成之后，通常需要为它安装一个主题，这里选择Next主题。</p><p>下载完成Next主题后，需要对其进行配置来优化页面内容，NeXT 主题的配置就是对 themes&#x2F;next 文件夹内的_config.yml 文件进行配置，可以参考<a href="https://theme-next.iissnan.com/getting-started.html">官方文档</a>。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>在安装Hexo前，您必须检查电脑中是否已安装下列应用程序：</p><ul><li><a href="https://nodejs.org/en/">Node.js(Should be at least nodejs 6.9)</a></li><li><a href="https://nodejs.org/en/">Git</a></li></ul><p>这两个都是常用的基础工具，不同版本安装方式可能不一样，直接去官网选择最新版本安装即可。</p><p>这里 Node.js 主要使用到了 npm 这个 nodejs 库管理软件。</p><p>安装完成后，在命令行中输入： <code>node -v</code> 和 <code>npm -v</code>，检查 nodejs 是否安装成功。使用<code>git --version</code> 检查 git 是否安装成功。</p><p>需要对git进行初始化设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.email &quot;your email&quot;</span><br></pre></td></tr></table></figure><p>执行ssh，检查命令是否有效：git默认携带该工具</p><hr><h2 id="hexo安装与初始化"><a href="#hexo安装与初始化" class="headerlink" title="hexo安装与初始化"></a>hexo安装与初始化</h2><h3 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h3><p>默认源在国外经常连接超时，所以首先需要修改成国内的镜像源，这里是改成了淘宝的镜像源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>使用 npm 安装即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>检查是否安装成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>在 linux 下直接安装会有权限问题（npm 默认会放到 &#x2F;usr&#x2F;lib&#x2F;node_modules 目录下，普通用户没有权限也不建议修改权限或使用 sudo），最好按照 npm 官方的<a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally">指南</a>安装到用户个人目录下。</p><h3 id="hexo初始化"><a href="#hexo初始化" class="headerlink" title="hexo初始化"></a>hexo初始化</h3><p>成功安装好 hexo 后，找一个合适的地方存放博客文件，初始化新建一个名为 hexo 的项目：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init hexo-site</span><br><span class="line"></span><br><span class="line">cd hexo-site</span><br><span class="line">npm install # 安装组件</span><br></pre></td></tr></table></figure><p>这样就新生成了一个名为 hexo 的文件夹，里边存放一些初始化的 hexo 博客文件。可以在本地打开查看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>这样会默认在本地生成一个博客系统，可以根据提示打开浏览器查看（默认在 <a href="http://localhost:4000/%EF%BC%89">http://localhost:4000/）</a></p><hr><h2 id="Next主题安装和启用"><a href="#Next主题安装和启用" class="headerlink" title="Next主题安装和启用"></a>Next主题安装和启用</h2><p>这里使用 hexo 的主题 <a href="https://theme-next.js.org/">NexT</a>，安装步骤参考<a href="https://theme-next.js.org/docs/getting-started/">官方的说明</a>文档，安装最新的一个 release 版本。</p><h3 id="Next主题安装"><a href="#Next主题安装" class="headerlink" title="Next主题安装"></a>Next主题安装</h3><p>安装方式分为两种，npm 和 git，下面是这两种安装方式：</p><p><em>npm安装方式</em></p><p>If you’re using Hexo 5.0 or later, the simplest way to install is through npm.<br>Open your Terminal, change to Hexo site root directory and install NexT theme:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> hexo-site</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-theme-next</span></span><br></pre></td></tr></table></figure><p><em>git安装方式</em></p><p>If you know about Git, you can clone the whole repository and update it in any time with git pull command instead of downloading archive manually.<br>Open your terminal, change to Hexo site root directory and clone the latest master branch of NexT theme:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> hexo-site</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure><h3 id="启用Next主题"><a href="#启用Next主题" class="headerlink" title="启用Next主题"></a>启用Next主题</h3><p>在站点根目录下打开_config.yml文件，设置Extensions，启用Next主题。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment">#theme: landscape</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><hr><h2 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h2><p>生成的 hexo 主目录下有一个名为_config.yml 的文件，需要修改一些参数，具体细节可以参考<a href="https://hexo.io/zh-cn/docs/configuration">官方文档</a>，下面是部分我使用修改的参数。</p><h3 id="设置站点基本信息及-url"><a href="#设置站点基本信息及-url" class="headerlink" title="设置站点基本信息及 url"></a>设置站点基本信息及 url</h3><p>根据网站信息修改即可，url 为网站地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Chyris</span><br><span class="line">subtitle: &#x27;code english&#x27;</span><br><span class="line">description: &#x27;The rain fell, on my body&#x27;</span><br><span class="line">keywords:</span><br><span class="line">author: Chyris</span><br><span class="line">language: en</span><br><span class="line">#language: zh-CN</span><br><span class="line">#language: zh-Hans</span><br><span class="line">timezone: &#x27;&#x27;</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="line">#url: http://example.com</span><br><span class="line">url: https://chyriso.github.io/</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br></pre></td></tr></table></figure><h3 id="read-more"><a href="#read-more" class="headerlink" title="read more"></a>read more</h3><p>文章截断在主题配置文件下默认打开。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Automatically excerpt description in homepage as preamble text.</span><br><span class="line">excerpt_description: true</span><br></pre></td></tr></table></figure><h4 id="写概述"><a href="#写概述" class="headerlink" title="写概述"></a>写概述</h4><p>在文章的front-matter中添加description，其中description中的内容就会被显示在首页上，其余一律不显示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 让首页显示部分内容</span><br><span class="line">date: 2022-06-09 14:30:00</span><br><span class="line">description: 这是显示在首页的概述，正文内容均会被隐藏。</span><br></pre></td></tr></table></figure><p>比较不方便的是还得写一下概述，于是就需要第二种方法了。</p><h4 id="文章截断"><a href="#文章截断" class="headerlink" title="文章截断"></a>文章截断</h4><p>在需要截断的地方加入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><p>首页就会显示这条以上的所有内容，隐藏接下来的所有内容。</p><h4 id="hexo-excerpt插件"><a href="#hexo-excerpt插件" class="headerlink" title="hexo-excerpt插件"></a>hexo-excerpt插件</h4><p>参考<a href="https://www.npmjs.com/package/hexo-excerpt">官方文档</a>，使用 npm 安装 hexo-excerpt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-excerpt --save</span><br></pre></td></tr></table></figure><p>在站点配置文件中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">excerpt:</span><br><span class="line">  depth: 5</span><br><span class="line">  excerpt_excludes: []</span><br><span class="line">  more_excludes: []</span><br><span class="line">  hideWholePostExcerpts: true</span><br></pre></td></tr></table></figure><h3 id="同步生成资源文件夹"><a href="#同步生成资源文件夹" class="headerlink" title="同步生成资源文件夹"></a>同步生成资源文件夹</h3><p>参考官方文档<a href="https://hexo.io/zh-cn/docs/asset-folders">资源文件夹</a>部分配置说明以及 hexo-renderer-marked markdown 渲染器<a href="https://github.com/hexojs/hexo-renderer-marked">Github仓库</a>。下面“使用markdown 语法插入图片”（Embedding an image using markdown）是 hexo-renderer-marked 3.1.0 版本之后新增的功能。</p><h4 id="资源文件夹"><a href="#资源文件夹" class="headerlink" title="资源文件夹"></a>资源文件夹</h4><p>资源（Asset）代表 source 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 source&#x2F;images 文件夹中。然后通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们。</p><p>对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 _config.yml 文件中的 post_asset_folder 选项设为 true 来打开。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p><h4 id="相对路径引用的标签插件"><a href="#相对路径引用的标签插件" class="headerlink" title="相对路径引用的标签插件"></a>相对路径引用的标签插件</h4><p>通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_path slug %&#125;</span><br><span class="line">&#123;% asset_img slug [title] %&#125;</span><br><span class="line">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure><p>比如说：当你打开文章资源文件夹功能后，你把一个 example.jpg 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 <code>![](example.jpg)</code> ，它将 不会 出现在首页上。（但是它会在文章中按你期待的方式工作）</p><p>正确的引用图片方式是使用下列的标签插件而不是 markdown ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure><p>通过这种方式，图片将会同时出现在文章和主页以及归档页中。</p><h4 id="Embedding-an-image-using-markdown"><a href="#Embedding-an-image-using-markdown" class="headerlink" title="Embedding an image using markdown"></a>Embedding an image using markdown</h4><p>hexo-renderer-marked 3.1.0 introduced a new option that allows you to embed an image in markdown without using asset_img tag plugin.</p><p>To enable:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">_config.yml</span><br><span class="line">post_asset_folder: true</span><br><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure><p>Once enabled, an asset image will be automatically resolved to its corresponding post’s path. For example, “image.jpg” is located at “&#x2F;2020&#x2F;01&#x2F;02&#x2F;foo&#x2F;image.jpg”, meaning it is an asset image of “&#x2F;2020&#x2F;01&#x2F;02&#x2F;foo&#x2F;“ post, <code>![](image.jpg)</code> will be rendered as <code>&lt;img src=&quot;/2020/01/02/foo/image.jpg&quot;&gt;</code>.</p><h3 id="更换渲染器"><a href="#更换渲染器" class="headerlink" title="更换渲染器"></a>更换渲染器</h3><p>hexo 默认使用渲染器为 <a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>，但是默认渲染器并不支持对数学公式和注脚的处理，所以需要更换渲染器。</p><p>目前，NexT 提供两种数学公式渲染引擎，分别为 MathJax 和 Katex。</p><ul><li><p>MathJax</p><p>如果你选择使用 MathJax 进行数学公式渲染，你需要使用 hexo-renderer-pandoc 或者 hexo-renderer-kramed （不推荐）作为 Hexo 的 Markdown 渲染器。</p></li><li><p>Katex</p><p>Katex 渲染引擎相对于 MathJax 来说大大提高了速度，而且在关掉 JavaScript 时也能渲染数学公式。但是 Katex 所支持的东西没有 MathJax 全面。</p><p>如果你选择使用 Katex 进行数学公式渲染，你需要使用 hexo-renderer-markdown-it-plus 或者 hexo-renderer-markdown-it 这两种渲染器的其中一个。</p></li></ul><p>为hexo更换渲染器，请参考<a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/MATH.md">官方文档</a>，这里采用 hexo-renderer-pandoc 作为渲染器。</p><h4 id="本地安装-pandoc"><a href="#本地安装-pandoc" class="headerlink" title="本地安装 pandoc"></a>本地安装 pandoc</h4><p>更换 hexo-renderer-pandoc 渲染器，需要在本地安装 pandoc 这个软件，在官网上下载 pandoc，直接安装即可。</p><blockquote><p>安装完成后，<code>hexo g</code> 一直提示 <code>pandoc exited with code null</code> ，记得电脑重启一下。</p></blockquote><h4 id="更换默认渲染器"><a href="#更换默认渲染器" class="headerlink" title="更换默认渲染器"></a>更换默认渲染器</h4><p>使用 <a href="https://github.com/wzpan/hexo-renderer-pandoc">hexo-renderer-pandoc</a> 作为hexo渲染器，你需要先将默认的渲染器卸载，然后安装 hexo-renderer-pandoc。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line"></span><br><span class="line">npm un hexo-renderer-marked  </span><br><span class="line">npm i hexo-renderer-pandoc  </span><br></pre></td></tr></table></figure><p>然后对 next&#x2F;_config.yml 中 math 选项进行设置</p><ul><li>将 mathjax 的 enable 打开，mathjax和katex只能有一个置为true</li><li>every_page 选项，默认为false，表示只对文章front-matter中含有<code>mathjax: true</code> 语句的文章进行渲染，为true表示会所有文章进行渲染，不管有没有加上 <code>mathjax: true</code> 语句。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># Default (false) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to true, it will load mathjax / katex script EVERY PAGE.</span></span><br><span class="line">  <span class="attr">every_page:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: none | ams | all</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="string">none</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class="line">    <span class="attr">copy_tex:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="完成部署"><a href="#完成部署" class="headerlink" title="完成部署"></a>完成部署</h4><p>执行 Hexo 生成，部署，或者启动服务器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line"></span><br><span class="line">hexo clean &amp;&amp; hexo g -d</span><br><span class="line"># 或者 hexo clean &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><blockquote><p>如果hexo还没有远程部署，你将无法使用 hexo d 命令。</p></blockquote><h3 id="hexo远程部署"><a href="#hexo远程部署" class="headerlink" title="hexo远程部署"></a>hexo远程部署</h3><p>Hexo 提供了快速方便的[一键部署]功能，只需一条命令就能将网站部署到服务器上。参考<a href="https://hexo.io/zh-cn/docs/one-command-deployment">官方文档</a>，hexo 可以部署的服务器有很多，只需要下载相关部署插件，并在站点配置文件做出相应修改即可。</p><p>这里部署到 GitHub 服务器上(GitHub Pages)。</p><h4 id="环境准备-1"><a href="#环境准备-1" class="headerlink" title="环境准备"></a>环境准备</h4><p>确保之前环境搭建完成，还需要创建仓库和建立ssh连接，开启远程部署。</p><p>创建仓库</p><p>部署hexo，首先需要在GitHub创建一个仓库，用来部署hexo博客，仓库名应该遵循：<code>GitHub账号用户名.github.io</code>，这样，仓库会被自动识别为开启 GitHub Pages 服务。</p><ul><li>repository name：username.github.io</li><li>set public</li><li>add a readme.md file</li></ul><p>建立ssh连接</p><ul><li>windows任意目录右键: git bash here</li><li>执行：<code>ssh-keygen -t rsa -C &quot;your@email.com&quot;</code><blockquote><p>Generating public&#x2F;private rsa key pair.<br>  Enter file in which to save the key<br>  (&#x2F;Users&#x2F;your_user_directory&#x2F;.ssh&#x2F;id_rsa): (回车)<br>  Enter passphrase (empty for no passphrase): (回车)<br>  Enter same passphrase again: (回车)</p></blockquote></li><li>打开c:&#x2F;Users&#x2F;用户名&#x2F;.ssh&#x2F;id_rsa.pub文件，复制文件中的内容</li><li>回到 github 点击头像-&gt;settings：找到 SSH and GPG keys-&gt;SSH keys</li><li>点击New SSH key，输入title和key，将刚才复制过来的内容粘贴到key中，点击 add ssh key 保存</li><li>回到命令行执行： <code>ssh -T git@github.com</code>，检查设置是否成功</li></ul><h4 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h4><p>打开站点根目录下 _config.yml 文件，进行如下设置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="comment">#deploy:</span></span><br><span class="line"><span class="comment">#  type: &#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for github</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:chyriso/chyriso.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>安装git部署插件 hexo-deployer-git</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line"></span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>分别执行下面三条命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line"></span><br><span class="line">hexo clean   #清除缓存文件 db.json 和已生成的静态文件 public</span><br><span class="line">hexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span><br><span class="line">hexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span><br></pre></td></tr></table></figure><p>访问链接：<a href="https://chyriso.github.io/">https://chyriso.github.io/</a> ，至此，远程部署到GitHub基本完成。</p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>失败的原因有很多，总结以下几个：</p><p><em>执行路径不正确</em></p><p>切换到博客根目录执行命令</p><p><em>hexo 或 npm 命令没有管理员权限</em></p><p>切换到系统管理员打开命令行执行（在管理员用户，或管理员权限命令行执行所有命令，可以解决所有权限问题）</p><p><em>网络异常，npm 下载不成功</em></p><p>重新下载，或配置镜像仓库 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line">npm install xxx --registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p><em>npm 依赖缺失</em></p><p>npm install: 在本地 node_modules 文件夹中安装 package.json 中为依赖项的所有模块。</p><h4 id="Gitee-部署"><a href="#Gitee-部署" class="headerlink" title="Gitee 部署"></a>Gitee 部署</h4><p>如果已经成功使用 GitHub 部署 hexo，那么使用 Gitee 部署也就不会太过困难。Gitee 方式部署和 Github 部署方式略有区别，这里补充说明。</p><p>其它过程遵循 GitHub 部署过程，下面是Gitee特有的配置。</p><p>在 gitee 创建一个仓库，仓库名用用户名即可，即：</p><ul><li>repository name：username</li><li>set public</li><li>add a readme.md file</li></ul><p>将 C:&#x2F;Users&#x2F;用户名&#x2F;.ssh&#x2F;id_rsa.pub 内容复制，登录gitee-&gt;点击头像-&gt;设置-&gt;SSH公钥-&gt; 添加标题（随意），将刚才复制的内容粘贴进公钥位置-&gt;确定。使用 <code>ssh -T git@gitee.com</code>，检查设置是否成功。</p><p>打开站点根目录下 _config.yml 文件，进行如下设置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="comment">#deploy:</span></span><br><span class="line"><span class="comment">#  type: &#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for gitee</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://gitee.com/chyris/chyris.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for github</span></span><br><span class="line"><span class="comment">#deploy:</span></span><br><span class="line"><span class="comment">#  type: git</span></span><br><span class="line"><span class="comment">#  repo: git@github.com:chyriso/chyriso.github.io.git</span></span><br><span class="line"><span class="comment">#  branch: main</span></span><br></pre></td></tr></table></figure><p>使用下面命令将本地博客推送到gitee仓库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>进入仓库页面，点击服务-&gt;Gitee Pages-&gt;选择master，强制使用https-&gt;更新。</p><p>访问链接：<a href="https://chyris.gitee.io/">https://chyris.gitee.io/</a> ，至此，远程部署到Gitee基本完成。</p><hr><h2 id="Next配置"><a href="#Next配置" class="headerlink" title="Next配置"></a>Next配置</h2><p>Next主题配置主要是在 themes&#x2F;next&#x2F;_config.yml 文件下进行，修改所需要的配置即可。</p><h3 id="Next主题类型"><a href="#Next主题类型" class="headerlink" title="Next主题类型"></a>Next主题类型</h3><p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以在 Scheme 之间共用。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Dark Mode</span></span><br><span class="line"><span class="attr">darkmode:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>四种主题类型请自行挑选，可以设置黑暗模式</p><h3 id="Social-Links"><a href="#Social-Links" class="headerlink" title="Social Links"></a>Social Links</h3><p>打开所需Social Links字段，修改为自己的账号信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="comment">#GitHub: https://github.com/yourname || fab fa-github</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/chyriso</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">Gitee:</span> <span class="string">https://gitee.com/chyris</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:yourname@gmail.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || fab fa-google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || fab fa-facebook</span></span><br><span class="line">  <span class="attr">StackOverflow:</span> <span class="string">https://stackoverflow.com/yourname</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || fab fa-youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || fab fa-instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || fab fa-skype</span></span><br></pre></td></tr></table></figure><h3 id="盘古插件"><a href="#盘古插件" class="headerlink" title="盘古插件"></a>盘古插件</h3><p>为方便显示，在中英文和数字之间合适位置加入一下空格间隔以美化 UI。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pangu:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="自定义文件的路径"><a href="#自定义文件的路径" class="headerlink" title="自定义文件的路径"></a>自定义文件的路径</h3><p>修改主题配置文件 custom_file_path 部分，在站点目录下 source&#x2F;_data（没有自己建） 中新建对应的文件即可。例如：新建 footer.njk 文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Define custom file paths.</span><br><span class="line"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span><br><span class="line">custom_file_path:</span><br><span class="line">  #head: source/_data/head.njk</span><br><span class="line">  #header: source/_data/header.njk</span><br><span class="line">  #sidebar: source/_data/sidebar.njk</span><br><span class="line">  #postMeta: source/_data/post-meta.njk</span><br><span class="line">  #postBodyEnd: source/_data/post-body-end.njk</span><br><span class="line">  #footer: source/_data/footer.njk</span><br><span class="line">  footer: source/_data/footer.njk</span><br><span class="line">  #bodyEnd: source/_data/body-end.njk</span><br><span class="line">  #variable: source/_data/variables.styl</span><br><span class="line">  #mixin: source/_data/mixins.styl</span><br><span class="line">  #style: source/_data/styles.styl</span><br></pre></td></tr></table></figure><h3 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h3><p>先配置自定义文件的路径，<code>source/_data/head.njk</code></p><p>在 source&#x2F;_data&#x2F;head.njk 添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 文章加密 --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    (function()&#123;</span><br><span class="line">        if(&#x27;&#123;&#123; page.password &#125;&#125;&#x27;)&#123;</span><br><span class="line">            if (prompt(&#x27;请输入文章密码&#x27;) !== &#x27;&#123;&#123; page.password &#125;&#125;&#x27;)&#123;</span><br><span class="line">                alert(&#x27;密码错误！&#x27;);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后文章中添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password: password</span><br></pre></td></tr></table></figure><p>如果 password 后面为空，则表示不用密码。</p><h3 id="Local-Search"><a href="#Local-Search" class="headerlink" title="Local Search"></a>Local Search</h3><p>Next 主题自带搜索功能<a href="https://github.com/next-theme/hexo-generator-searchdb">Local Search</a>，设置 <code>enable:true</code> 即可打开：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="comment">#enable: false</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="Canvas-ribbon-背景"><a href="#Canvas-ribbon-背景" class="headerlink" title="Canvas ribbon 背景"></a>Canvas ribbon 背景</h3><p>Next 默认支持的背景Canvas ribbon，设置 <code>enable:true</code> 即可打开：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Canvas ribbon</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/hustcc/ribbon.js</span></span><br><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line">  <span class="comment">#enable: false</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">size:</span> <span class="number">300</span> <span class="comment"># The width of the ribbon</span></span><br><span class="line">  <span class="attr">alpha:</span> <span class="number">0.6</span> <span class="comment"># The transparency of the ribbon</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span> <span class="comment"># The display level of the ribbon</span></span><br></pre></td></tr></table></figure><p>也可以更换其它背景，例如：Canvas nest 背景动画，是一个几乎不影响性能的背景动画，配置细节参考官方说明。 在 根目录下 source&#x2F;_data 目录 (若不存在则新建一个) 下新建文件 footer.njk，内容（默认来自 jsdelivr 但是最近似乎国内访问出现问题，故改成了来自一个国内的 cdnjs 镜像 sourcegcdn）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">color</span>=<span class="string">&quot;0,0,255&quot;</span> <span class="attr">opacity</span>=<span class="string">&quot;0.5&quot;</span> <span class="attr">zIndex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">count</span>=<span class="string">&quot;99&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.sourcegcdn.com//ajax/libs/canvas-nest.js/1.0.1/canvas-nest.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在 NexT 的配置文件中找到 custom_file_path 一项将 footer 一行取消注释：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">footer:</span> <span class="string">source/_data/footer.njk</span></span><br></pre></td></tr></table></figure><p>上述两种背景配置方式不同，且可以共存。</p><h3 id="分享按钮"><a href="#分享按钮" class="headerlink" title="分享按钮"></a>分享按钮</h3><p>参考此<a href="https://github.com/theme-next/hexo-next-share">仓库</a>的配置，首先安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install theme-next/hexo-next-share</span><br></pre></td></tr></table></figure><p>接下来写入配置文件，我使用的是 share.js（默认的 cdn 由 jsdelivr 改为 cdnjs 镜像 sourcegcdn）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># share.js</span><br><span class="line"># See: https://github.com/overtrue/share.js</span><br><span class="line"># networks: weibo,qq,wechat,tencent,douban,qzone,linkedin,diandian,facebook,twitter,google</span><br><span class="line">sharejs:</span><br><span class="line">  enable: true</span><br><span class="line">  cdn:</span><br><span class="line">    js: https://cdnjs.sourcegcdn.com/ajax/libs/social-share.js/1.0.16/js/social-share.min.js</span><br><span class="line">    css: https://cdnjs.sourcegcdn.com/ajax/libs/social-share.js/1.0.16/css/share.min.css</span><br><span class="line">  networks: weibo,qq,wechat,tencent,douban,qzone,linkedin,diandian,facebook,twitter,google</span><br><span class="line">  wechat_qrcode:</span><br><span class="line">    title: share.title</span><br><span class="line">    prompt: share.prompt</span><br></pre></td></tr></table></figure><h3 id="文末添加今日诗词"><a href="#文末添加今日诗词" class="headerlink" title="文末添加今日诗词"></a>文末添加今日诗词</h3><p>给个人博客添加一些人文气息，文末调用今日诗词的 API 根据访问的时间地点等智能推荐一句诗词，参考官方提供的<a href="https://www.jinrishici.com/doc/#json-fast">接口文档</a>，使用高级安装代码以显示更多信息。</p><p>首先通过主题配置将自定义页尾项取消注释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">custom_file_path:</span><br><span class="line">  postBodyEnd: source/_data/post-body-end.njk</span><br></pre></td></tr></table></figure><p>然后新建文件 <code>source/_data/post-body-end.njk</code>，并在其中加入下面内容即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;//sdk.jinrishici.com/v2/browser/jinrishici.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  jinrishici.load((result) =&gt; &#123;</span><br><span class="line">    let jrsc = document.getElementById(&#x27;jrsc&#x27;);</span><br><span class="line">    const data = result.data;</span><br><span class="line">    let author = data.origin.author;</span><br><span class="line">    let title = &#x27;《&#x27; + data.origin.title + &#x27;》&#x27;;</span><br><span class="line">    let content = data.content.substr(0, data.content.length - 1);</span><br><span class="line">    let dynasty = data.origin.dynasty.substr(0, data.origin.dynasty.length - 1);</span><br><span class="line">    jrsc.innerText = content + &#x27; @ &#x27; + dynasty + &#x27;·&#x27; + author + title;</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;div style=&quot;text-align: center&quot;&gt;&lt;span id=&quot;jrsc&quot; &gt;正在加载今日诗词....&lt;/span&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="添加版权协议"><a href="#添加版权协议" class="headerlink" title="添加版权协议"></a>添加版权协议</h3><p>为自己博客文章添加创作许可协议，个人使用的是署名 - 非商业性 - 相同方式共享协议，直接在配置文件中找到 <code>creative_commons</code> 部分把 post 设置为 <code>true</code> 即可，这样文末会自动添加协议。</p><p>如果个别博客文章是转载，只需要在博客头部加入 <code>author</code> 以及 <code>url</code> 即可。另外如需要关闭版权协议，也只需要在对应博客头中设置 <code>copyright: false</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Creative Commons 4.0 International License.</span><br><span class="line"># See: https://creativecommons.org/about/cclicenses/</span><br><span class="line">creative_commons:</span><br><span class="line">  # Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | cc-zero</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  # Available values: big | small</span><br><span class="line">  size: small</span><br><span class="line">  sidebar: true</span><br><span class="line">  post: true</span><br><span class="line">  # You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span><br><span class="line">  # CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure><h3 id="follow-me"><a href="#follow-me" class="headerlink" title="follow_me"></a>follow_me</h3><p>next主题支持rss订阅关注和其它渠道的关注，如果微信、推特等</p><p>找到next主题配置文件中的follow_me配置项，然后打开响应的渠道即可，打开后会在站点footer区域中显示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Subscribe through Telegram Channel, Twitter, etc.</span><br><span class="line"># Usage: `Key: permalink || icon` (Font Awesome)</span><br><span class="line">follow_me:</span><br><span class="line">  #Twitter: https://twitter.com/username || fab fa-twitter</span><br><span class="line">  #Telegram: https://t.me/channel_name || fab fa-telegram</span><br><span class="line">  #WeChat: /images/wechat_channel.jpg || fab fa-weixin</span><br><span class="line">  #RSS: /atom.xml || fa fa-rss</span><br><span class="line">  #RSS: /atom.xml || fa fa-rss</span><br></pre></td></tr></table></figure><h3 id="生成站点地图"><a href="#生成站点地图" class="headerlink" title="生成站点地图"></a>生成站点地图</h3><p>站点地图描述了网站的结构，会帮助搜索引擎的爬虫去找到网站中的各个页面。 具体配置可以参考<a href="https://github.com/hexojs/hexo-generator-sitemap">仓库</a>，安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><h3 id="添加右上角图标-folk-github"><a href="#添加右上角图标-folk-github" class="headerlink" title="添加右上角图标 folk github"></a>添加右上角图标 folk github</h3><p>从<a href="http://tholman.com/github-corners/">这里</a>找到自己喜欢的样式，并复制代码</p><p>打开：<code>themes\next\layout\_layout.njk</code></p><p>找到这行 div 标签并添加代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;!--下面一行插入复制代码，注意换成自己的github地址：href=&quot;https://github.com/chyriso/&quot;--&gt;</span><br></pre></td></tr></table></figure><h3 id="头像设置"><a href="#头像设置" class="headerlink" title="头像设置"></a>头像设置</h3><p>将头像图片放在主题目录下： &#x2F;source&#x2F;images&#x2F; 中，进行下列设置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  #url: #/images/avatar.gif</span><br><span class="line">  url: /images/avatar.jpg</span><br><span class="line">  # If true, the avatar will be displayed in circle.</span><br><span class="line">  #rounded: false</span><br><span class="line">  rounded: false</span><br><span class="line">  # If true, the avatar will be rotated with the cursor.</span><br><span class="line">  #rotated: false</span><br><span class="line">  rotated: false</span><br></pre></td></tr></table></figure><h3 id="Waline-评论系统"><a href="#Waline-评论系统" class="headerlink" title="Waline 评论系统"></a>Waline 评论系统</h3><p>由于安全性、隐私等问题，next-theme主题移除了 valine 的支持，为了解决 valine 中遇到的问题，Waline 出现了。Waline 是一款从 Valine 衍生的带后端评论系统。可以将 Waline 等价成 With backend Valine.</p><p>参考<a href="https://waline.js.org/guide/get-started.html">官网教程</a>，采用 LeanCloud + Vercel 的部署方式</p><p>由于 Next 主题中并不自带 Waline 的评论配置，我们需要安装官方提供的插件。在 Hexo 根目录执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @waline/hexo-next</span><br></pre></td></tr></table></figure><p>找到 Next 的主题配置文件，在最后加上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Waline</span><br><span class="line"># For more information: https://waline.js.org, https://github.com/walinejs/waline</span><br><span class="line">waline:</span><br><span class="line">  enable: true</span><br><span class="line">  serverURL: waline-server-pearl.vercel.app # Waline #服务端地址，即部署的 Vercel 地址</span><br><span class="line">  placeholder: 请文明评论呀 # #评论框的默认文字</span><br><span class="line">  avatar: mm # 头像风格</span><br><span class="line">  meta: [nick, mail, link] # 自定义评论框上面的三个输入框的内容</span><br><span class="line">  pageSize: 10 # 评论数量多少时显示分页</span><br><span class="line">  lang: zh-cn # 语言, 可选值: en, zh-cn</span><br><span class="line">  # Warning: 不要同时启用 `waline.visitor` 以及 `leancloud_visitors`.</span><br><span class="line">  visitor: false # 文章阅读统计</span><br><span class="line">  comment_count: true # 如果为 false , 评论数量只会在当前评论页面显示, 主页则不显示</span><br><span class="line">  requiredFields: [] # 设置用户评论时必填的信息，[nick,mail]: [nick] | [nick, mail]</span><br><span class="line">  libUrl: # Set custom library cdn url</span><br></pre></td></tr></table></figure><p>数据库及评论系统后端参考官网即可，由于网络问题，这里不做演示。</p><h3 id="Donate"><a href="#Donate" class="headerlink" title="Donate"></a>Donate</h3><p>捐赠就是在我的每篇文章下边都会有的一个按钮，点开了之后就会弹出微信&#x2F;支付宝转账页面，如果有读者喜欢这篇文章就可以通过捐赠来支持作者。</p><p>打开主题配置文件_config.yml，设置Donate (Sponsor) settings字段</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Donate (Sponsor) settings</span></span><br><span class="line"><span class="comment"># Front-matter variable (nonsupport animation).</span></span><br><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, a donate button will be displayed in every article by default.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">comment:</span> <span class="string">Buy</span> <span class="string">me</span> <span class="string">a</span> <span class="string">coffee</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line"><span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.jpg</span></span><br><span class="line"><span class="comment">#alipay: /images/alipay.png</span></span><br><span class="line"><span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line"><span class="comment">#bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure><p>将自己的收款二维码信息放在主题目录下source&#x2F;images目录下即可。</p><h3 id="不蒜子统计"><a href="#不蒜子统计" class="headerlink" title="不蒜子统计"></a>不蒜子统计</h3><p>不蒜子统计统计设置完成后会在站点的底部生成总访问人数和总访问量。</p><p>打开主题配置文件_config.yml，设置busuanzi_count字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Show Views / Visitors of the website / page with busuanzi.</span><br><span class="line"># For more information: http://ibruce.info/2015/04/04/busuanzi/</span><br><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: fa fa-user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: fa fa-eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: far fa-eye</span><br></pre></td></tr></table></figure><h3 id="links"><a href="#links" class="headerlink" title="links"></a>links</h3><p>在 links 中添加链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Blog rolls</span><br><span class="line">links_settings:</span><br><span class="line">  icon: fa fa-globe</span><br><span class="line">  title: Links</span><br><span class="line">  # Available values: block | inline</span><br><span class="line">  layout: block</span><br><span class="line"></span><br><span class="line">links:</span><br><span class="line">  #Title: https://example.com</span><br><span class="line">  bilibili.com: https://www.bilibili.com/</span><br></pre></td></tr></table></figure><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://blog.csdn.net/jsd581/article/details/119821267">Hexo及Next主题配置</a></p><p>[2] <a href="https://zhuanlan.zhihu.com/p/102592286">从零开始搭建个人博客</a></p><p>[3] <a href="https://cloud.tencent.com/developer/article/2001105">Hexo + Gitee 博客搭建详细指南</a></p><p>[4] <a href="https://zhuanlan.zhihu.com/p/144722437">Hexo建站手册</a></p><p>[5] <a href="https://zhuanlan.zhihu.com/p/60578464">使用 Hexo+GitHub 搭建个人免费博客教程</a></p><p>[6] <a href="https://blog.csdn.net/weixin_45073562/article/details/120289648">pandoc exited with code null</a></p><p>[7] <a href="http://home.ustc.edu.cn/~liujunyan/blog/hexo-next-theme-config/">Hexo 博客 NexT 主题的安装使用</a></p><p>[8] <a href="https://iitii.github.io/2021/05/28/1/#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E4%BB%B6%E7%9A%84%E8%B7%AF%E5%BE%84">Hexo Next 主题安装、配置及美化</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;基于当前最新版本 hexo：v5.4.0 Next主题：NexT version 8.11.1&lt;/p&gt;
&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;p&gt;H</summary>
      
    
    
    
    <category term="major" scheme="https://chyriso.github.io/categories/major/"/>
    
    <category term="website" scheme="https://chyriso.github.io/categories/major/website/"/>
    
    <category term="hexo" scheme="https://chyriso.github.io/categories/major/website/hexo/"/>
    
    
    <category term="hexo" scheme="https://chyriso.github.io/tags/hexo/"/>
    
    <category term="Next" scheme="https://chyriso.github.io/tags/Next/"/>
    
  </entry>
  
</feed>
